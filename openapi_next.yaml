openapi: 3.0.2
info:
  title: Draft BIG-IP Next API Specification
  version: 208.23.2
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.big-ip-next.f5.com/api/v1
    description: 'The only thing matters for now is the base path: /api/v1'
paths:
  /gui:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: The base URL to get to GUI server.
      operationId: getUiIndex
      description: Get UI index file.
      responses:
        '200':
          description: OK
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /gui/{uiPath}:
    parameters:
      - name: uiPath
        in: path
        required: true
        description: The Path to UI resource files such as htm and js files.
        schema:
          type: string
          pattern: .*
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: The base URL to get to GUI server.
      operationId: getUiResources
      description: Get various UI resource files.
      responses:
        '200':
          description: OK
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /applications:
    get:
      summary: List all applications
      description: List all applications.
      operationId: getApplications
      tags:
        - Application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
              examples:
                get_applications:
                  $ref: '#/components/examples/get_applications'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Applications'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Add a new application
      description: Add a new application.
      operationId: createApplication
      tags:
        - Application
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Application'
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
            examples:
              put_application:
                $ref: '#/components/examples/create_or_update_application'
              put_multi_host_tls_application:
                $ref: >-
                  #/components/examples/create_or_update_multi_host_tls_application
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /applications/{appId}:
    parameters:
      - name: appId
        in: path
        description: The application ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        example: 86657e15-439d-4cef-97bc-58a6c119976b
    get:
      summary: Get an application
      description: Get an application.
      operationId: getApplication
      tags:
        - Application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
              examples:
                get_application:
                  $ref: '#/components/examples/get_application'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Application'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update an application
      description: Update an application.
      operationId: updateApplication
      tags:
        - Application
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Application'
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
            examples:
              put_application_by_id:
                $ref: '#/components/examples/create_or_update_application'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete an application
      description: Delete an application.
      operationId: removeApplication
      tags:
        - Application
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /applications/{appId}/stacks:
    parameters:
      - name: appId
        in: path
        description: The application ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        example: 86657e15-439d-4cef-97bc-58a6c119976b
    get:
      summary: List all stacks
      description: List all stacks.
      operationId: getStacks
      tags:
        - Application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stack'
              examples:
                get_stacks:
                  $ref: '#/components/examples/get_stacks'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Stacks'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Create a stack
      description: Create a stack.
      operationId: createStack
      tags:
        - Application
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Stack'
          application/json:
            schema:
              $ref: '#/components/schemas/Stack'
            examples:
              put_stack:
                $ref: '#/components/examples/create_or_update_stack'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /applications/{appId}/stacks/{stackId}:
    parameters:
      - name: appId
        in: path
        description: The application ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        example: 86657e15-439d-4cef-97bc-58a6c119976b
      - in: path
        name: stackId
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        example: 128e8854-f886-44ea-9b24-ba34d203e419
        description: The network ID.
    get:
      summary: Get a stack
      description: Get a stack.
      operationId: getStack
      tags:
        - Application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
              examples:
                get_stack:
                  $ref: '#/components/examples/get_stack'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Stack'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a stack by ID
      description: Update a stack by ID.
      operationId: updateStack
      tags:
        - Application
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Stack'
          application/json:
            schema:
              $ref: '#/components/schemas/Stack'
            examples:
              update_stack_by_id:
                $ref: '#/components/examples/create_or_update_stack'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a stack
      description: Delete a stack.
      operationId: removeStack
      tags:
        - Application
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /jobs:
    get:
      summary: List all jobs
      description: List all jobs.
      operationId: getJobs
      tags:
        - Job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Jobs'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /jobs/{jobId}:
    parameters:
      - name: jobId
        in: path
        description: The job ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
    get:
      summary: Get a job
      description: Get a job.
      operationId: getJobById
      tags:
        - Job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Job'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /L1-networks:
    get:
      summary: Retrieve the current collection of L1-network objects.
      description: A collection of L1-network objects.
      operationId: getL1Networks
      tags:
        - L1-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L1Network'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L1Networks'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L1-network object.
      description: A collection of L1-network objects.
      operationId: updateL1Networks
      tags:
        - L1-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L1Network'
          application/json:
            schema:
              $ref: '#/components/schemas/L1Network'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L1-networks/{l1NetworkId}:
    parameters:
      - name: l1NetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L1 network ID.
    get:
      summary: Retrieve the current state of a single L1-network object.
      description: >-
        An L1-network object describes, among other things, the VLANs and self
        IPs available to the network.
      operationId: getL1Network
      tags:
        - L1-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L1Network'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L1Network'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single L1-network object, overwriting any specified properties.
      description: >-
        An L1-network object describes, among other things, the VLANs and self
        IPs available to the network.
      operationId: updateL1Network
      tags:
        - L1-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L1Network'
          application/json:
            schema:
              $ref: '#/components/schemas/L1Network'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L1-network object.
      description: >-
        An L1-network object describes, among other things, the VLANs and self
        IPs available to the network.
      operationId: removeL1Network
      tags:
        - L1-network
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L1-networks/{l1NetworkId}/vlans:
    parameters:
      - in: path
        name: l1NetworkId
        description: The L1 network ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
    get:
      summary: >-
        Retrieve the current collection of vlan objects defined by the specified
        L1-network object.
      description: A collection of VLAN objects.
      operationId: getL1NetworkVlans
      tags:
        - L1-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: VLANs for a given L1 network.
                items:
                  $ref: '#/components/schemas/L1Vlan'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L1Vlans'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new set of VLAN objects.
      description: A collection of VLAN objects.
      operationId: updateL1NetworkVlans
      tags:
        - L1-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L1Vlan'
          application/json:
            schema:
              $ref: '#/components/schemas/L1Vlan'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L1-networks/{l1NetworkId}/vlans/{vlanId}:
    parameters:
      - in: path
        name: l1NetworkId
        description: The L1 network ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - in: path
        name: vlanId
        description: The vlan ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
    get:
      summary: Retrieve the current state of a single VLAN object.
      description: >-
        A VLAN is a logical subset of hosts on a local area network (LAN) that
        operate in the same IP address space.
      operationId: getL1NetworkVlan
      tags:
        - L1-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L1Vlan'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L1Vlan'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single VLAN object, overwriting any specified properties.
      description: >-
        A VLAN is a logical subset of hosts on a local area network (LAN) that
        operate in the same IP address space.
      operationId: updateL1NetworkVlan
      tags:
        - L1-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L1Vlan'
          application/json:
            schema:
              $ref: '#/components/schemas/L1Vlan'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single VLAN object.
      description: >-
        A VLAN is a logical subset of hosts on a local area network (LAN) that
        operate in the same IP address space.
      operationId: removeL1NetworkVlan
      tags:
        - L1-network
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L2-networks:
    get:
      summary: Retrieve the current collection of L2-network objects.
      description: A collection of L2-network objects.
      operationId: getL2Networks
      tags:
        - L2-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L2Network'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L2Networks'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L2-network object.
      description: A collection of L2-network objects.
      operationId: updateL2Networks
      tags:
        - L2-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L2Network'
          application/json:
            schema:
              $ref: '#/components/schemas/L2Network'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L2-networks/{l2NetworkId}:
    parameters:
      - name: l2NetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L2 network ID.
    get:
      summary: Retrieve the current state of a single L2-network object.
      description: >-
        An L2-network object describes one of many different data link layer
        concepts, such as a tunnel or bridge.
      operationId: getL2Network
      tags:
        - L2-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Network'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L2Network'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single L2-network object, overwriting any specified properties.
      description: >-
        An L2-network object describes one of many different data link layer
        concepts, such as a tunnel or bridge.
      operationId: updateL2Network
      tags:
        - L2-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L2Network'
          application/json:
            schema:
              $ref: '#/components/schemas/L2Network'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L2-network object.
      description: >-
        An L2-network object describes one of many different data link layer
        concepts, such as a tunnel or bridge.
      operationId: removeL2Network
      tags:
        - L2-network
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L2-forwards:
    get:
      summary: Retrieve the current collection of L2-forward objects.
      description: A collection of L2-forward objects.
      operationId: getL2Forwards
      tags:
        - L2-forward
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L2Forward'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L2Forwards'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L2-forward object.
      description: A collection of L2-forward objects.
      operationId: updateL2Forwards
      tags:
        - L2-forward
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L2Forward'
          application/json:
            schema:
              $ref: '#/components/schemas/L2Forward'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L2-forwards/{l2ForwardId}:
    parameters:
      - name: l2ForwardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L2 forward ID.
    get:
      summary: Retrieve the current state of a single L2-forward object.
      description: >-
        An L2-forward object describes one of many different data link layer
        concepts, such as a forwarding IP.
      operationId: getL2Forward
      tags:
        - L2-forward
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Forward'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L2Forward'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single L2-forward object, overwriting any specified properties.
      description: >-
        An L2-forward object describes one of many different data link layer
        concepts, such as a forwarding IP.
      operationId: updateL2Forward
      tags:
        - L2-forward
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L2Forward'
          application/json:
            schema:
              $ref: '#/components/schemas/L2Forward'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L2-forward object.
      description: >-
        An L2-forward object describes one of many different data link layer
        concepts, such as a forwarding IP.
      operationId: removeL2Forward
      tags:
        - L2-forward
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L3-networks:
    get:
      summary: Retrieve the current collection of L3-network objects.
      description: A collection of L3-network objects.
      operationId: getL3Networks
      tags:
        - L3-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L3Network'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L3Networks'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L3-network object.
      description: A collection of L3-network objects.
      operationId: updateL3Networks
      tags:
        - L3-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L3Network'
          application/json:
            schema:
              $ref: '#/components/schemas/L3Network'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L3-networks/{l3NetworkId}:
    parameters:
      - name: l3NetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L3 network ID.
    get:
      summary: Retrieve the current state of a single L3-network object.
      description: >-
        An L3-network object describes one of many different network layer
        concepts, such as network address translation (NAT) or route domains.
      operationId: getL3Network
      tags:
        - L3-network
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3Network'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L3Network'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single L3-network object, overwriting any specified properties.
      description: >-
        An L3-network object describes one of many different network layer
        concepts, such as network address translation (NAT) or route domains.
      operationId: updateL3Network
      tags:
        - L3-network
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L3Network'
          application/json:
            schema:
              $ref: '#/components/schemas/L3Network'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L3-network object.
      description: >-
        An L3-network object describes one of many different network layer
        concepts, such as network address translation (NAT) or route domains.
      operationId: removeL3Network
      tags:
        - L3-network
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L3-forwards:
    get:
      summary: Retrieve the current collection of L3-forward objects.
      description: A collection of L3-forward objects.
      operationId: getL3Forwards
      tags:
        - L3-forward
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L3Forward'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L3Forwards'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L3-forward object.
      description: A collection of L3-forward objects.
      operationId: updateL3Forwards
      tags:
        - L3-forward
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L3Forward'
          application/json:
            schema:
              $ref: '#/components/schemas/L3Forward'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L3-forwards/{l3ForwardId}:
    parameters:
      - name: l3ForwardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L3 forward ID.
    get:
      summary: Retrieve the current state of a single L3-forward object.
      description: >-
        An L3-forward object describes one of many different network layer
        concepts, such as neighbors or routes.
      operationId: getL3Forward
      tags:
        - L3-forward
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3Forward'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L3Forward'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single L3-forward object, overwriting any specified properties.
      description: >-
        An L3-forward object describes one of many different network layer
        concepts, such as neighbors or routes.
      operationId: updateL3Forward
      tags:
        - L3-forward
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L3Forward'
          application/json:
            schema:
              $ref: '#/components/schemas/L3Forward'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L3-forward object.
      description: >-
        An L3-forward object describes one of many different network layer
        concepts, such as neighbors or routes.
      operationId: removeL3Forward
      tags:
        - L3-forward
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L4-serversides:
    get:
      summary: Retrieve the current collection of L4-serverside objects.
      description: A collection of L4-serverside objects.
      operationId: getL4Serversides
      tags:
        - L4-serverside
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L4Serverside'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L4Serversides'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L4-serverside object.
      description: A collection of L4-serverside objects.
      operationId: updateL4Serversides
      tags:
        - L4-serverside
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L4Serverside'
          application/json:
            schema:
              $ref: '#/components/schemas/L4Serverside'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L4-serversides/{l4ServersideId}:
    parameters:
      - name: l4ServersideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L4 serverside ID.
    get:
      summary: Retrieve the current state of a single L4-serverside object.
      description: >-
        An L4-serverside object describes a logical set of devices, such as web
        servers, that you group together to receive and process traffic.
      operationId: getL4Serverside
      tags:
        - L4-serverside
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L4Serverside'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L4Serverside'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: >-
        Update a single L4-serverside object, overwriting any specified
        properties.
      description: >-
        An L4-serverside object describes a logical set of devices, such as web
        servers, that you group together to receive and process traffic.
      operationId: updateL4Serverside
      tags:
        - L4-serverside
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L4Serverside'
          application/json:
            schema:
              $ref: '#/components/schemas/L4Serverside'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L4-serverside object.
      description: >-
        An L4-serverside object describes a logical set of devices, such as web
        servers, that you group together to receive and process traffic.
      operationId: removeL4Serverside
      tags:
        - L4-serverside
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L4-serversides/{l4ServersideId}/endpoints:
    parameters:
      - name: l4ServersideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L4 serverside ID.
    get:
      summary: Retrieve the current collection of endpoints.
      description: A collection of endpoint objects.
      operationId: getL4Endpoints
      tags:
        - L4-serverside
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L4Endpoint'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L4Endpoints'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new set of endpoint objects.
      description: A collection of endpoint objects.
      operationId: updateL4Endpoints
      tags:
        - L4-serverside
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L4Endpoint'
          application/json:
            schema:
              $ref: '#/components/schemas/L4Endpoint'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L4-serversides/{l4ServersideId}/endpoints/{endpointId}:
    parameters:
      - name: l4ServersideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L4 serverside ID.
      - name: endpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L4 serverside endpoint ID.
    get:
      summary: Retrieve the current state of a single endpoint object.
      description: >-
        An endpoint is a logical object that represents a node on the network.
        Once you have assigned an L4-serverside to a stack, the system directs
        traffic coming into the stack to one of the endpoints of that
        L4-serverside. An individual endpoint can belong to one or multiple
        L4-serversides, depending on how you want to manage your network
        traffic.
      operationId: getL4Endpoint
      tags:
        - L4-serverside
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L4Endpoint'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L4Endpoints'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a single endpoint object, overwriting any specified properties.
      description: >-
        An endpoint is a logical object that represents a node on the network.
        Once you have assigned an L4-serverside to a stack, the system directs
        traffic coming into the stack to one of the endpoints of that
        L4-serverside. An individual endpoint can belong to one or multiple
        L4-serversides, depending on how you want to manage your network
        traffic.
      operationId: updateL4Endpoint
      tags:
        - L4-serverside
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L4Endpoint'
          application/json:
            schema:
              $ref: '#/components/schemas/L4Endpoint'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single endpoint object.
      description: >-
        An endpoint is a logical object that represents a node on the network.
        Once you have assigned an L4-serverside to a stack, the system directs
        traffic coming into the stack to one of the endpoints of that
        L4-serverside. An individual endpoint can belong to one or multiple
        L4-serversides, depending on how you want to manage your network
        traffic.
      operationId: removeL4Endpoint
      tags:
        - L4-serverside
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L4-clientsides:
    get:
      summary: Retrieve the current collection of L4-clientside objects.
      description: A collection of L4-clientside objects.
      operationId: getL4Clientsides
      tags:
        - L4-clientside
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L4Clientside'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L4Clientsides'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update the collection with a new L4-clientside object.
      description: A collection of L4-clientside objects.
      operationId: updateL4Clientsides
      tags:
        - L4-clientside
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L4Clientside'
          application/json:
            schema:
              $ref: '#/components/schemas/L4Clientside'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /L4-clientsides/{l4ClientsideId}:
    parameters:
      - name: l4ClientsideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The L4 clientside ID.
    get:
      summary: Retrieve the current state of a single L4-clientside object.
      description: >-
        An L4-clientside object describes, among other properties, sets of IPs
        and ports on which to listen for traffic that is then distributed across
        the endpoints of an associated L4-serverside object.
      operationId: getL4Clientside
      tags:
        - L4-clientside
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L4Clientside'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.L4Clientside'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: >-
        Update a single L4-clientside object, overwriting any specified
        properties.
      description: >-
        An L4-clientside object describes, among other properties, sets of IPs
        and ports on which to listen for traffic that is then distributed across
        the endpoints of an associated L4-serverside object.
      operationId: updateL4Clientside
      tags:
        - L4-clientside
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.L4Clientside'
          application/json:
            schema:
              $ref: '#/components/schemas/L4Clientside'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a single L4-clientside object.
      description: >-
        An L4-clientside object describes, among other properties, sets of IPs
        and ports on which to listen for traffic that is then distributed across
        the endpoints of an associated L4-serverside object.
      operationId: removeL4Clientside
      tags:
        - L4-clientside
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /waf-policies:
    get:
      summary: List all WAF policies
      description: List all WAF policies.
      operationId: getWafPolicies
      tags:
        - WafPolicy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WafPolicy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.WafPolicies'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Create a WAF policy
      operationId: createWafPolicy
      description: Create a WAF policy.
      tags:
        - WafPolicy
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.WafPolicy'
          application/json:
            schema:
              $ref: '#/components/schemas/WafPolicy'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /waf-policies/{wafPolicyId}:
    parameters:
      - name: wafPolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The WAF policy ID.
    get:
      summary: Get a WAF policy
      operationId: getWafPolicyById
      description: Get a WAF policy.
      tags:
        - WafPolicy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WafPolicy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.WafPolicy'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a WAF policy by ID
      operationId: updateWAFPolicy
      description: Update a WAF policy by ID.
      tags:
        - WafPolicy
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.WafPolicy'
          application/json:
            schema:
              $ref: '#/components/schemas/WafPolicy'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a WAF policy
      operationId: removeWafPolicy
      description: Delete a WAF policy.
      tags:
        - WafPolicy
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /access-policies:
    get:
      summary: List all access policies
      description: List all access policies.
      operationId: getAccessPolicies
      tags:
        - AccessPolicy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessPolicy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.AccessPolicies'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Create an accesspolicy
      operationId: createAccessPolicy
      description: Create an access policy.
      tags:
        - AccessPolicy
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.AccessPolicy'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /access-policies/{accessPolicyId}:
    parameters:
      - name: accessPolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The policy ID.
    get:
      summary: Get an access policy
      operationId: getAccessPolicyById
      description: Get an access policy.
      tags:
        - AccessPolicy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.AccessPolicy'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update an access policy by ID
      operationId: updateAccessPolicy
      description: Update an access policy by ID.
      tags:
        - AccessPolicy
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.AccessPolicy'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete an access policy
      operationId: removeAccessPolicy
      description: Delete an access policy.
      tags:
        - AccessPolicy
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /services:
    get:
      summary: List all services
      description: List all services.
      operationId: getServices
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Services'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /services/{serviceId}:
    parameters:
      - name: serviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The service ID.
    get:
      summary: Get a service
      operationId: getServiceById
      description: Get a service.
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Service'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /services/{serviceId}/access:
    parameters:
      - name: serviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The service ID.
    get:
      summary: Get Access global settings
      description: Get Access global settings.
      operationId: getAccessService
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.ServiceAccess'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Add/Update Access global settings
      description: Add/Update Access global settings.
      operationId: createAccessService
      tags:
        - Service
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.ServiceAccess'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccess'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /services/{serviceId}/logging:
    parameters:
      - name: serviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The service ID.
    get:
      summary: Get logging
      operationId: getLogging
      description: Get Logging.
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLogging'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.ServiceLogging'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: update logging
      operationId: updateLogging
      description: Add logging.
      tags:
        - Service
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.ServiceLogging'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLogging'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /services/{serviceId}/cluster:
    parameters:
      - name: serviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The service ID.
    get:
      summary: Get HA cluster
      description: Get HA cluster.
      operationId: getCluster
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Cluster'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Add/update HA cluster
      description: >-
        Add/update BIG-IP Next HA instance. If the HA instance creation fails or
        times out, disassemble the HA instance and perform a factory reset on
        the unhealthy node.
      operationId: createCluster
      tags:
        - Service
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Cluster'
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /services/{serviceId}/waf:
    parameters:
      - name: serviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The service ID.
    get:
      summary: Get WAF global settings
      description: Get WAF global settings.
      operationId: getWAFService
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceWaf'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.ServiceWaf'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Add/Update WAF global settings
      description: Add/Update WAF global settings.
      operationId: createWAFService
      tags:
        - Service
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.ServiceWaf'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceWaf'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /actions/failover:
    put:
      summary: Fail over to the standby cluster node
      description: >-
        Verifies the health of the standby node in a BIG-IP Next HA instance
        before promoting it to active. This health check is optional and can be
        skipped. If the health check fails or times out, disassemble the HA
        instance and perform a factory reset on the unhealthy node.
      operationId: clusterfailover
      tags:
        - Actions
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyHealthcheck'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /actions/disassemble:
    put:
      summary: Disassemble
      description: Disassemble the HA instance. This will factory reset the standby node.
      operationId: disassemble
      tags:
        - Actions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disassemble'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /actions/factory-reset:
    put:
      summary: Factory reset
      description: >-
        Restores the configuration to factory default settings. If there is a HA
        instance, please call the /actions/disassemble endpoint first.
      operationId: factoryreset
      tags:
        - Actions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactoryReset'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /health:
    get:
      summary: Get all nodes health
      description: >-
        List all nodes health. In a healthy BIG-IP Next instance, the isHealthy
        property is True, the state property is STANDALONE, and the
        subsystemsClusterStates values are STANDALONE. In a healhty BIG-IP Next
        HA instance, the isHealthy property is True in all nodes, the state
        property is ACTIVE on the active node and STANDBY on the stanby node,
        and so are the subsystemsClusterStates values.
      operationId: getSystemsHealth
      tags:
        - Health
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterNodeHealth'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.ClusterNodeHealths'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /health/ready:
    get:
      summary: System Ready Indicator
      description: Indicates whether system is ready to be configured.
      operationId: getSystemsReadyIndicator
      tags:
        - System
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemReady'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.SystemReady'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /licenseReportResponse: {}
  /systems:
    get:
      summary: List all systems
      operationId: getSystems
      description: List all systems.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Systems'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a system
      operationId: updateSystems
      description: Update a system.
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.System'
          application/json:
            schema:
              $ref: '#/components/schemas/System'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /action/license/activate:
    put:
      summary: Accept and update jwt into the system.
      description: >-
        This api will help the customer to store the JWT in the BIG-IP Next
        system. It will be later on used to activate the product.
      operationId: activateLicense
      tags:
        - System
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseActivate'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /action/license/deactivate:
    put:
      summary: Take a request to deactivate the product.
      description: >-
        Deactivates the product. A deactivation telemetry report will be
        generated for use in disconnected licensing mode.
      operationId: deactivateLicense
      tags:
        - System
      security:
        - basicAuth: []
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Terminate report generated successfully.
        '400':
          description: Reason why internal request failed.
        '500':
          description: Reason why internal request failed.
  /license/report:
    get:
      summary: Download the initial config report from the system.
      description: >-
        This api will help the customer to download the initial config report
        from the system.
      operationId: downloadConfigReport
      tags:
        - System
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
                pattern: ^attachment;\s*filename=[.\w]+\.[.\w]+$
            Content-Length:
              schema:
                type: integer
        '404':
          description: Not activated, need to provide CAT/JWT to /action/license/activate
        '500':
          description: reason why internal request failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Accept and update signed acknowledgement into the system.
      description: >-
        This api will help the customer to get the signed acknowledgement blob
        to be verified by CPCL. Once verified it will be stored in db.
      operationId: uploadSignedAck
      tags:
        - System
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseSignedAck'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get a system
      operationId: getSystemById
      description: Get a system.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.System'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Set up box
      operationId: updateSystem
      description: Set up box.
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.System'
          application/json:
            schema:
              $ref: '#/components/schemas/System'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a system
      operationId: removeSystem
      description: Delete a system.
      tags:
        - System
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/manifest:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get the system manifest
      operationId: getManifestBySystemId
      description: Get the manifest for the system.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Manifest'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /systems/{systemId}/reboot:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    put:
      summary: Reboot BIG-IP Next
      description: >-
        Reboot BIG-IP Next on a device specified by ID. If reboot would trigger
        failover, the peer's health is checked first, but can be optionally
        skipped.
      operationId: rebootSystem
      tags:
        - System
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyHealthcheck'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/shutdown:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    put:
      summary: Shutdown host system
      description: Shutdown host system.
      operationId: shutdownSystem
      tags:
        - System
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/device-certificate:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get a system's device certificate document
      operationId: getSystemDeviceCertificate
      description: Get a system's device certificate document.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemDeviceCertificate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.SystemDeviceCertificate'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a system's device certificate document
      operationId: updateSystemDeviceCertificate
      description: Update a system's device certificate document.
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.SystemDeviceCertificate'
          application/json:
            schema:
              $ref: '#/components/schemas/SystemDeviceCertificate'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/host-dns:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get a system's host dns document
      operationId: getSystemHostDns
      description: Get a system's host dns document.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemHostDns'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.SystemHostDns'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a system's host dns document
      operationId: updateSystemHostDns
      description: Update a system's host dns document.
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.SystemHostDns'
          application/json:
            schema:
              $ref: '#/components/schemas/SystemHostDns'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/host-network:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get a system's host network document
      operationId: getSystemHostNetwork
      description: Get a system's host network document.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemHostNetwork'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.SystemHostNetwork'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update a system's host network document
      description: Update a system's host network document.
      operationId: updateSystemHostNetwork
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.SystemHostNetwork'
          application/json:
            schema:
              $ref: '#/components/schemas/SystemHostNetwork'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/dataplane-debug:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get system's dataplane debug setup configuration
      description: Get system's dataplane debug setup configuration.
      operationId: getSystemDataplaneDebug
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemDataplaneDebug'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.SystemDataplaneDebug'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update system's dataplane debug setup configuration.
      description: Update system's dataplane debug setup configuration.
      operationId: updateSystemDataplaneDebug
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.SystemDataplaneDebug'
          application/json:
            schema:
              $ref: '#/components/schemas/SystemDataplaneDebug'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/interfaces:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Get interfaces
      operationId: getInterfaces
      description: Get interfaces.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interface'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Interfaces'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    delete:
      summary: Delete an interface
      description: Delete an interface.
      operationId: removeInterface
      tags:
        - System
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/interfaces/{interfaceId}:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
      - name: interfaceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The interface ID.
    get:
      summary: Get an interface
      operationId: getSystemInterface
      description: Get an interface.
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Interface'
        '404':
          description: Interface id not found.
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update an interface.
      operationId: updateSystemInterface
      description: Update an interface.
      tags:
        - System
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Interface'
          application/json:
            schema:
              $ref: '#/components/schemas/Interface'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete an interface.
      operationId: removeSystemInterface
      description: Delete an interface.
      tags:
        - System
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/cores:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: List all core files
      operationId: getCoreFiles
      description: List all core file objects present on the BIG-IP hosts.
      tags:
        - Cores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /systems/{systemId}/cores/{relative}:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
      - name: relative
        in: path
        required: true
        description: Path to the core file.
        schema:
          type: string
          pattern: .*
    get:
      summary: Download a core file
      description: Download core file.
      operationId: downloadCoreFile
      tags:
        - Cores
      responses:
        '200':
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
                pattern: ^attachment;\s*filename=[.\w]+\.[.\w]+$
            Content-Length:
              schema:
                type: integer
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: core file not found.
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    delete:
      summary: Delete a core file
      description: Delete a core file.
      operationId: deleteCoreFile
      tags:
        - Cores
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/logs:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: List all log file URI paths
      operationId: getLogs
      description: List all log file URI paths.
      tags:
        - Telemetry
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /systems/archivelogs/{systemId}:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
    get:
      summary: Download the tar archive of logs.
      description: This api will help the customer to download the tar archive of logs.
      operationId: downloadTarArchive
      tags:
        - System
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
                pattern: ^attachment;\s*filename=[.\w]+\.[.\w]+$
            Content-Length:
              schema:
                type: integer
        '404':
          description: Tar archive file not found.
        '500':
          description: reason why internal request failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Trigger archive of the BIGIP-NEXT logs.
      operationId: triggerLogArchive
      description: Trigger archive of the BIGIP-NEXT logs.
      tags:
        - LogArchive
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete archive of the BIGIP-NEXT logs.
      operationId: deleteLogArchive
      description: Delete archive of the BIGIP-NEXT logs.
      tags:
        - LogArchive
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /systems/{systemId}/logs/{relative}:
    parameters:
      - name: systemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The system ID.
      - name: relative
        in: path
        required: true
        description: Path to the log file.
        schema:
          type: string
          pattern: .*
    get:
      summary: Download a log file
      description: Downloads a log file via the f5-toda-logpull service.
      operationId: downloadLogFile
      tags:
        - Telemetry
      responses:
        '200':
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
                pattern: ^attachment;\s*filename=[.\w]+\.[.\w]+$
            Content-Length:
              schema:
                type: integer
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Log file not found.
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /onboard:
    put:
      summary: Update declarative onboarding properties
      description: Update declarative onboarding properties.
      operationId: updateOnboard
      tags:
        - Onboard
      requestBody:
        description: Declarative onboarding properties.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Declare'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /qkview:
    put:
      summary: Request a system QuickView
      description: Request a system QuickView.
      operationId: QkView
      tags:
        - QkView
      requestBody:
        description: QkView file name.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qkview'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /services/backup:
    put:
      summary: Request a system backup
      description: Request a system backup.
      operationId: Backup
      tags:
        - BIRD
      requestBody:
        description: Bird file name and protecting password.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /services/restore:
    put:
      summary: Request a system restore from backup
      description: Request a system restore from backup.
      operationId: Restore
      tags:
        - BIRD
      requestBody:
        description: Bird file name and password to protect.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restore'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /ihealth:
    put:
      summary: Set F5 iHealth credentials will be collected here
      description: Set iHealth username and password.
      operationId: iHealth-put
      tags:
        - QkView
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/hal.Ihealth'
          application/json:
            schema:
              $ref: '#/components/schemas/Ihealth'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    get:
      summary: Get encrypted iHealth credentials
      description: Get encrypted iHealth credentials.
      operationId: iHealth-get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ihealth'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Ihealth'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /ihealth/{ihealthId}:
    parameters:
      - name: ihealthId
        in: path
        required: true
        description: The ihealthcredentials uuid.
        schema:
          $ref: '#/components/schemas/Uuid'
          example: 86657e16-439d-4cef-97bc-58a6c119976c
    get:
      summary: Get iHealth credential
      description: Get iHealth credential.
      operationId: getIhealthData
      tags:
        - IHealth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ihealth'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Ihealth'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update ihealth credential
      description: Update ihealth credential.
      operationId: updateIHealthData
      tags:
        - IHealth
      requestBody:
        description: ihealth credentials.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ihealth'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete ihealth credential
      description: Delete ihealth credential.
      operationId: deleteIhealthData
      tags:
        - IHealth
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /files:
    get:
      summary: List all files
      description: List all file objects present on the BIG-IP.
      operationId: getFiles
      tags:
        - Files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilesMetadata'
              examples:
                get_files:
                  $ref: '#/components/examples/get_files'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.FilesMetadatas'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    post:
      summary: Upload a file
      description: Upload a file.
      operationId: uploadFile
      tags:
        - Files
      requestBody:
        description: >-
          Enables uploads of SSL certificates and keys, PEM files, and archive
          files to BIG-IP Next.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFilesMetadata'
            examples:
              post_file_archive:
                $ref: '#/components/examples/post_file_archive'
              post_file_key:
                $ref: '#/components/examples/post_file_key'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /files/{fileId}:
    parameters:
      - name: fileId
        in: path
        required: true
        description: The file uuid.
        schema:
          $ref: '#/components/schemas/Uuid'
          example: 86657e16-439d-4cef-97bc-58a6c119976c
    get:
      summary: Get file metadata
      description: Get file metadata.
      operationId: getFileMetadata
      tags:
        - Files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesMetadata'
              examples:
                get_file_metadata:
                  $ref: '#/components/examples/get_file_metadata'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.FilesMetadata'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Update file
      description: Update file.
      operationId: updateFile
      tags:
        - Files
      requestBody:
        description: >-
          Enables uploads of SSL certificates and keys, PEM files, and archive
          files to BIG-IP Next.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateFilesMetadata'
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
    delete:
      summary: Delete a file
      description: Delete a file.
      operationId: deleteFile
      tags:
        - Files
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /files/{fileId}/download:
    parameters:
      - name: fileId
        in: path
        required: true
        description: The file uuid.
        schema:
          $ref: '#/components/schemas/Uuid'
          example: 86657e16-439d-4cef-97bc-58a6c119976c
    get:
      summary: Download file
      description: Download file.
      operationId: downloadFile
      tags:
        - Files
      responses:
        '200':
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
                pattern: ^attachment;\s*filename=[.\w]+\.[.\w]+$
            Content-Length:
              schema:
                type: integer
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /login:
    get:
      security:
        - basicAuth: []
      summary: Gains access token
      operationId: login
      description: User gains access token.
      tags:
        - Login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.AccessToken'
  /openapi:
    get:
      summary: Get the current OpenAPI specification
      description: Get the current OpenAPI specification.
      operationId: getOpenAPISpecification
      tags:
        - Openapi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
  /state/access-sessions:
    get:
      summary: Get all access sessions
      description: List all access sessions.
      operationId: getAccessSessions
      tags:
        - AccessSession
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Transfer-Encoding:
              schema:
                type: string
                enum:
                  - chunked
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessSession'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.AccessSessions'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessSessionErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /state/access-sessions/{sessionId}:
    parameters:
      - name: sessionId
        in: path
        required: true
        description: Session ID for a single access session.
        schema:
          $ref: '#/components/schemas/SessionId'
    get:
      summary: Get session variables for a single access session
      description: List session variables for a single access session.
      operationId: getAccessSessionVariables
      tags:
        - AccessSession
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionVariables'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.SessionVariables'
        '404':
          description: No access session exists with the given session id.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessSessionErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    delete:
      summary: Delete single access session
      description: Delete a single access session by session ID.
      tags:
        - AccessSession
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: deleteAccessSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: No access session exists with the given session id.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessSessionErrorResponseDefinition'
  /metrics/systems/{systemId}:
    parameters:
      - name: systemId
        in: path
        required: true
        description: The system ID.
        schema:
          $ref: '#/components/schemas/Uuid'
        example: 86657e15-439d-4cef-97bc-58a6c119976b
    get:
      summary: Retrieve system level metrics per instance
      operationId: getSystemMetricsById
      description: >-
        Retrieve system level metrics per instance for CPU usage, memory, disk
        usage and interfaces.
      tags:
        - Telemetry
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSystem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.MetricsSystem'
        '404':
          description: System id not found.
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /users:
    get:
      summary: List all users
      operationId: getUsers
      description: List all users.
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.Users'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: Create a user
      operationId: createUser
      description: Create a user.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: User created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: The user already exists.
  /users/{userID}:
    parameters:
      - name: userID
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        description: The user ID.
    get:
      summary: Get a user
      operationId: getUserByID
      description: Get a user.
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.User'
        '404':
          description: User not found.
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    put:
      summary: update a user
      operationId: updateUser
      description: Update a user.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '204':
          description: The user was updated successfully..
        '404':
          description: User not found.
    delete:
      summary: Delete a user
      operationId: removeUser
      description: Delete a user.
      tags:
        - User
      responses:
        '204':
          description: The resource was deleted successfully.
        '403':
          description: User cannot not be deleted.
        '404':
          description: User not found.
  /login/refresh:
    get:
      security:
        - refreshAuth: []
      summary: Request a new token pair.
      description: Request a new set of access and refresh tokens for authentication.
      operationId: requestRefreshToken
      tags:
        - Login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.AccessToken'
        '401':
          description: Token validation failure.
        '500':
          description: Failed to generate the token pair.
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    delete:
      security:
        - refreshAuth: []
      summary: Revoke the given refresh token.
      description: Revokes the refresh token used in authorization header.
      operationId: deleteRefreshToken
      tags:
        - Login
      responses:
        '204':
          description: The token was revoked.
        '500':
          description: Failed to revoke the token.
  /me:
    put:
      security:
        - basicAuth: []
        - bearerAuth: []
      description: Update self password.
      operationId: updateSelfPassword
      tags:
        - Me
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSelfPassword'
      responses:
        '204':
          description: The password was updated successfully.
        '409':
          description: >-
            Current password must be correct and different than new password,
            new password must be at least 8 characters long.
  /mgmt/shared/appsvcs/info:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: getApplicationServicesInfo
      description: Get AS3 version.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponseSchema'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/appsvcs/task:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: getApplicationServicesTask
      description: Get all available AS3 task statuses. For asynchronous operations only.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDefinition'
        '404':
          description: No record exists for the given record id.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/appsvcs/task/{taskId}:
    parameters:
      - name: taskId
        in: path
        description: The task ID.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        example: 86657e15-439d-4cef-97bc-58a6c119976b
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: getApplicationServicesTaskbyTaskId
      description: Get a specific AS3 task status. For asynchronous operations only.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDefinition'
        '404':
          description: No record exists for the given record id.
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/appsvcs/declare:
    get:
      summary: Read AS3 configuration
      description: Retrieve a declaration or an index of stored declarations.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      parameters:
        - name: age
          in: query
          schema:
            type: string
          description: >-
            age=0-15 asks for a declaration of the given age (0 means
            most-recently deployed), and age=list asks for a list of available
            declarations with their ages. The default is 0.
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: getApplicationServicesDeclare
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationDefinition'
        '204':
          description: No AS3 configured tenants exist on the target device.
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
    post:
      summary: Apply AS3 configuration
      description: >-
        Use POST to deploy a configuration to a target system. You must supply a
        request document with each POST.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: postApplicationServicesDeclare
      parameters:
        - in: query
          name: validation
          schema:
            type: string
            enum:
              - strict
              - lazy
          description: Specify the declaration validation type.
        - in: query
          name: updateMode
          schema:
            type: string
            enum:
              - complete
              - selective
          description: Specify the update mode for configuration.
        - in: query
          name: action
          schema:
            type: string
            enum:
              - dry-run
              - deploy
          description: Specify the action to perform for the specified configuration.
        - in: query
          name: show
          schema:
            type: string
            enum:
              - base
              - full
              - expanded
          description: Specify how the response document should be expanded.
        - in: query
          name: async
          schema:
            type: string
            enum:
              - true
              - false
          description: >-
            Specify that the request should return before the operation
            completes.
      requestBody:
        description: AS3 service definition
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclarationDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationDefinition'
        '422':
          description: An invalid configuration was provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
    patch:
      summary: Update AS3 configuration
      description: Patch the most recent AS3 configuration.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: patchApplicationServicesDeclare
      parameters:
        - in: query
          name: validation
          schema:
            type: string
            enum:
              - strict
              - lazy
          description: Specify the declaration validation type.
        - in: query
          name: updateMode
          schema:
            type: string
            enum:
              - complete
              - selective
          description: Specify the configuration update mode.
        - in: query
          name: action
          schema:
            type: string
            enum:
              - dry-run
              - deploy
          description: Specify the action to perform.
        - in: query
          name: show
          schema:
            type: string
            enum:
              - base
              - full
              - expanded
          description: Specify how the response document should be expanded.
      requestBody:
        description: Patch the latest AS3 declaration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeclarationDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationDefinition'
        '422':
          description: An invalid configuration was provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
    delete:
      summary: Remove AS3 configuration
      description: >-
        Remove configurations for one or more declared Tenants from the target
        system.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: deleteApplicationServicesDeclare
      parameters:
        - in: query
          name: validation
          schema:
            type: string
            enum:
              - strict
              - lazy
          description: Specify the declaration validation type.
        - in: query
          name: show
          schema:
            type: string
            enum:
              - base
              - full
              - expanded
          description: Specify how the response document should be expanded.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationOperationDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
  /mgmt/shared/appsvcs/declare/{tenantPath}:
    parameters:
      - name: tenantPath
        in: path
        required: true
        description: A tenant to configure.
        schema:
          $ref: '#/components/schemas/TenantPathSchema'
    get:
      summary: Read AS3 configuration
      description: >-
        Retrieve a tenant-specific declaration or an index of stored
        declarations.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: getApplicationServicesDeclareByTenant
      parameters:
        - name: age
          in: query
          schema:
            type: string
          description: >-
            age=0-15 asks for a declaration of the given age (0 means
            most-recently deployed), and age=list asks for a list of available
            declarations with their ages. The default is 0.
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationDefinition'
        '204':
          description: No AS3 configured tenants exist on the target device.
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
    post:
      summary: Apply AS3 configuration
      description: >-
        Deploy a configuration to a target system. You must supply a request
        document with each POST.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: postApplicationServicesDeclareByTenant
      parameters:
        - in: query
          name: validation
          schema:
            type: string
            enum:
              - strict
              - lazy
          description: Specify the declaration validation type.
        - in: query
          name: updateMode
          schema:
            type: string
            enum:
              - complete
              - selective
          description: Specify the update mode for configuration.
        - in: query
          name: action
          schema:
            type: string
            enum:
              - dry-run
              - deploy
          description: Specify the action to perform for the specified configuration.
        - in: query
          name: show
          schema:
            type: string
            enum:
              - base
              - full
              - expanded
          description: Specify how the response document should be expanded.
        - in: query
          name: async
          schema:
            type: string
            enum:
              - true
              - false
          description: >-
            Specify that the request should return before the operation
            completes.
      requestBody:
        description: AS3 service definition
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclarationDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationDefinition'
        '422':
          description: An invalid configuration was provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
    patch:
      summary: Update AS3 configuration
      description: Patch the most recent AS3 configuration.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: patchApplicationServicesDeclareByTenant
      parameters:
        - in: query
          name: validation
          schema:
            type: string
            enum:
              - strict
              - lazy
          description: Specify the declaration validation type.
        - in: query
          name: updateMode
          schema:
            type: string
            enum:
              - complete
              - selective
          description: Specify the update mode for configuration.
        - in: query
          name: action
          schema:
            type: string
            enum:
              - dry-run
              - deploy
          description: Specify the action to perform for the specified configuration.
        - in: query
          name: show
          schema:
            type: string
            enum:
              - base
              - full
              - expanded
          description: Specify how the response document should be expanded.
      requestBody:
        description: Patch the latest AS3 declaration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeclarationDefinition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationDefinition'
        '422':
          description: An invalid configuration was provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
    delete:
      summary: Remove AS3 configuration
      description: >-
        Use DELETE to remove configurations for one or more declared Tenants
        from the target system.
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices
      security:
        - basicAuth: []
        - bearerAuth: []
      operationId: deleteApplicationServicesDeclareByTenant
      parameters:
        - in: query
          name: validation
          schema:
            type: string
            enum:
              - strict
              - lazy
          description: Specify the declaration validation type.
        - in: query
          name: show
          schema:
            type: string
            enum:
              - base
              - full
              - expanded
          description: Specify how the response document should be expanded.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclarationOperationDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
  /mgmt/shared/fast/applications:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Fetch List of FAST Applications
      description: >-
        Responds with a list of Applications that are currently deployed in the
        system.
      operationId: getFASTApplications
      responses:
        '200':
          description: List of FAST Applications.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastApplicationList'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    post:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Create one or more Applications from Templates
      description: >-
        This is the main method to deploy a templated Application. The
        parameters posted will be used to render a Template, and that Template
        will get posted to AS3. The call to AS3 may be async, so this endpoint
        must also be async. A Task will be returned upon successful parameter
        submission that can track the progress of the deployment.
      operationId: postFASTApplications
      requestBody:
        required: true
        description: >-
          An application definition, including the name of the template to run
          and the parameters needed to render and post the output.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastApplicationRequest'
      responses:
        '202':
          description: >-
            Template Job Submitted Successfully, check the provided Task ID to
            get the status of the deployment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastApplicationResponse'
        '400':
          description: >-
            AS3 errors (e.g., invalid schema) are forwarded as 400-level errors.
            See AS3 documentation for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
    delete:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Delete FAST Applications
      description: Delete multiple FAST managed Applications (all if no body is provided).
      operationId: deleteFASTApplications
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Application paths (e.g., 'tenant/app')
              example:
                - tenant/app
      responses:
        '202':
          description: Delete job submitted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastApplicationDeleteResponse'
        '404':
          description: Tenant or Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
  /mgmt/shared/fast/applications/{tenantName}/{appName}:
    parameters:
      - name: appName
        in: path
        required: true
        description: The name of the app to retrieve.
        schema:
          type: string
          pattern: .*
      - name: tenantName
        in: path
        required: true
        description: The tenant the app belongs to.
        schema:
          type: string
          pattern: .*
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Fetch an individual Application
      description: Fetches the AS3 Application class for the given FAST Application.
      operationId: getFASTApplication
      responses:
        '200':
          description: The specified Application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastAs3App'
        '404':
          description: Application or Tenant was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    patch:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Update Application parameters
      description: >-
        Update an existing, deployed FAST Application with the supplied
        parameters. Existing parameter values from the deployed Application will
        be used as defaults for any missing parameter values.
      operationId: updateFASTApplication
      requestBody:
        required: true
        content:
          application/json:
            example:
              virtualAddresses:
                - 10.0.0.1
            schema:
              type: object
              properties:
                parameters:
                  $ref: '#/components/schemas/ParametersDefinition'
              required:
                - parameters
      responses:
        '202':
          description: >-
            Template Job Submitted Successfully, check the provided Task ID to
            get the status of the deployment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastApplicationResponse'
        '400':
          description: >-
            AS3 errors (e.g., invalid schema) are forwarded as 400-level errors.
            See AS3 documentation for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
    delete:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Delete Application
      description: Delete an individual Application.
      operationId: deleteFASTApplication
      responses:
        '202':
          description: The Application was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastApplicationDeleteResponse'
        '404':
          description: Tenant or Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
  /mgmt/shared/fast/templates:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: List all Templates
      description: List all installed Templates.
      operationId: getFASTTemplates
      responses:
        '200':
          description: An array of Template names.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateNameList'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/fast/templates/{setName}/{templateName}:
    parameters:
      - name: templateName
        in: path
        required: true
        description: The name of the Template to retrieve.
        schema:
          type: string
          pattern: .*
      - name: setName
        in: path
        required: true
        description: The name of Template Set the Template belongs to.
        schema:
          type: string
          pattern: .*
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get specified Template
      description: Get the Template by Template name and Template Set name.
      operationId: getFASTTemplateBySetAndTemplateName
      responses:
        '200':
          description: A Template object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Set or Template was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/fast/tasks:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get Tasks
      description: List all running and completed Tasks.
      operationId: getFASTTasks
      responses:
        '200':
          description: An array of Tasks and their status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/fast/tasks/{taskId}:
    parameters:
      - name: taskId
        in: path
        example: 86657e15-439d-4cef-97bc-58a6c119976b
        required: true
        description: The ID of the Task to retrieve.
        schema:
          $ref: '#/components/schemas/Uuid'
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get information about a specific Task
      description: >-
        Get detailed information about a specific Task. Tasks are tracked on a
        best effort basis, an interruption in service to the iControl LX
        platform may result in lost results.
      operationId: getFASTTaskById
      responses:
        '200':
          description: The specified Task and its status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: The Task ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/fast/templatesets:
    get:
      parameters:
        - name: showDisabled
          in: query
          required: false
          description: Whether to show only disabled Template Sets.
          schema:
            type: boolean
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get Template Sets
      description: List all installed Template Sets.
      operationId: getFASTTemplateSets
      responses:
        '200':
          description: A list of installed Template Sets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSetList'
        '400':
          description: Invalid Template Set request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '404':
          description: Template Set not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
    post:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Install a new Template Set
      description: Installs a previously uploaded Template Set zip.
      operationId: postFASTTemplateSets
      requestBody:
        required: true
        description: The name of a zip file (excluding the .zip extension).
        content:
          application/json:
            schema:
              properties:
                name:
                  title: Template Set name.
                  type: string
                  example: new_template_set
                  description: >-
                    The name of the Template Set to install (excluding the .zip
                    extension).
              required:
                - name
          multipart/form-data:
            schema:
              description: a zip file containing Template schema or mustache files.
      responses:
        '200':
          description: The Template Set installed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse200'
        '400':
          description: The supplied Template Set name is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '404':
          description: The supplied template name was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
    delete:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Delete Template Sets
      description: Delete all installed Template Sets.
      operationId: deleteFASTTemplateSets
      responses:
        '200':
          description: All Template Sets were deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse200'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
  /mgmt/shared/fast/templatesets/{setName}:
    parameters:
      - name: setName
        in: path
        required: true
        description: The name of the Template Set.
        schema:
          type: string
          pattern: .*
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get Template information
      description: Get information of Template Set with {setName}.
      operationId: getFASTTemplateSetsByName
      responses:
        '200':
          description: A Template Set object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSet'
        '400':
          description: Template Set in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '404':
          description: Template Set not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    delete:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Delete specified Template Set
      description: Deletes an installed Template Set specified by its name.
      operationId: deleteFASTTemplateSetByName
      responses:
        '200':
          description: The specified Template Set was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse200'
        '400':
          description: Cannot delete Template Set, it is being used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '404':
          description: The Set name was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
  /mgmt/shared/fast/settings:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get FAST Settings
      description: Get an object that represents the current FAST configuration.
      operationId: getFASTSettings
      responses:
        '200':
          description: The FAST Settings configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
    delete:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Delete/Reset FAST Settings
      description: Reset FAST configuration to defaults.
      operationId: deleteFASTSettings
      responses:
        '200':
          description: Delete/Reset the FAST Settings configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse200'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
    post:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Replace FAST settings (Full overwrite)
      description: Replace the full FAST configuration with supplied body.
      operationId: postFASTSettings
      responses:
        '200':
          description: Replace the FAST Settings configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse200'
        '422':
          description: supplied configuration was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse422'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
    patch:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Update existing FAST Settings
      description: >-
        Update existing FAST configuration with the supplied body. Allows
        updates of individual properties.
      operationId: patchFASTSettings
      responses:
        '200':
          description: Update the FAST Settings configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse200'
        '422':
          description: supplied configuration was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse422'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
  /mgmt/shared/fast/settings-schema:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Get settings schema
      description: Get JSON schema for the /settings endpoint.
      operationId: getFastSettingsSchema
      responses:
        '200':
          description: The FAST Settings schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectDefinition'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/fast/info:
    get:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Information about the FAST Extension
      description: >-
        This endpoint returns data pertaining to the version of FAST currently
        in use, as well as loaded Template Sets and other information useful for
        debug. This endpoint is recommended for use when verifying that FAST is
        installed and ready to use.
      operationId: getFASTInfo
      responses:
        '200':
          description: Information about the extension was gathered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /mgmt/shared/fast/render:
    post:
      servers:
        - url: https://api.big-ip-next.f5.com
          description: >-
            Base server URL override. For cross-product compatibility, full path
            does not include /api/v1.
      tags:
        - ApplicationServices-Templates
      security:
        - basicAuth: []
        - bearerAuth: []
      summary: Render one or more Applications from Templates
      description: >-
        Render Application Templates without posting them to AS3 NOTE - The
        rendered Template results are not stitched with other AS3 Applications
        on the box. In other words, posting these results to AS3 directly can
        result in data loss.
      operationId: postFASTRender
      requestBody:
        required: true
        description: >-
          An Application definition, including the name of the Template to
          render and the Template parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastApplicationRequest'
      responses:
        '200':
          description: The rendered Templates as an array of JSON objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastApplicationRenderedResponse'
        '400':
          description: An improper Application definition was submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse400'
        '404':
          description: The specified Template could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse404'
        '500':
          description: Internal error. A bug report should be filed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastResponse500'
  /license/deactivate: {}
  /upgrade:
    put:
      summary: Trigger upgrade for the latest uploaded artifact.
      operationId: triggerUpgrade
      description: Trigger upgrade for the latest uploaded artifact.
      tags:
        - UpgradeAPI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  description: Name of the latest uploaded artifact.
                signature:
                  type: string
                  description: Name of the latest uploaded signature.
      responses:
        '202':
          $ref: '#/components/responses/JobAccepted'
  /upgrade/{systemId}/stats/{type}:
    parameters:
      - name: systemId
        in: path
        description: System ID of the instance.
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: type
        in: path
        description: Type of report - summary or detail.
        required: true
        schema:
          type: string
          pattern: .*
    get:
      summary: Upgrade event statistics of the instance.
      description: Upgrade event statistics of the instance.
      operationId: upgradeStats
      tags:
        - UpgradeAPI
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpgradeStats'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.UpgradeStatses'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /instance/details:
    get:
      summary: Get container level details for the current instance.
      description: Get container level details for the current instance.
      operationId: instanceDetails
      tags:
        - UpgradeAPI
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstanceDetailsResponseDefinition'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.InstanceDetailsResponseDefinitions'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
  /health/license:
    get:
      summary: Checks if the license has been activated or not.
      description: >-
        This api will check if the signed ack is present inside the database. If
        the signed ack string is present, then it will fetch the string,
        unmarshal it and will return the expiry time to the user.
      operationId: healthLicense
      tags:
        - System
      security:
        - basicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponseDefinition'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/hal.HealthResponseDefinition'
        '500':
          description: Something went wrong internally, and a bug report should be filed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDefinition'
      parameters:
        - in: query
          name: where
          description: Where query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: fields
          description: Fields query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: offset
          description: Offset query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: limit
          description: Limit query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: skip
          description: Skip query parameter.
          schema:
            type: integer
            minimum: 0
            maximum: 2147483647
        - in: query
          name: order
          description: Order query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: include
          description: Include query parameter.
          schema:
            type: array
            items:
              type: string
              maxLength: 64000
        - in: query
          name: sort
          description: Sort query parameter.
          schema:
            type: string
            maxLength: 64000
components:
  examples:
    JobAccepted:
      value:
        id: 43
        verb: PUT
        uri: >-
          https://big-ip-next.example.com/api/0.1/systems/70e6e498-59a9-4202-a59b-25cb179e2dd6
        state: RUNNING
        message:
          code: 100
          title: Message title
        creationTime: '2017-07-21 17:32:28+00:00'
        updateTime: '2017-07-21 17:32:28+00:00'
        owner: olivia
    get_applications:
      summary: This is an example response to get all applications
      value:
        - id: 86657e15-439d-4cef-97bc-58a6c119976b
          name: app1
          domainName: www.f5.com
        - id: 123e4567-e89b-12d3-a456-426655440000
          name: app2
          description: web server for f5-2
          domainName: www.f5-2.com
          stacks:
            - id: 3c51b995-94a9-4d37-90d4-36eeb94f5f87
              name: stack1
              stackType: HttpRevProxy
              enabled: true
              l4ClientSide: oliviasL4ClientSide
              l4ServerSide: oliviasL4ServerSide
              loadBalancing: LEAST_CONNECTIONS
              monitors:
                - http
                - inband
              policies:
                - name: policy1
                  description: any object?
                - name: policy2
                  description: any object!
              tls:
                client:
                  cipherstring: DEFAULT
                  keyCertificatePairs:
                    - keyCertificateProperties:
                        keyType: RSA
                        keyStrength:
                          type: key-size
                          bitLength: 2048
                        x509Properties:
                          subject: >-
                            emailAddress=david@f5testapi.com,CN=f5testapi.com,OU=API
                            Test,O=F5 Test,L=Seattle,ST=WA,C=US
                          issuer: >-
                            emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                            Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                          expiration: '2030-02-05 17:30:00+00:00'
                      keyCertificateContent:
                        keyFile: 24525a95-475b-a513-10b8-514cdf526241
                        certificateFile: 71926b6a-3899-1cb0-90b1-74391bcf8182
                    - keyCertificateProperties:
                        keyType: ECDSA
                        keyStrength:
                          type: curve
                          curveName: secp384r1
                        x509Properties:
                          subject: >-
                            emailAddress=olivia@f5testapi.com,CN=f5testapi.com,OU=API
                            Test,O=F5 Test,L=Seattle,ST=WA,C=US
                          issuer: >-
                            emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                            Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                          expiration: '2030-02-05 17:30:00+00:00'
                  tlsVersions:
                    enableTLS1.3: true
                    enableTLS1.2: true
                    enableTLS1.1: false
                server:
                  cipherstring: DEFAULT
                  tlsVersions:
                    enableTLS1.3: true
                    enableTLS1.2: true
                    enableTLS1.1: false
    create_or_update_multi_host_tls_application:
      summary: >-
        This is an example request body to create or update a multi host tls
        application
      value:
        name: multiHostTlspApplication
        description: A multi host tls application.
        stacks:
          - stackType: HttpAdvancedProxy
            name: httpAdvancedProxy
            clientSide:
              l4ClientSide: oliviasTLSL4ClientSide
              tls:
                defaults:
                  cipherstring: DEFAULT
                  keyCertificatePairs:
                    - keyCertificateContent:
                        keyFile: http-adv-proxy-default-key-file-name
                        certificateFile: http-adv-proxy-default-cert-file-name
                    - keyCertificateContent:
                        key: >-
                          -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                          MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                          -----END PRIVATE KEY-----
                        passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                        certificate: >-
                          -----BEGIN CERTIFICATE-----
                          MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                          -----END CERTIFICATE-----
                  tlsVersions:
                    enableTLS1.3: true
                    enableTLS1.2: true
                    enableTLS1.1: true
                  serverNames:
                    - default.domain.com
                hosts:
                  - cipherstring: DEFAULT
                    keyCertificatePairs:
                      - keyCertificateContent:
                          keyFile: http-adv-proxy-host1-key-file-name
                          certificateFile: http-adv-proxy-host1-cert-file-name
                      - keyCertificateContent:
                          key: >-
                            -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                            MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                            -----END PRIVATE KEY-----
                        passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                        certificate: >-
                          -----BEGIN CERTIFICATE-----
                          MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                          -----END CERTIFICATE-----
                    tlsVersions:
                      enableTLS1.3: true
                      enableTLS1.2: true
                      enableTLS1.1: true
                    serverNames:
                      - '*.host1.domain.com'
                      - host3.domain.com
                      - host4.domain.com
                  - cipherstring: DEFAULT
                    keyCertificatePairs:
                      - keyCertificateContent:
                          keyFile: http-adv-proxy-host2-key-file-name
                          certificateFile: http-adv-proxy-host2-cert-file-name
                      - keyCertificateContent:
                          key: >-
                            -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                            MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                            -----END PRIVATE KEY-----
                          passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                          certificate: >-
                            -----BEGIN CERTIFICATE-----
                            MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                            -----END CERTIFICATE-----
                    tlsVersions:
                      enableTLS1.3: true
                      enableTLS1.2: true
                      enableTLS1.1: true
                    serverNames:
                      - '*.host2.domain.com'
                template: CLIENTSIDE_TLS_MULTI_HOST_TEMPLATE
            serverSide:
              l4ServerSide: oliviasHTTPL4ServerSide
          - stackType: TcpAdvancedProxy
            name: tcpAdvancedProxy
            clientSide:
              l4ClientSide: oliviasTLSL4ClientSide
              tls:
                defaults:
                  cipherstring: DEFAULT
                  keyCertificatePairs:
                    - keyCertificateContent:
                        keyFile: tcp-adv-proxy-default-key-file-name
                        certificateFile: tcp-adv-proxy-default-cert-file-name
                    - keyCertificateContent:
                        key: >-
                          -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                          MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                          -----END PRIVATE KEY-----
                        passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                        certificate: >-
                          -----BEGIN CERTIFICATE-----
                          MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                          -----END CERTIFICATE-----
                  tlsVersions:
                    enableTLS1.3: true
                    enableTLS1.2: true
                    enableTLS1.1: true
                  serverNames:
                    - default.domain.com
                hosts:
                  - cipherstring: DEFAULT
                    keyCertificatePairs:
                      - keyCertificateContent:
                          keyFile: tcp-adv-proxy-host1-key-file-name
                          certificateFile: tcp-adv-proxy-host1-cert-file-name
                      - keyCertificateContent:
                          key: >-
                            -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                            MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                            -----END PRIVATE KEY-----
                          passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                          certificate: >-
                            -----BEGIN CERTIFICATE-----
                            MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                            -----END CERTIFICATE-----
                    tlsVersions:
                      enableTLS1.3: true
                      enableTLS1.2: true
                      enableTLS1.1: true
                    serverNames:
                      - '*.host1.domain.com'
                      - host3.domain.com
                      - host4.domain.com
                  - cipherstring: DEFAULT
                    keyCertificatePairs:
                      - keyCertificateContent:
                          keyFile: tcp-adv-proxy-host2-key-file-name
                          certificateFile: tcp-adv-proxy-host2-cert-file-name
                      - keyCertificateContent:
                          key: >-
                            -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                            MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                            -----END PRIVATE KEY-----
                          passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                          certificate: >-
                            -----BEGIN CERTIFICATE-----
                            MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                            -----END CERTIFICATE-----
                    tlsVersions:
                      enableTLS1.3: true
                      enableTLS1.2: true
                      enableTLS1.1: true
                    serverNames:
                      - '*.host2.domain.com'
                template: CLIENTSIDE_TLS_MULTI_HOST_TEMPLATE
            serverSide:
              l4ServerSide: oliviasHTTPL4ServerSide
        domainName: www.appdomain.com
    create_or_update_application:
      summary: This is an example request body to create or update an application
      value:
        name: httpApplication
        description: A simple http application.
    get_application:
      summary: This is an example response to get an application by id
      value:
        id: 123e4567-e89b-12d3-a456-426655440000
        name: app2
        description: web server for f5-2
        domainName: www.f5-2.com
        stacks:
          - id: 3c51b995-94a9-4d37-90d4-36eeb94f5f87
            name: stack1
            stackType: HttpRevProxy
            enabled: true
            l4ClientSide: oliviasL4ClientSide
            l4ServerSide: oliviasL4ServerSide
            loadBalancing: LEAST_CONNECTIONS
            monitors:
              - http
              - inband
            policies:
              - name: policy1
                description: any object?
              - name: policy2
                description: any object!
            tls:
              client:
                cipherstring: DEFAULT
                keyCertificatePairs:
                  - keyCertificateProperties:
                      keyType: RSA
                      keyStrength:
                        type: key-size
                        bitLength: 2048
                      x509Properties:
                        subject: >-
                          emailAddress=david@f5testapi.com,CN=f5testapi.com,OU=API
                          Test,O=F5 Test,L=Seattle,ST=WA,C=US
                        issuer: >-
                          emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                          Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                        expiration: '2030-02-05 17:30:00+00:00'
                    keyCertificateContent:
                      keyFile: 4fe58103-8637-2c10-055a-25bc1857643d
                      certificateFile: 6ca51740-b82c-3614-59ea-10263764be26
                  - keyCertificateProperties:
                      keyType: ECDSA
                      keyStrength:
                        type: curve
                        curveName: secp384r1
                      x509Properties:
                        subject: >-
                          emailAddress=olivia@f5testapi.com,CN=f5testapi.com,OU=API
                          Test,O=F5 Test,L=Seattle,ST=WA,C=US
                        issuer: >-
                          emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                          Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                        expiration: '2030-02-05 17:30:00+00:00'
                tlsVersions:
                  enableTLS1.3: true
                  enableTLS1.2: true
                  enableTLS1.1: false
              server:
                cipherstring: DEFAULT
                tlsVersions:
                  enableTLS1.3: true
                  enableTLS1.2: true
                  enableTLS1.1: false
    get_stacks:
      summary: This is an example response to get all stacks
      value:
        - id: 3c51b995-94a9-4d37-90d4-36eeb94f5f87
          name: stack1
          stackType: HttpRevProxy
          enabled: true
          l4ClientSide: oliviasL4ClientSide
          l4ServerSide: oliviasL4ServerSide
          loadBalancing: LEAST_CONNECTIONS
          monitors:
            - http
            - inband
          policies:
            - name: policy1
              description: any object?
            - name: policy2
              description: any object!
          tls:
            client:
              cipherstring: DEFAULT
              keyCertificatePairs:
                - keyCertificateProperties:
                    keyType: RSA
                    keyStrength:
                      type: key-size
                      bitLength: 2048
                    x509Properties:
                      subject: >-
                        emailAddress=david@f5testapi.com,CN=f5testapi.com,OU=API
                        Test,O=F5 Test,L=Seattle,ST=WA,C=US
                      issuer: >-
                        emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                        Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                      expiration: '2030-02-05 17:30:00+00:00'
                  keyCertificateContent:
                    keyFile: 1d4900fe-3454-6805-451f-05583fcd1256
                    certificateFile: 4d641602-a509-5f72-05c6-4989e438b2a6
                - keyCertificateProperties:
                    keyType: ECDSA
                    keyStrength:
                      type: curve
                      curveName: secp384r1
                    x509Properties:
                      subject: >-
                        emailAddress=olivia@f5testapi.com,CN=f5testapi.com,OU=API
                        Test,O=F5 Test,L=Seattle,ST=WA,C=US
                      issuer: >-
                        emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                        Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                      expiration: '2030-02-05 17:30:00+00:00'
              tlsVersions:
                enableTLS1.3: true
                enableTLS1.2: true
                enableTLS1.1: false
            server:
              cipherstring: DEFAULT
              tlsVersions:
                enableTLS1.3: true
                enableTLS1.2: true
                enableTLS1.1: false
    create_or_update_declare:
      summary: This is an example request body to create or update a declare
      value:
        token: >-
          eyJhbGciOiJIUzM4NCIsImtpZCI6IjhlOGY3MzEyLTRkZTctNGE1ZS1iNzNkLWFjOWZjYzg5MzgxZSIsInR5cCI6IkpXVCJ9.eyJFeHRlbnNpb25zIjp7IngtZjUtdXNlci1wYXNzLWNoYW5nZSI6WyJubyJdLCJ4LWY1LXVzZXItcm9sZSI6WyJhZG1pbmlzdHJhdG9yIl0sIngtZjUtdXNlci1zdGF0dXMiOlsiZW5hYmxlZCJdLCJ4LWY1LXVzZXItc3RyYXRlZ3kiOlsibG9jYWwiXX0sIkdyb3VwcyI6bnVsbCwiSUQiOiI4Njg1NDk0Ny01MjQxLTQwNzYtOTAzYy0yMmVlOTgwMDkxOTkiLCJOYW1lIjoiYWRtaW4iLCJhdWQiOlsiIl0sImV4cCI6MTY1NzY1MDA3NSwiaWF0IjoxNjU3NjQ2NDc1LCJuYmYiOjE2NTc2NDY0NzUsInN1YiI6Ijg2ODU0OTQ3LTUyNDEtNDA3Ni05MDNjLTIyZWU5ODAwOTE5OSJ9.vC_Ua5LNs6xZGWTghz0KGamHDJIhWFPTtJezYx_XbBPPFsKyJv-jHOvjF360uGIh
        users:
          - password: F5site02!
            role: administrator
            username: exampleuser
          - password: F5site02!
            role: application-owner
            username: applicationuser
        deviceCertificate:
          certificate:
            fileContent: >-
              -----BEGIN
              CERTIFICATE-----\nMIIFbTCCA1WgAwIBAgIUKGT5sE1Y8MWvj0pqi+lK54jWmBswDQYJKoZIhvcNAQEL\nBQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM\nGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAgFw0yMDA5MDgyMTQxMTBaGA8yMTIw\nMDgxNTIxNDExMFowRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUx\nITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDCCAiIwDQYJKoZIhvcN\nAQEBBQADggIPADCCAgoCggIBANhZN7eMzKYIhmzFRos4kQfF5YELI3bBZF5EpYjB\nt1BPimhhxN75hHMDuSBNL3Q1xCcEyzrgZcf4kKJrKoDjKWcJlHJpBrjA7Jex5egV\nOf3Aqytf1R964TpNT6NWMabulMp3uICQuTTyI0XriMtd5gomDo/YWKF/buE2c3Sg\nWDsWTExHECo+w43nU2hWgcd6CIXwVwOtSFwJBXRfOHVzvx8dGdb+/G+ZZuP+AH0n\na47AyZC+Hu5Gv6zh8N1D4EoabZs2Jkg5VPg9rCL/nTUHSQ7EzlGMrRA42XZWMsil\nlqL9Usy/FRNdN0LBUoDyjfGXi/V/gSM+XtLrJi0HsoxjsCJEloXcJvhPDMd/AMty\nUSg2Z98o92cvfn1DVjiZqmumszlSuPN7ZEvG0IrI8qAsWcblXv7usB6GhZhIAiMI\nRZLgqKzEDpAlm99nI1+l3T9lpAMIZwimKC/EJjaOX1lB7Y6uuTeUtZG638z2Px1L\nwjMhAeU6UmKlmAAqKTtFOtEqKRo+M43Rp0GAVRjyygEeLiWHM4Vmi7+lw0VIo5vH\n1hl5EEYU4CSDdWHaGkSTeguEWr+kiT6sExLz2L9XPT33MkKxF8eXUpMro+m7f7rH\nr3NYME9LQGH9HPhoDny23idmyQMgc2g3H6X2Lsv/ILe5m5HYvdKdVqsMx4Pzz6Ub\n1gZDAgMBAAGjUzBRMB0GA1UdDgQWBBTLsNK8eFnJzPZbfOgvLYd9FaRDojAfBgNV\nHSMEGDAWgBTLsNK8eFnJzPZbfOgvLYd9FaRDojAPBgNVHRMBAf8EBTADAQH/MA0G\nCSqGSIb3DQEBCwUAA4ICAQATP6vSG/gkJ7o58W0K3IcLEwXX6h/nvvEzNuaqgdIr\ngFKRqudQgOvsnYpte7bwU/1srbnKwQU+ADdNNHQvwKomoRi/csPg2EVHKd/qXFue\nb+CJVmXKiX0jAqNZrZPtTYsEPf76m68pV5JCPBvBO4au6WivucRGkFH9Fhu7cQMO\nHECgkwm+4I9Uqy8QBNIoqOgVM0tPkv1cYH0wRLXij/svtAT5fkHHwXje4kwmM5lR\nPWA8OInsQw+G+aoGz88rMNQ0CAYqCPgKCsiEfc5zi1fBa7EBEVcvX3Ig6uG1TDBS\n+9I3kQ0J+r6oKDRUmhogOXSKFT7MD8UtS8253sYxBaXJUb4L7FV1Gpi+D6v4gtEY\n0SYYH4hrGea+VO8KUnFPdF27EX6blbTJsBH6VyLS1fQlbaY+wUjgJSNG6XmWThID\nEhvWZQmN2sMYbUvTKrUj0u1Ite1YPlBqGfUXKHardVDB2CtcefBQHfB/wPzEsJ+d\njnnnsKnltTCJYOU3IJO9hpEYZQXPcoGhf2Cd03s1feEVWzB21+/Tm4xZTKuCZbyL\nV4Y2JDVEjSkwhz+buYVEWu7HvMq72vaAuK61Exhwrm43tBFiWNO838vDjSGG3BJj\n9nRBoQer+eDWcCIbsiEKgHc4JPDLFHTFrS32RUWgLhrRX6tWJqZpwEIfdJh5x+2N\npw==\n-----END
              CERTIFICATE-----
            fileName: 10.146.167.212.crt
            fileType: application/x-x509-ca-cert
            name: 10.146.167.212_cert
          key:
            fileContent: >-
              -----BEGIN PRIVATE
              KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDClw1LP1Jn8guG\n5HBvRKd2I292eUaeekEofzgRylQY/EPKChZfepD2IpmzWqppn2IHAP14Vw7fAq/2\na7NOPHa4xXWdO16Sz8DYTXqra0WfvBIJSmweeMPv7+DhS8KQqTd5AtH8K0eDrEAe\nZf0mlbMi9oVN6NNrFCBUTv6EDX9+soPVYXtck/8DYA1gAUAxUVGp+E1uMj+gwwdD\nX1WGmioxkSCi9+Ww3c/TqaE3yHgY8/eVV1FUQPVBl1RGlpKT5+glOC/ZweSLvMJY\n5kLdUeQUJO5Ijlsxyy7w5MNvuOtp8mhzMkrI3/Lomwwnv6fZ4sy9Vuev3eVnDKPU\nkuspyTNTAgMBAAECggEAFPuq4FFctn7ARXR+t1Dk6fVaQKFFPzOZsR8+0ZRKy0Lw\noGnEDdmupgwHHPMK60bXkD/IFWD15pBonx7v/+C/QJ9yVlkfkp86gVihgLiZkmb6\nXuwaipKlNktcqY681VKZ+7+VGycjmAxMAbsnuDBuV7fTmhogKizKa6z0/xJhjCzN\nip2yzV6IjAjYFfGOmY2KZ0r9aBd85PXtLtbKMoVkPP75CZm/FOCKRBKAQQ/Ul7if\nV5XXLK8pThsiMFjiUXFJw5XAMXfRF+EeDzG8+JYu1bJcymAr6dyBu3E7sjFadaV3\nHbafQzoR2CNXpO0G9U3khtp9EsSK7D86tIaW9yWseQKBgQDwt7bylTB29gqOuNqD\nwMGGjeHjOmG9IQQcDIjNCa/eZ8a0KQwc9Ax4o8j6x3npFtChoO9tmTpcvw2eyOUP\ne6CvFiTm3JjFKaUtCudkyj/qujocpieFTWgUCQ73zUT0SB1+f3YoaPodW6xMvD+z\n7QOCXpH7fZ7zQ33Dsb4TNy3+HwKBgQDO8aT6DRKuUi7Wr8kl4sXqKQqwXeAM+EWY\n2QRbKNpB2UBC8ST1Tr6bcssDHgmZa8w2ilVQo6YOqkv4q5+qWcAiK2JobI0eYUBW\nlqIpl1t1bNsLIen+pMwr5ZcobUX4+sjAQEA/JHor+aLdZ32jfpLKQKp7M764uvjM\nXcIiQQu8TQKBgQCHwgTCwRMJNG/12BkczzwVx7UKsuVmhdVMgGEyyfDOzNZKyw+S\n0Kyr6SszDAccRwq47Qu7UvyQTAvBbmmJFt8jf6imLulV4MvQIGMp+8qadhbKC4ck\nbehxzD4N0U2/O2Cu8/HOjo3ousfsqwp+TgB5qR5JqKpZZcnq8TZSnf8pXwKBgCIa\nUEWkwd9YS7+1WECWDmd4O/q0faelglKd8MnVAaK4Wo6tjpmeUGrtj+cDnDFcQlr6\nkPSpA0SHa92e6sD36WG4JI9w1BCdliyuxip0du3y8mXzQMxl+/9/5lkTKOTO7yY/\ncFb3e+qjSOOTmnDG+wm5fl6vOE7ZAQcsrEFY1sZBAoGBAI9ofeGjY2fTtAikdNn2\njlPP9q7UhtERo7zab0oNH0fV27LPKtVXUu8O3wlr0Gu+ZkJP47qh3XBWgMFGxTYM\n4uwG1GFRwXtB2G+9ud6sUH5UKzNw7uRc57sN6NW2h3RPO5k2SqBB1DiptC0Elyzy\n12TCxoVxoBpKspEfA9sOVUWK\n-----END
              PRIVATE KEY-----
            fileName: 10.146.167.212.key
            fileType: application/pkcs8
            name: 10.146.167.212_key
        platform:
          platformType: ve
          defaultGateway: 10.146.167.254
          dnsServers:
            - 127.0.0.53
          hostname: mBIP
          managementIps:
            - 10.146.165.186/24
          ntpServers:
            - 0.ro.pool.ntp.org
            - 1.ro.pool.ntp.org
          remoteSyslogServers:
            - host: 172.28.31.40
              name: syslogServer1
              remotePort: 514
            - host: 172.28.31.37
              name: syslogServer2
              remotePort: 51400
          vlans:
            - name: vlan-3000
              selfIps:
                - address: 10.20.0.212/16
              untaggedInterfaces:
                - '1.1'
            - name: vlan-4000
              selfIps:
                - address: 10.21.0.212/16
              untaggedInterfaces:
                - '1.2'
    create_or_update_stack:
      summary: This is an example request body to create or update a stack
      value:
        name: stack1
        stackType: HttpRevProxy
        enabled: true
        l4ClientSide: oliviasL4ClientSide
        l4ServerSide: oliviasL4ServerSide
        loadBalancing: LEAST_CONNECTIONS
        monitors:
          - http
          - inband
        policies:
          - name: policy1
            description: any object?
          - name: policy2
            description: any object!
        tls:
          client:
            cipherstring: DEFAULT
            keyCertificatePairs:
              - keyCertificateContent:
                  keyFile: 4fe58103-8637-2c10-055a-25bc1857643d
                  certificateFile: 6ca51740-b82c-3614-59ea-10263764be26
              - keyCertificateContent:
                  key: >-
                    -----EXAMPLE KEY BEGIN PRIVATE KEY-----
                    MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDCeX0IrLZcy1dI+vY4d
                    -----END PRIVATE KEY-----
                  passphrase: THIS_PASSPHRASE_IS_NOT_SECURE
                  certificate: >-
                    -----BEGIN CERTIFICATE-----
                    MIICTDCCAdGgAwIBAgIEE6mlhDAKBggqhkjOPQQDAjCBjjELMAkGA1UEBhMCVVMx
                    -----END CERTIFICATE-----
            tlsVersions:
              enableTLS1.3: true
              enableTLS1.2: true
              enableTLS1.1: false
          server:
            cipherstring: DEFAULT
            tlsVersions:
              enableTLS1.3: true
              enableTLS1.2: true
              enableTLS1.1: false
    get_stack:
      summary: This is an example response to get a stack from stack id
      value:
        id: 3c51b995-94a9-4d37-90d4-36eeb94f5f87
        name: stack1
        stackType: HttpRevProxy
        enabled: true
        l4ClientSide: oliviasL4ClientSide
        l4ServerSide: oliviasL4ServerSide
        loadBalancing: LEAST_CONNECTIONS
        monitors:
          - http
          - inband
        policies:
          - name: policy1
            description: any object?
          - name: policy2
            description: any object!
        tls:
          client:
            cipherstring: DEFAULT
            keyCertificatePairs:
              - keyCertificateProperties:
                  keyType: RSA
                  keyStrength:
                    type: key-size
                    bitLength: 2048
                  x509Properties:
                    subject: >-
                      emailAddress=david@f5testapi.com,CN=f5testapi.com,OU=API
                      Test,O=F5 Test,L=Seattle,ST=WA,C=US
                    issuer: >-
                      emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                      Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                    expiration: '2030-02-05 17:30:00+00:00'
                keyCertificateContent:
                  keyFile: 4fe58103-8637-2c10-055a-25bc1857643d
                  certificateFile: 6ca51740-b82c-3614-59ea-10263764be26
              - keyCertificateProperties:
                  keyType: ECDSA
                  keyStrength:
                    type: curve
                    curveName: secp384r1
                  x509Properties:
                    subject: >-
                      emailAddress=olivia@f5testapi.com,CN=f5testapi.com,OU=API
                      Test,O=F5 Test,L=Seattle,ST=WA,C=US
                    issuer: >-
                      emailAddress=admin@f5testCA.com,CN=f5testCA.com,OU=API
                      Test,O=F5 CA Test,L=Seattle,ST=WA,C=US
                    expiration: '2030-02-05 17:30:00+00:00'
            tlsVersions:
              enableTLS1.3: true
              enableTLS1.2: true
              enableTLS1.1: false
          server:
            cipherstring: DEFAULT
            tlsVersions:
              enableTLS1.3: true
              enableTLS1.2: true
              enableTLS1.1: false
    get_files:
      summary: This is an example to get all files.
      value:
        - id: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
          name: ThisIsAFile.txt
          description: This is the file used by Alan Turing
          hash: 3187BD6574383BE789DF9693F757CE19E0C17BFCCF124028F363D9403BA89046
          size: 1024
          uri: aaa/bbb/ccc
          type: ARCHIVE
          last_updated: '2009-06-01T13:45:30'
        - id: 44de7b7e-bc7b-4b21-806b-119f3dd2812a
          name: ThisIsAKey.key
          description: This is the key used by Alan Turing
          hash: 282338E8C603B708CCD8729D7474CDA003F9DAA99C0A24A7249C5BD085A703A2
          size: 2048
          uri: aaa/bbb/ccc
          type: PRIVATE_KEY
          last_updated: '2009-06-01T13:45:30'
    post_file_archive:
      summary: This is an example to upload an archive file
      value:
        - fileName: ThisIsAFile.txt
    post_file_key:
      summary: This is an example to upload a key file
      value:
        - fileName: ThisIsAKey.key
    get_file_metadata:
      summary: This is an example of a file metadata
      value:
        id: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name: ThisIsAFile.txt
        description: This is the file used by Alan Turing
        hash: 3187BD6574383BE789DF9693F757CE19E0C17BFCCF124028F363D9403BA89046
        size: 1024
        uri: aaa/bbb/ccc
        type: ARCHIVE
        last_updated: '2009-06-01T13:45:30'
  responses:
    JobAccepted:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Job'
          example:
            $ref: '#/components/examples/JobAccepted'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    refreshAuth:
      type: http
      scheme: bearer
      bearerFormat: OPAQUE
  schemas:
    AccessLogLevel:
      type: object
      title: Access Log Settings
      description: Access log settings.
      properties:
        id:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: ID
          description: ID for logging levels.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        component:
          type: string
          maxLength: 64000
          enum:
            - apmd
            - tmm
            - websso
            - renderer
          title: Access component
          description: Specifies Access component.
        policy:
          type: string
          maxLength: 192
          default: ''
          title: Access Policy name
          description: Access Policy name (optional).
        level:
          type: string
          maxLength: 64000
          enum:
            - EMERGENCY
            - ALERT
            - CRITICAL
            - ERROR
            - WARNING
            - NOTICE
            - INFO
            - DEBUG
          title: Log Level
          description: >-
            Acceptable log levels "EMERGENCY", "ALERT", "CRITICAL", "ERROR",
            "WARNING", "NOTICE", "INFO" and "DEBUG".
      required:
        - component
        - level
      additionalProperties: false
    AccessPolicy:
      oneOf:
        - $ref: '#/components/schemas/PerSessionAccessPolicy'
        - $ref: '#/components/schemas/PerRequestAccessPolicy'
    AccessPolicyItemName:
      title: Name of Access Policy Item
      description: A string without white spaces.
      type: string
      maxLength: 255
      pattern: ^[a-zA-Z0-9@#(){}_.-]*$
    AccessPolicyRuleExpression:
      title: Expression to choose this branch
      description: Expression to choose this branch.
      type: string
      minLength: 1
      maxLength: 255
    AccessProfileDomainMode:
      type: string
      maxLength: 64000
      enum:
        - single
        - multiple
      default: single
    AccessProfileSamesiteCookieAttrValue:
      type: string
      maxLength: 64000
      enum:
        - strict
        - lax
        - none
      default: strict
    AccessProfileScope:
      type: string
      maxLength: 64000
      enum:
        - profile
        - virtual-server
        - global
      default: profile
    AccessProfileType:
      type: string
      maxLength: 64
      enum:
        - all
        - ltm-apm
        - sso
    AccessSession:
      type: object
      title: Access Session
      description: Access session.
      required:
        - sessionId
      properties:
        sessionId:
          type: string
          maxLength: 16
          pattern: '[0-9a-fA-F]{8}'
          example: 8a72314b
          title: Session ID
          description: Session ID.
        status:
          type: string
          maxLength: 64
          title: Session Status
          description: Session status.
          enum:
            - established
            - pending
        policyName:
          type: string
          maxLength: 192
          title: Access Policy Name
          description: Access policy name.
        user:
          type: string
          maxLength: 192
          title: Logon User Name
          description: Logon user name.
        clientIp:
          $ref: '#/components/schemas/IpAddress'
          title: Client IP Address
          description: Client IP address.
        startTime:
          type: string
          format: date-time
          maxLength: 192
          title: Start Time
          description: Start time of the session.
        expirationTime:
          type: string
          format: date-time
          maxLength: 192
          title: Expiration Time
          description: Expiration time of the session.
      additionalProperties: false
    AccessSessionErrorResponseDefinition:
      type: object
      title: Error Response Definition
      description: Error response definition.
      properties:
        message:
          type: string
          maxLength: 64000
          title: Error Message
          description: Additional information about the error.
      additionalProperties: false
    AccessToken:
      title: Access Token
      description: >-
        The access token that contains the security credentials to use in
        token-based authentication.
      type: object
      properties:
        token:
          type: string
          maxLength: 64000
          readOnly: true
          title: Token Value
          description: The access token string as issued by the api-engine.
        tokenType:
          title: Token Type
          description: The type of token this is, typically just the string 'Bearer'.
          type: string
          maxLength: 64000
          readOnly: true
          enum:
            - Bearer
        expiresIn:
          title: Token Expires In
          description: The duration of time (in seconds) the access token is granted for.
          type: integer
          readOnly: true
          minimum: 0
          maximum: 2147483647
        refreshToken:
          title: Refresh Token
          description: The refresh token issued to the user logging in.
          type: string
          maxLength: 64000
          readOnly: true
        refreshExpiresIn:
          title: Refresh Token Expires In
          description: The duration of time (in seconds) the refresh token is granted for.
          type: integer
          readOnly: true
          minimum: 0
          maximum: 2592000
        refreshEndDate:
          title: Refresh End Date
          description: >-
            The end date as a RFC3339 UTC timestamp for when the refresh token
            chain expires.
          type: string
          maxLength: 64000
          format: date-time
          readOnly: true
      additionalProperties: false
    AnalyticsHttp:
      type: object
      title: HTTP Analytics
      description: Metrics related to HTTP traffic.
      properties:
        id:
          readOnly: true
          title: Analytics Settings ID
          description: The ID for HTTP analytics settings.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        collectClientLatency:
          type: boolean
          default: false
          title: Collect Client Latency
          description: >-
            Specifies, when true, that client latency metric should be
            collected.
        collectUrl:
          type: boolean
          default: true
          title: Collect URL
          description: Specifies, when true, that URL should be collected.
        collectIp:
          type: boolean
          default: true
          title: Collect IP
          description: Specifies, when true, that client IP address should be collected.
        collectDestIpGeo:
          type: boolean
          default: true
          title: Collect Destination IP And Geo
          description: >-
            Specifies, when true, that desination IP address and geo location
            should be collected.
        collectSubnet:
          type: boolean
          default: true
          title: Collect Subnet
          description: Specifies, when true, that subnet should be collected.
        collectGeo:
          type: boolean
          default: true
          title: Collect Source Geo
          description: Specifies, when true, that source geo location should be collected.
        collectUserAgent:
          type: boolean
          default: true
          title: Collect User Agent
          description: >-
            Specifies, when true, that user agent HTTP header should be
            collected.
        collectBrowser:
          type: boolean
          default: true
          title: Collect Client Browser
          description: Specifies, when true, that client browser should be collected.
        collectOs:
          type: boolean
          default: true
          title: Collect Client OS Type
          description: Specifies, when true, that client OS type should be collected.
        collectResponseCodes:
          type: boolean
          default: true
          title: Collect HTTP Response Codes
          description: Specifies, when true, that HTTP response codes should be collected.
        collectMethods:
          type: boolean
          default: true
          title: Collect HTTP Methods
          description: Specifies, when true, that HTTP methods should be collected.
        collectMaxTpsAndThroughput:
          type: boolean
          default: true
          title: Collect Max Transactions and Throughput
          description: >-
            Specifies, when true, that max transactions per second and max
            throughput metrics should be collected.
        collectHttpTimingMetrics:
          type: boolean
          default: false
          title: Collect HTTP Timing Metrics
          description: >-
            Specifies, when true, that the following timing metrics should be
            collected: application response time, TTFB, network latencies,
            request and response durations.
        collectUserSessions:
          type: boolean
          default: true
          title: Collect User Sessions
          description: Specifies, when true, that user sessison should be collected.
        sessionTimeout:
          minimum: 0
          maximum: 3600
          title: Session Timeout
          description: >-
            Specifies the session timeout value in seconds. The range is from 0
            (zero) to 3600 seconds (1 hour). The default value is 600 seconds
            (10 minutes).
          type: integer
          format: uint32
        sampling:
          type: boolean
          default: true
          title: Sampling Mode On
          description: >-
            Specifies, when true, that sampling mode is on. Sampling mode
            collects only one set of HTTP transactions statistics per Sampling
            Ratio. The default is true.
        samplingRatio:
          minimum: 1
          maximum: 10000
          title: Sampling Ratio
          description: >-
            Specifies how many HTTP transactions are reported as a single
            analytics sample. Used when Sampling Mode On is true. The range is
            from 1 to 10000. The default value is 2.
          type: integer
          format: uint32
        sessionCookieSecurity:
          type: string
          maxLength: 64000
          enum:
            - always
            - only_ssl
            - never
          default: only_ssl
          title: Session Cookie Security
          description: >-
            Specifies when to use session cookie security: always, only_ssl, and
            never. The default value is only_ssl.
      additionalProperties: false
    AnalyticsTcp:
      type: object
      title: TCP analytics
      description: Reports TCP analytics.
      properties:
        id:
          readOnly: true
          title: Analytics Settings ID
          description: The ID number for TCP analytics settings.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        collectCity:
          type: boolean
          default: false
          title: Collect City
          description: Specifies, when true, that city name should be collected.
        collectContinent:
          type: boolean
          default: true
          title: Collect Continent
          description: Specifies, when true, that continent name should be collected.
        collectCountry:
          type: boolean
          default: true
          title: Collect Country
          description: Specifies, when true, that country name should be collected.
        collectNexthop:
          type: boolean
          default: false
          title: Collect Next Hop Address
          description: Specifies, when true, that next hop address should be collected.
        collectPostCode:
          type: boolean
          default: false
          title: Collect Post Code
          description: Specifies, when true, that post code should be collected.
        collectRegion:
          type: boolean
          default: false
          title: Collect Region
          description: Specifies, when true, that region should be collected.
        collectRemoteHostIp:
          type: boolean
          default: false
          title: Collect Remote Host IP
          description: >-
            Specifies, when true, that IP address of remote host should be
            collected.
        collectRemoteHostSubnet:
          type: boolean
          default: true
          title: Collect Remote Host Subnet
          description: >-
            Specifies, when true, that subnet of remote host should be
            collected.
        collectedByClientSide:
          type: boolean
          default: true
          title: Collect Client Side
          description: >-
            Specifies, when true, that analytics data on client side should be
            collected.
        collectedByServerSide:
          type: boolean
          default: false
          title: Collect Server Side
          description: >-
            Specifies, when true, that analytics data on server side should be
            collected.
        description:
          type: string
          maxLength: 256
          title: Description
          description: Description of TCP settings. The maximum length is 256 characters.
      additionalProperties: false
    Application:
      type: object
      required:
        - name
      title: Application
      description: Application.
      properties:
        id:
          readOnly: true
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Application ID
          description: Application ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Application
          title: Name
          description: Application name.
        description:
          type: string
          maxLength: 256
          default: an application
          nullable: true
          example: Netop's HTTP Application.
          title: Description
          description: >-
            Describes the application. The default value is 'an application'.
            The maximum length is 256 characters.
        domainName:
          title: Domain Name
          description: >-
            The name of the trusted domain that contains all of the user account
            information.
          example: netops.example.com
          type: string
          minLength: 1
          maxLength: 253
          pattern: '[a-zA-Z_]+([a-zA-Z0-9\-\._]*)'
        stacks:
          type: array
          default: []
          title: Application Stacks
          description: Application stacks.
          items:
            $ref: '#/components/schemas/Stack'
      additionalProperties: false
    Arp:
      type: object
      title: ARP
      description: ARP.
      properties:
        id:
          title: ID
          description: ARP ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    Attribute:
      type: object
      description: An attribute consuming service object.
      properties:
        name:
          description: An optional name of the attribute.
          type: string
        attributeName:
          description: A unique name for the attribute.
          type: string
        attributeFriendlyName:
          description: >-
            A more human-readable form of the attribute name for cases where
            attribute-name is complex.
          type: string
        attributeNameFormat:
          description: A format of the attribute name.
          type: string
          enum:
            - basic
            - uri
            - unspecified
          default: unspecified
        isRequired:
          description: >-
            Set this property to true if the IdP expects signed authentication
            requests.
          type: boolean
          default: false
      required:
        - name
        - attributeName
        - attributeFriendlyName
        - attributeNameFormat
      additionalProperties: false
    AttributeConsumingService:
      description: >-
        Defines a service and a list of attributes to be used by the service. It
        is typically used with AttributeConsumingServiceIndex used to map to an
        attributeConsumingService.
      type: object
      properties:
        name:
          description: An optional name of the attribute consuming service.
          type: string
        serviceName:
          description: The attribute consuming service name.
          type: string
        attributes:
          description: An array of attributeConsumingService attributes.
          type: array
          items:
            type: object
            description: An attribute consuming service object.
            properties:
              name:
                description: An optional name of the attribute.
                type: string
              attributeName:
                description: A unique name for the attribute.
                type: string
              attributeFriendlyName:
                description: >-
                  A more human-readable form of the attribute name for cases
                  where attribute-name is complex.
                type: string
              attributeNameFormat:
                description: A format of the attribute name.
                type: string
                enum:
                  - basic
                  - uri
                  - unspecified
                default: unspecified
              isRequired:
                description: >-
                  Set this property to true if the IdP expects signed
                  authentication requests.
                type: boolean
                default: false
            required:
              - name
              - attributeName
              - attributeFriendlyName
              - attributeNameFormat
            additionalProperties: false
          minItems: 1
      required:
        - name
        - serviceName
      additionalProperties: false
    AuthContextClass:
      description: values from urn:oasis:names:tc:SAML:2.0:ac:classes
      enum:
        - InternetProtocol
        - InternetProtocolPassword
        - Kerberos
        - MobileOneFactorUnregistered
        - MobileTwoFactorUnregistered
        - MobileOneFactorContract
        - MobileTwoFactorContract
        - Password
        - PasswordProtectedTransport
        - PreviousSession
        - X509
        - PGP
        - SPKI
        - XMLDSig
        - Smartcard
        - SmartcardPKI
        - SoftwarePKI
        - Telephony
        - NomadTelephony
        - PersonalTelephony
        - AuthenticatedTelephony
        - SecureRemotePassword
        - TLSClient
        - TimeSyncToken
        - unspecified
    Backup:
      type: object
      title: Backup payload
      description: Backup details.
      properties:
        name:
          type: string
          maxLength: 100
          title: Name
          description: The requested backup file name.
          default: ''
        password:
          type: string
          maxLength: 400
          title: Password
          description: The requested password to protect the backup file.
          default: ''
          writeOnly: true
      additionalProperties: false
    BindingType:
      description: values from urn:oasis:names:tc:SAML:2.0:bindings
      enum:
        - http-post
        - http-redirect
        - http-artifact
        - soap
        - paos
      default: http-post
    BitLength:
      type: string
      maxLength: 64000
      enum:
        - '2048'
        - '4096'
    ClientSideTLSVersions:
      title: Client-Side TLS Versions
      type: object
      description: TLS versions.
      default: {}
      properties:
        id:
          readOnly: true
          title: TLS Version ID
          description: TLS version ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        enableTLS1.3:
          type: boolean
          default: true
          title: Enable TLS 1.3
          description: Specifies whether TLS 1.3 is enabled. The default is true.
        enableTLS1.2:
          type: boolean
          default: true
          title: Enable TLS 1.2
          description: Specifies whether TLS 1.2 is enabled. The default is true.
        enableTLS1.1:
          type: boolean
          default: false
          title: Enable TLS 1.1
          description: Specifies whether TLS 1.1 is enabled. The default is false.
      additionalProperties: false
    ClientSideTlsDefault:
      type: object
      title: TLS Client
      description: Specifies TLS client settings.
      properties:
        id:
          readOnly: true
          title: TLS Client ID
          description: Presents the TLS client ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        cipherstring:
          type: string
          maxLength: 64000
          default: DEFAULT
          title: Cipher String
          description: Maximum length allowed for the cipher string is 64,000 characters.
        keyCertificatePairs:
          title: Certificate Key Pairs
          description: Specifies the certificate and key pairs.
          type: array
          items:
            type: object
            title: Key Certificate
            description: Key certificate.
            properties:
              id:
                readOnly: true
                title: Key Certificate ID
                description: Key certificate ID.
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              keyCertificateProperties:
                type: object
                readOnly: true
                title: Key Certificate Properties
                description: Key certificate properties.
                properties:
                  id:
                    readOnly: true
                    title: File ID
                    description: File certificate properties ID.
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                    example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                  keyType:
                    title: Key Type
                    description: Key type.
                    type: string
                    maxLength: 64000
                    enum:
                      - RSA
                      - ECDSA
                  keyStrength:
                    title: Key Strength
                    description: Key strength.
                    oneOf:
                      - $ref: '#/components/schemas/KeySize'
                      - $ref: '#/components/schemas/Curve'
                    discriminator:
                      propertyName: type
                      mapping:
                        key-size: '#/keySize'
                        curve: '#/curve'
                  x509CertificateProperties:
                    type: object
                    title: X.509 Certificate Properties
                    description: X.509 certificate properties.
                    properties:
                      id:
                        readOnly: true
                        title: X.509 Certificate Properties ID
                        description: X.509 certificate properties ID.
                        type: string
                        format: uuid
                        pattern: >-
                          [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                        example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                      subject:
                        type: string
                        maxLength: 64000
                        title: Certificate Subject
                        description: Certificate subject.
                      issuer:
                        type: string
                        maxLength: 64000
                        title: Certificate Issuer
                        description: Certificate issuer.
                      expiration:
                        type: string
                        maxLength: 64000
                        format: date-time
                        title: Certificate Expiration
                        description: Certificate expiration.
                  keyPath:
                    type: string
                    maxLength: 64000
                    format: uri
                    title: Key Path
                    description: Key path.
                  certificatePath:
                    type: string
                    maxLength: 64000
                    format: uri
                    title: Certificate Path
                    description: Certificate path.
              keyCertificateContent:
                title: Key Certificate Content
                description: Key certificate content.
                oneOf:
                  - $ref: '#/components/schemas/KeyCertificatePEMContents'
                  - $ref: '#/components/schemas/KeyCertificateFileReferences'
            additionalProperties: false
        tlsVersions:
          title: TLS Version
          description: >-
            The TLS version for the client-side settings is needed only if
            you're using something other than the default TLS profile template.
          type: object
          default: {}
          properties:
            id:
              readOnly: true
              title: TLS Version ID
              description: TLS version ID.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            enableTLS1.3:
              type: boolean
              default: true
              title: Enable TLS 1.3
              description: Specifies whether TLS 1.3 is enabled. The default is true.
            enableTLS1.2:
              type: boolean
              default: true
              title: Enable TLS 1.2
              description: Specifies whether TLS 1.2 is enabled. The default is true.
            enableTLS1.1:
              type: boolean
              default: false
              title: Enable TLS 1.1
              description: Specifies whether TLS 1.1 is enabled. The default is false.
          additionalProperties: false
      additionalProperties: false
    ClientSideTlsMulti:
      type: object
      title: Multi Host TLS Client Settings
      description: Multi-host TLS client settings.
      properties:
        id:
          readOnly: true
          title: TLS Client ID
          description: The ID for the TLS client.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        defaults:
          title: Default Settings
          description: Default settings.
          type: object
          properties:
            id:
              readOnly: true
              title: TLS Client ID
              description: Read-only ID for TLS client.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            cipherstring:
              type: string
              maxLength: 64000
              default: DEFAULT
              title: Cipher String
              description: >-
                Maximum length allowed for the cipher string is 64,000
                characters.
            keyCertificatePairs:
              title: Certificate and Key Pairs
              description: The certificate and key pairs.
              type: array
              items:
                type: object
                title: Key Certificate
                description: Key certificate.
                properties:
                  id:
                    readOnly: true
                    title: Key Certificate ID
                    description: Key certificate ID.
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                    example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                  keyCertificateProperties:
                    type: object
                    readOnly: true
                    title: Key Certificate Properties
                    description: Key certificate properties.
                    properties:
                      id:
                        readOnly: true
                        title: File ID
                        description: File certificate properties ID.
                        type: string
                        format: uuid
                        pattern: >-
                          [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                        example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                      keyType:
                        title: Key Type
                        description: Key type.
                        type: string
                        maxLength: 64000
                        enum:
                          - RSA
                          - ECDSA
                      keyStrength:
                        title: Key Strength
                        description: Key strength.
                        oneOf:
                          - $ref: '#/components/schemas/KeySize'
                          - $ref: '#/components/schemas/Curve'
                        discriminator:
                          propertyName: type
                          mapping:
                            key-size: '#/keySize'
                            curve: '#/curve'
                      x509CertificateProperties:
                        type: object
                        title: X.509 Certificate Properties
                        description: X.509 certificate properties.
                        properties:
                          id:
                            readOnly: true
                            title: X.509 Certificate Properties ID
                            description: X.509 certificate properties ID.
                            type: string
                            format: uuid
                            pattern: >-
                              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                            example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                          subject:
                            type: string
                            maxLength: 64000
                            title: Certificate Subject
                            description: Certificate subject.
                          issuer:
                            type: string
                            maxLength: 64000
                            title: Certificate Issuer
                            description: Certificate issuer.
                          expiration:
                            type: string
                            maxLength: 64000
                            format: date-time
                            title: Certificate Expiration
                            description: Certificate expiration.
                      keyPath:
                        type: string
                        maxLength: 64000
                        format: uri
                        title: Key Path
                        description: Key path.
                      certificatePath:
                        type: string
                        maxLength: 64000
                        format: uri
                        title: Certificate Path
                        description: Certificate path.
                  keyCertificateContent:
                    title: Key Certificate Content
                    description: Key certificate content.
                    oneOf:
                      - $ref: '#/components/schemas/KeyCertificatePEMContents'
                      - $ref: '#/components/schemas/KeyCertificateFileReferences'
                additionalProperties: false
            tlsVersions:
              title: TLS Version
              description: The client-side TLS version number.
              type: object
              default: {}
              properties:
                id:
                  readOnly: true
                  title: TLS Version ID
                  description: TLS version ID.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                enableTLS1.3:
                  type: boolean
                  default: true
                  title: Enable TLS 1.3
                  description: Specifies whether TLS 1.3 is enabled. The default is true.
                enableTLS1.2:
                  type: boolean
                  default: true
                  title: Enable TLS 1.2
                  description: Specifies whether TLS 1.2 is enabled. The default is true.
                enableTLS1.1:
                  type: boolean
                  default: false
                  title: Enable TLS 1.1
                  description: Specifies whether TLS 1.1 is enabled. The default is false.
              additionalProperties: false
            serverNames:
              type: array
              title: Server List
              description: >-
                List of host names, or an entire domain for SNI matching to
                select this client side TLS settings.
              items:
                type: string
                minLength: 1
                maxLength: 253
                pattern: '[a-zA-Z_]+([a-zA-Z0-9\-\._]*)'
                description: Domain name
                title: Domain Name
          additionalProperties: false
        hosts:
          type: array
          title: Host Specific Settings
          description: Host-specific settings.
          items:
            type: object
            title: TLS Host Client Settings
            description: Host-specific TLS client setting for multi-host configuration.
            properties:
              id:
                readOnly: true
                title: TLS Client ID
                description: Read-only ID for TLS client.
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              cipherstring:
                type: string
                maxLength: 64000
                default: DEFAULT
                title: Cipher String
                description: >-
                  Maximum length allowed for the cipher string is 64,000
                  characters.
              keyCertificatePairs:
                title: Certificate and Key Pairs
                description: The certificate and key pairs.
                type: array
                items:
                  type: object
                  title: Key Certificate
                  description: Key certificate.
                  properties:
                    id:
                      readOnly: true
                      title: Key Certificate ID
                      description: Key certificate ID.
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    keyCertificateProperties:
                      type: object
                      readOnly: true
                      title: Key Certificate Properties
                      description: Key certificate properties.
                      properties:
                        id:
                          readOnly: true
                          title: File ID
                          description: File certificate properties ID.
                          type: string
                          format: uuid
                          pattern: >-
                            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                        keyType:
                          title: Key Type
                          description: Key type.
                          type: string
                          maxLength: 64000
                          enum:
                            - RSA
                            - ECDSA
                        keyStrength:
                          title: Key Strength
                          description: Key strength.
                          oneOf:
                            - $ref: '#/components/schemas/KeySize'
                            - $ref: '#/components/schemas/Curve'
                          discriminator:
                            propertyName: type
                            mapping:
                              key-size: '#/keySize'
                              curve: '#/curve'
                        x509CertificateProperties:
                          type: object
                          title: X.509 Certificate Properties
                          description: X.509 certificate properties.
                          properties:
                            id:
                              readOnly: true
                              title: X.509 Certificate Properties ID
                              description: X.509 certificate properties ID.
                              type: string
                              format: uuid
                              pattern: >-
                                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                            subject:
                              type: string
                              maxLength: 64000
                              title: Certificate Subject
                              description: Certificate subject.
                            issuer:
                              type: string
                              maxLength: 64000
                              title: Certificate Issuer
                              description: Certificate issuer.
                            expiration:
                              type: string
                              maxLength: 64000
                              format: date-time
                              title: Certificate Expiration
                              description: Certificate expiration.
                        keyPath:
                          type: string
                          maxLength: 64000
                          format: uri
                          title: Key Path
                          description: Key path.
                        certificatePath:
                          type: string
                          maxLength: 64000
                          format: uri
                          title: Certificate Path
                          description: Certificate path.
                    keyCertificateContent:
                      title: Key Certificate Content
                      description: Key certificate content.
                      oneOf:
                        - $ref: '#/components/schemas/KeyCertificatePEMContents'
                        - $ref: '#/components/schemas/KeyCertificateFileReferences'
                  additionalProperties: false
              tlsVersions:
                title: TLS Version
                description: The client-side TLS version number.
                type: object
                default: {}
                properties:
                  id:
                    readOnly: true
                    title: TLS Version ID
                    description: TLS version ID.
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                    example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                  enableTLS1.3:
                    type: boolean
                    default: true
                    title: Enable TLS 1.3
                    description: Specifies whether TLS 1.3 is enabled. The default is true.
                  enableTLS1.2:
                    type: boolean
                    default: true
                    title: Enable TLS 1.2
                    description: Specifies whether TLS 1.2 is enabled. The default is true.
                  enableTLS1.1:
                    type: boolean
                    default: false
                    title: Enable TLS 1.1
                    description: >-
                      Specifies whether TLS 1.1 is enabled. The default is
                      false.
                additionalProperties: false
              serverNames:
                type: array
                title: Server List
                description: >-
                  List of host names, or an entire domain for SNI matching to
                  select this client side TLS settings.
                items:
                  type: string
                  minLength: 1
                  maxLength: 253
                  pattern: '[a-zA-Z_]+([a-zA-Z0-9\-\._]*)'
                  description: Domain name
                  title: Domain Name
            additionalProperties: false
        template:
          title: Template Type
          description: >-
            The type of template to use for the multi-host client-side TLS
            settings.
          type: string
          maxLength: 64000
          enum:
            - CLIENTSIDE_TLS_MULTI_HOST_TEMPLATE
      required:
        - template
        - defaults
      additionalProperties: false
    ClientSideTlsMultiHost:
      type: object
      title: TLS Host Client Settings
      description: Host-specific TLS client setting for multi-host configuration.
      properties:
        id:
          readOnly: true
          title: TLS Client ID
          description: Read-only ID for TLS client.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        cipherstring:
          type: string
          maxLength: 64000
          default: DEFAULT
          title: Cipher String
          description: Maximum length allowed for the cipher string is 64,000 characters.
        keyCertificatePairs:
          title: Certificate and Key Pairs
          description: The certificate and key pairs.
          type: array
          items:
            type: object
            title: Key Certificate
            description: Key certificate.
            properties:
              id:
                readOnly: true
                title: Key Certificate ID
                description: Key certificate ID.
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              keyCertificateProperties:
                type: object
                readOnly: true
                title: Key Certificate Properties
                description: Key certificate properties.
                properties:
                  id:
                    readOnly: true
                    title: File ID
                    description: File certificate properties ID.
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                    example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                  keyType:
                    title: Key Type
                    description: Key type.
                    type: string
                    maxLength: 64000
                    enum:
                      - RSA
                      - ECDSA
                  keyStrength:
                    title: Key Strength
                    description: Key strength.
                    oneOf:
                      - $ref: '#/components/schemas/KeySize'
                      - $ref: '#/components/schemas/Curve'
                    discriminator:
                      propertyName: type
                      mapping:
                        key-size: '#/keySize'
                        curve: '#/curve'
                  x509CertificateProperties:
                    type: object
                    title: X.509 Certificate Properties
                    description: X.509 certificate properties.
                    properties:
                      id:
                        readOnly: true
                        title: X.509 Certificate Properties ID
                        description: X.509 certificate properties ID.
                        type: string
                        format: uuid
                        pattern: >-
                          [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                        example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                      subject:
                        type: string
                        maxLength: 64000
                        title: Certificate Subject
                        description: Certificate subject.
                      issuer:
                        type: string
                        maxLength: 64000
                        title: Certificate Issuer
                        description: Certificate issuer.
                      expiration:
                        type: string
                        maxLength: 64000
                        format: date-time
                        title: Certificate Expiration
                        description: Certificate expiration.
                  keyPath:
                    type: string
                    maxLength: 64000
                    format: uri
                    title: Key Path
                    description: Key path.
                  certificatePath:
                    type: string
                    maxLength: 64000
                    format: uri
                    title: Certificate Path
                    description: Certificate path.
              keyCertificateContent:
                title: Key Certificate Content
                description: Key certificate content.
                oneOf:
                  - $ref: '#/components/schemas/KeyCertificatePEMContents'
                  - $ref: '#/components/schemas/KeyCertificateFileReferences'
            additionalProperties: false
        tlsVersions:
          title: TLS Version
          description: The client-side TLS version number.
          type: object
          default: {}
          properties:
            id:
              readOnly: true
              title: TLS Version ID
              description: TLS version ID.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            enableTLS1.3:
              type: boolean
              default: true
              title: Enable TLS 1.3
              description: Specifies whether TLS 1.3 is enabled. The default is true.
            enableTLS1.2:
              type: boolean
              default: true
              title: Enable TLS 1.2
              description: Specifies whether TLS 1.2 is enabled. The default is true.
            enableTLS1.1:
              type: boolean
              default: false
              title: Enable TLS 1.1
              description: Specifies whether TLS 1.1 is enabled. The default is false.
          additionalProperties: false
        serverNames:
          type: array
          title: Server List
          description: >-
            List of host names, or an entire domain for SNI matching to select
            this client side TLS settings.
          items:
            type: string
            minLength: 1
            maxLength: 253
            pattern: '[a-zA-Z_]+([a-zA-Z0-9\-\._]*)'
            description: Domain name
            title: Domain Name
      additionalProperties: false
    Cluster:
      type: object
      title: Cluster
      description: Cluster properties.
      required:
        - nodes
        - controlPlaneVlan
        - dataPlaneVlan
      properties:
        name:
          type: string
          maxLength: 192
          example: Default cluster
          title: Cluster Name
          description: >-
            Specifies a name for the cluster. The maximum length is 192
            characters.
        clusterManagementIP:
          $ref: '#/components/schemas/IpAddress'
          title: Cluster Management IP
          description: >-
            The floating IP address used for communication to the BIG-IP Next HA
            instance. This property is required to create an HA instance.
        virtualRouterId:
          type: integer
          minimum: 1
          maximum: 255
          title: Virtual Router ID
          description: >-
            Arbitrary unique number from 1 to 255 used to differentiate multiple
            instances of vrrpd, the daemon that handles administrative events
            for VRRP routers.
        autoFailback:
          type: boolean
          default: false
          title: Auto Failback
          description: >-
            Automatically restore operations to the first device if it is
            available, or when it becomes available if it is not.
        nodes:
          type: array
          title: Nodes
          description: >-
            List of nodes in this BIG-IP Next HA instance, where the first
            listed is the active node. This property is required to create an HA
            instance.
          maxItems: 2
          items:
            type: object
            title: Cluster Node
            description: Cluster node properties.
            required:
              - name
              - managementAddress
              - controlPlaneAddress
              - dataPlanePrimaryAddress
            properties:
              systemId:
                readOnly: true
                title: System ID
                description: System ID.
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              name:
                type: string
                maxLength: 192
                title: Name
                description: >-
                  The name of the instance. The maximum length is 192
                  characters.
              managementAddress:
                $ref: '#/components/schemas/IpAddress'
                title: Management IP
                description: The IP address of the node on management network.
              controlPlaneAddress:
                $ref: '#/components/schemas/IpPrefix'
                title: HA Network Node IP
                description: >-
                  The IP address and netmask of the node on control plane HA
                  network.
              username:
                type: string
                maxLength: 64000
                example: admin
                title: Username
                description: >-
                  The username that is allowed API access. This property is
                  required together with the password to create an HA instance
                  unless a token is provided.
              password:
                type: string
                maxLength: 64000
                format: password
                example: p12345678
                title: Password
                description: >-
                  The password associated with the username that is allowed API
                  access. This property is required together with the username
                  to create an HA instance unless a token is provided.
                  **Important**: Do not use the provided example password in
                  production environments.
                minLength: 8
              token:
                type: string
                maxLength: 64000
                title: Token
                description: >-
                  The access token string of this node as issued by the API
                  engine. This property is required to create an HA instance
                  unless a username and password is provided.
              dataPlanePrimaryAddress:
                $ref: '#/components/schemas/IpPrefix'
                title: Primary Mirror IP
                description: >-
                  Specifies the IP address and network mask used for state
                  mirroring.
                example: 10.1.2.3/24
              dataPlaneSecondaryAddress:
                $ref: '#/components/schemas/IpPrefix'
                title: Secondary Mirror IP
                description: >-
                  Specifies the secondary IP address used for state mirroring as
                  well as the network mask.
                example: 10.1.2.3/24
            additionalProperties: false
        dataPlaneVlan:
          type: string
          maxLength: 64000
          title: HA Data Plane VLAN
          description: The VLAN used for data plane high availablity traffic.
        controlPlaneVlan:
          type: string
          maxLength: 64000
          title: HA Control Plane VLAN
          description: The VLAN used for control plane high availablity traffic.
      additionalProperties: false
    ClusterNode:
      type: object
      title: Cluster Node
      description: Cluster node properties.
      required:
        - name
        - managementAddress
        - controlPlaneAddress
        - dataPlanePrimaryAddress
      properties:
        systemId:
          readOnly: true
          title: System ID
          description: System ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          maxLength: 192
          title: Name
          description: The name of the instance. The maximum length is 192 characters.
        managementAddress:
          $ref: '#/components/schemas/IpAddress'
          title: Management IP
          description: The IP address of the node on management network.
        controlPlaneAddress:
          $ref: '#/components/schemas/IpPrefix'
          title: HA Network Node IP
          description: The IP address and netmask of the node on control plane HA network.
        username:
          type: string
          maxLength: 64000
          example: admin
          title: Username
          description: >-
            The username that is allowed API access. This property is required
            together with the password to create an HA instance unless a token
            is provided.
        password:
          type: string
          maxLength: 64000
          format: password
          example: p12345678
          title: Password
          description: >-
            The password associated with the username that is allowed API
            access. This property is required together with the username to
            create an HA instance unless a token is provided. **Important**: Do
            not use the provided example password in production environments.
          minLength: 8
        token:
          type: string
          maxLength: 64000
          title: Token
          description: >-
            The access token string of this node as issued by the API engine.
            This property is required to create an HA instance unless a username
            and password is provided.
        dataPlanePrimaryAddress:
          $ref: '#/components/schemas/IpPrefix'
          title: Primary Mirror IP
          description: Specifies the IP address and network mask used for state mirroring.
          example: 10.1.2.3/24
        dataPlaneSecondaryAddress:
          $ref: '#/components/schemas/IpPrefix'
          title: Secondary Mirror IP
          description: >-
            Specifies the secondary IP address used for state mirroring as well
            as the network mask.
          example: 10.1.2.3/24
      additionalProperties: false
    ClusterNodeHealth:
      type: object
      title: Cluster Node Health
      description: Cluster node health.
      required:
        - systemId
      properties:
        id:
          readOnly: true
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Node Health ID
          description: Cluster node health ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        systemId:
          readOnly: true
          title: System ID
          description: System ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        address:
          $ref: '#/components/schemas/IpAddress'
          readOnly: true
          title: IP Address
          description: The IP address of the node.
        state:
          type: string
          maxLength: 64000
          enum:
            - ACTIVE
            - STANDBY
            - STANDALONE
            - UNREACHABLE
          readOnly: true
          example: ACTIVE
          title: State
          description: >-
            The HA state of the node: ACTIVE, STANDBY, STANDALONE, or
            UNREACHABLE.
        subsystemsClusterStates:
          title: Subystems cluster state
          description: The cluster state of the subsystems.
          readOnly: true
          type: object
          properties:
            f5FcdnSync:
              title: F5-fcdn-sync subsystem state
              description: F5-fcdn-sync subsystem state
              readOnly: true
              type: string
              maxLength: 64000
              enum:
                - ACTIVE
                - STANDBY
                - STANDALONE
                - UNKNOWN
                - NOT_READY
            f5EesvVault:
              title: F5-eesv-vault subsystem state
              description: F5-eesv-vault subsystem state
              readOnly: true
              type: string
              maxLength: 64000
              enum:
                - ACTIVE
                - STANDBY
                - STANDALONE
                - UNKNOWN
                - NOT_READY
            f5AvclKeepalive:
              title: F5-avcl-keepalive subsystem state
              description: F5-avcl-keepalive subsystem state
              readOnly: true
              type: string
              maxLength: 64000
              enum:
                - ACTIVE
                - STANDBY
                - STANDALONE
                - UNKNOWN
                - NOT_READY
            f5DataStore:
              title: F5-data-store subsystem state
              description: F5-data-store subsystem state
              readOnly: true
              type: string
              maxLength: 64000
              enum:
                - ACTIVE
                - STANDBY
                - STANDALONE
                - UNKNOWN
                - NOT_READY
        isHealthy:
          type: boolean
          readOnly: true
          title: Is Healthy
          description: Node health status.
        message:
          type: object
          readOnly: true
          title: Message
          description: Most recent message from cluster node.
          properties:
            code:
              type: string
              maxLength: 64000
              title: Error Code
              description: An application-specific error code.
              example: abc123
            title:
              type: string
              maxLength: 64000
              title: Title
              description: A summary of the problem associated with the error code.
            detail:
              type: string
              maxLength: 64000
              title: Detail
              description: >-
                A detailed explanation specific to this occurrence of the
                problem.
      additionalProperties: false
    Color:
      type: string
      description: type=color
      maxLength: 256
    ContentType:
      type: string
      maxLength: 256
      format: contentType
      pattern: "(application|audio|font|example|image|message|model|multipart|text|video|x-(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+))/([0-9A-Za-z!#$%&'*+.^_`|~-]+)((?:[ \t]*;[ \t]*[0-9A-Za-z!#$%&'*+.^_`|~-]+=(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+|\"(?:[^\"\\\\]|\\.)*\"))*)"
      description: Content type as described in RFC 2045 section-5.1
      title: Content Type
    CookieEncryption:
      type: string
      maxLength: 64
      enum:
        - encryption-preferred
        - encryption-required
        - encryption-off
      default: encryption-off
      example: encryption-off
      description: >
        'Specifies the way in which cookie format will be used:
        \"encryption-off\": generate old format,unencrypted;
        \"encryption-preferred\": generate encrypted cookie but accept both
        encrypted and old format, and \"encryption-required\": cookie format
        must be encrypted.'
         * `encryption-preferred` - Generate an encrypted cookie, but accepts both encrypted and unencrypted formats.
         * `encryption-required` - Cookie format must be encrypted.
         * `encryption-off` - Generates the cookie format unencrypted.
    CookieEntries:
      description: 'Cookie operations: modify existing cookies.'
      type: array
      items:
        type: object
        properties:
          cookieName:
            description: The name of the cookie to update or delete.
            type: string
          cookieValue:
            description: >-
              The value to match when deleting a cookie, or the new value to set
              when updating a cookie. Any per-flow or session variable can be
              used as a cookie value.
            type: string
          cookieOperation:
            description: >-
              The operation to perform on the cookie. If you select update, and
              no cookie matches the name and value, HTTP Header adds the
              specified cookie.
            type: string
            enum:
              - update
              - delete
        required:
          - cookieName
          - cookieOperation
        example:
          cookieOperation: update
          cookieName: SomeCookie
          cookieValue: Some value
    CreateFilesMetadata:
      title: Create Files Metadata
      description: >-
        Specifies properties needed to create file metadata in a POST operation.
        Name (maximum length, 192 characters) and Filename (maximum length,
        64,000 characters) are required; Description (maximum length, 256
        characters) is optional.
      type: object
      required:
        - fileName
        - name
      properties:
        description:
          type: string
          maxLength: 256
          title: Description
        name:
          type: string
          maxLength: 192
          title: Name
        fileName:
          type: string
          maxLength: 64000
          format: binary
          title: File Name
        passphrase:
          type: string
          maxLength: 1000
          title: Passphrase
          description: >-
            Specifies the password or phrase that secures the associated file.
            The maximum length is 1000 characters.
      additionalProperties: false
    CreateUser:
      title: Create User
      description: >-
        The properties to specify when creating a user account by a PUT
        operation.
      type: object
      properties:
        username:
          title: User Name
          description: >-
            The name of the user associated with the account. The maximum length
            is 64,000 characters.
          type: string
          maxLength: 64000
          example: examplename
        password:
          title: Password
          description: >-
            The password for the associated username. Important: Do not use the
            example provided as the password in production environments.
          writeOnly: true
          type: string
          maxLength: 64000
          format: password
          example: p12345678
          minLength: 8
        role:
          title: Role
          description: Role for the user account that uses RBAC-based authorization.
          type: string
          enum:
            - administrator
            - resource-administrator
            - as3-user
            - user-manager
            - manager
            - certificate-manager
            - application-owner
            - network-operator
            - application-editor
            - no-access
          example: no-access
        status:
          title: Status
          description: >-
            Specifies whether this user is allowed access. Options are enabled
            (indicating that access is allowed) and disabled (indicating that it
            is not). The default value is enabled.
          type: string
          maxLength: 8
          enum:
            - enabled
            - disabled
          default: enabled
      required:
        - username
        - password
        - role
      additionalProperties: false
    Curve:
      type: object
      title: Key Certificate Curve
      description: >-
        Specifies the key certificate curve of the encryption associated with
        the certificate.
      properties:
        id:
          readOnly: true
          title: Curve ID
          description: >-
            Specifies the curve ID of the encryption associated with the
            certificate.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        type:
          title: Key Strength Type
          description: Specifies the type of key strength. The default value is curve.
          type: string
          maxLength: 64000
          enum:
            - key-size
            - curve
        curveName:
          title: Curve Name
          description: >-
            Specifies the curve name representing the encryption associated with
            the certificate.
          type: string
          maxLength: 64000
          enum:
            - prime256v1
            - secp384r1
      additionalProperties: false
    CurveName:
      type: string
      maxLength: 64000
      enum:
        - prime256v1
        - secp384r1
    CustomizationDecisionBox:
      title: Decision Box Customization group
      description: >-
        Definitions for customization strings for Decision Box customization
        group in all supported languages.
      type: array
      items:
        description: Customized strings for each language.
        type: object
        required:
          - language
          - strings
        properties:
          language:
            description: >-
              Language of customized strings. ISO 639-1 language codes should be
              used.
            type: string
            enum:
              - en
              - de
              - es
              - it
              - fr
              - ko
              - ja
              - zh-cn
              - zh-tw
          strings:
            type: object
            description: >-
              Definitions for customization strings for Decision Box
              customization group.
            properties:
              decisionTitle:
                description: Decision Box Title.
                type: string
                maxLength: 1024
              confirmTitle:
                description: Confirm/Continue Title.
                type: string
                maxLength: 1024
              option1Image:
                description: Field 1 image.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              decision1Message:
                description: Option 1.
                type: string
                maxLength: 1024
              continueMessage:
                description: Continue.
                type: string
                maxLength: 1024
              option2Image:
                description: Field 2 image.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              decision2Message:
                description: Option 2.
                type: string
                maxLength: 1024
              cancelMessage:
                description: Cancel.
                type: string
                maxLength: 1024
              image00:
                description: image00.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image01:
                description: image01.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image02:
                description: image02.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image03:
                description: image03.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image04:
                description: image04.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image05:
                description: image05.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image06:
                description: image06.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image07:
                description: image07.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image08:
                description: image08.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image09:
                description: image09.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
    CustomizationGeneralUi:
      title: General UI Customization group
      description: >-
        General customizable strings and settings in Access user interface in
        all supported languages
      type: array
      items:
        description: Customized strings for each language.
        type: object
        required:
          - language
          - strings
        properties:
          language:
            description: >-
              Language of customized strings. ISO 639-1 language codes should be
              used.
            type: string
            enum:
              - en
              - de
              - es
              - it
              - fr
              - ko
              - ja
              - zh-cn
              - zh-tw
          strings:
            type: object
            description: General customizable strings and settings in Access user interface
            properties:
              pageTitle:
                description: Default page title.
                type: string
                maxLength: 1024
              logoImage:
                description: 'Header Image for Desktop (Max height: 60px).'
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              logoSmallImage:
                description: 'Header Image for Mobile (Max height: 30px).'
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              headerMottoMessage:
                description: Header text.
                type: string
                maxLength: 1024
              headerDisconnectCaption:
                description: Disconnect Caption.
                type: string
                maxLength: 1024
              footerMessage:
                description: Footer message.
                type: string
                maxLength: 1024
              layoutBreakpointSmall:
                description: >-
                  Maximum viewport width for applying small (mobile) screen
                  styles (px / % / auto).
                oneOf:
                  - $ref: '#/components/schemas/SizePixel'
                  - $ref: '#/components/schemas/SizePercent'
                  - $ref: '#/components/schemas/SizeAuto'
              layoutBreakpointLarge:
                description: >-
                  Maximum viewport width for applying large (desktop) screen
                  styles (px / % / auto).
                oneOf:
                  - $ref: '#/components/schemas/SizePixel'
                  - $ref: '#/components/schemas/SizePercent'
                  - $ref: '#/components/schemas/SizeAuto'
              logonSequenceTimeoutMessage:
                description: Session timeout message.
                type: string
                maxLength: 1024
              newSessionMessage:
                description: New session message.
                type: string
                maxLength: 1024
              stripeColor:
                description: Top Stripe Color.
                type: string
                maxLength: 256
              headerBackgroundColor:
                description: Header Color.
                type: string
                maxLength: 256
              pageBackgroundColor:
                description: Page Background Color.
                type: string
                maxLength: 256
              formBackgroundColor:
                description: Form Background Color.
                type: string
                maxLength: 256
              footerBackgroundColor:
                description: Footer Background Color.
                type: string
                maxLength: 256
              textColor:
                description: HTML Color for Text.
                type: string
                maxLength: 256
              activeColor:
                description: HTML Color for Active Links and Buttons.
                type: string
                maxLength: 256
              solidButtonTextColor:
                description: HTML Color for Solid Button Text.
                type: string
                maxLength: 256
              disableExternalData:
                description: Disable all external scripts and styles (on/off).
                type: string
                enum:
                  - true
                  - false
              externalJs00Url:
                description: External Javascript 1 Address.
                type: string
                maxLength: 1024
              externalJs00Integrity:
                description: External Javascript 1 Subresource Integrity.
                type: string
                maxLength: 1024
              externalJs01Url:
                description: External Javascript 2 Address.
                type: string
                maxLength: 1024
              externalJs01Integrity:
                description: External Javascript 2 Subresource Integrity.
                type: string
                maxLength: 1024
              externalJs02Url:
                description: External Javascript 3 Address.
                type: string
                maxLength: 1024
              externalJs02Integrity:
                description: External Javascript 3 Subresource Integrity.
                type: string
                maxLength: 1024
              externalJs03Url:
                description: External Javascript 4 Address.
                type: string
                maxLength: 1024
              externalJs03Integrity:
                description: External Javascript 4 Subresource Integrity.
                type: string
                maxLength: 1024
              externalCss00Url:
                description: External Stylesheet 1 Address.
                type: string
                maxLength: 1024
              externalCss00Integrity:
                description: External Stylesheet 1 Subresource Integrity.
                type: string
                maxLength: 1024
              externalCss01Url:
                description: External Stylesheet 2 Address.
                type: string
                maxLength: 1024
              externalCss01Integrity:
                description: External Stylesheet 2 Subresource Integrity.
                type: string
                maxLength: 1024
              image00:
                description: image00.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image01:
                description: image01.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image02:
                description: image02.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image03:
                description: image03.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image04:
                description: image04.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image05:
                description: image05.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image06:
                description: image06.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image07:
                description: image07.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image08:
                description: image08.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image09:
                description: image09.
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
    CustomizationLogon:
      title: Logon Customization group
      description: >-
        Customizable strings and settings for Logon page in Access user
        interface in all supported languages.
      type: array
      items:
        description: Customized strings for each language.
        type: object
        required:
          - language
          - strings
        properties:
          language:
            description: >-
              Language of customized strings. ISO 639-1 language codes should be
              used.
            type: string
            enum:
              - en
              - de
              - es
              - it
              - fr
              - ko
              - ja
              - zh-cn
              - zh-tw
          strings:
            type: object
            description: >-
              Customizable strings and settings for Logon page in Access user
              interface.
            properties:
              formHeader:
                description: Form Header Text.
                type: string
                maxLength: 1024
              logonField_1:
                description: 'Logon Page Input Field #1.'
                type: string
                maxLength: 1024
              selectvalues_1:
                description: 'Input Field #1 Values.'
                type: string
                maxLength: 1024
              logonField_2:
                description: 'Logon Page Input Field #2.'
                type: string
                maxLength: 1024
              selectvalues_2:
                description: 'Input Field #2 Values.'
                type: string
                maxLength: 1024
              logonField_3:
                description: 'Logon Page Input Field #3.'
                type: string
                maxLength: 1024
              selectvalues_3:
                description: 'Input Field #3 Values.'
                type: string
                maxLength: 1024
              logonField_4:
                description: 'Logon Page Input Field #4.'
                type: string
                maxLength: 1024
              selectvalues_4:
                description: 'Input Field #4 Values.'
                type: string
                maxLength: 1024
              logonField_5:
                description: 'Logon Page Input Field #5.'
                type: string
                maxLength: 1024
              selectvalues_5:
                description: 'Input Field #5 Values.'
                type: string
                maxLength: 1024
              logon:
                description: Logon Button.
                type: string
                maxLength: 1024
              pageTitle:
                description: Custom Page Title.
                type: string
                maxLength: 1024
              savePassword:
                description: Save Password Checkbox.
                type: string
                maxLength: 1024
              newPassword:
                description: New Password Prompt.
                type: string
                maxLength: 1024
              verifyPassword:
                description: Confirm Password Prompt.
                type: string
                maxLength: 1024
              passwordVerifyDontMatch:
                description: Password and Confirmation do not Match.
                type: string
                maxLength: 1024
              changePassword:
                description: Change password.
                type: string
                maxLength: 1024
              dontChangePassword:
                description: Don't change password.
                type: string
                maxLength: 1024
              http_401Response:
                description: HTTP response message.
                type: string
                maxLength: 1024
              logonOriginalUrl:
                description: Logon Page Original URL.
                type: string
                maxLength: 1024
              vmwareViewMessage:
                description: VMWare Disclaimer message.
                type: string
                maxLength: 1024
              'yes':
                description: Yes string.
                type: string
                maxLength: 1024
              'no':
                description: No string.
                type: string
                maxLength: 1024
              image00:
                description: image00
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image01:
                description: image01
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image02:
                description: image02
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image03:
                description: image03
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image04:
                description: image04
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image05:
                description: image05
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image06:
                description: image06
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image07:
                description: image07
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image08:
                description: image08
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image09:
                description: image09
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
    CustomizationLogout:
      title: Logout Customization group
      description: >-
        Customizable strings and settings for Logout page in Access user
        interface in all supported languages.
      type: array
      items:
        description: Customized strings for each language.
        type: object
        required:
          - language
          - strings
        properties:
          language:
            description: >-
              Language of customized strings. ISO 639-1 language codes should be
              used.
            type: string
            enum:
              - en
              - de
              - es
              - it
              - fr
              - ko
              - ja
              - zh-cn
              - zh-tw
          strings:
            type: object
            description: >-
              Customizable strings and settings for Logout page in Access user
              interface.
            properties:
              successTitle:
                description: Success title.
                type: string
                maxLength: 1024
              successMessage:
                description: Success message.
                type: string
                maxLength: 1024
              thankMessage:
                description: Thank you message.
                type: string
                maxLength: 1024
              errorTitle:
                description: Error title.
                type: string
                maxLength: 1024
              accessDeniedRequirementsNotMetMessage:
                description: Access denied message.
                type: string
                maxLength: 1024
              adminSessionsMessage:
                description: All sessions navigation.
                type: string
                maxLength: 1024
              sessionIdMessage:
                description: Session ID.
                type: string
                maxLength: 1024
              promptSessionLogoutMessage:
                description: Logout link message.
                type: string
                maxLength: 1024
              accessNotFoundPageTitle:
                description: Access not found page title.
                type: string
                maxLength: 1024
              accessNotFoundRejectMessage:
                description: >-
                  Access not found page reject message. May include basic
                  formatting HTML tags.
                type: string
                maxLength: 1024
              sessionExpiredMessage:
                description: Session expired message.
                type: string
                maxLength: 1024
              acldeniedPageTitle:
                description: ACL denied page title.
                type: string
                maxLength: 1024
              acldeniedRejectMessage:
                description: ACL denied page reject message.
                type: string
                maxLength: 1024
              acldeniedGoBackMessage:
                description: ACL denied page return link message.
                type: string
                maxLength: 1024
              acldeniedRetryMessage:
                description: ACL denied page retry link message.
                type: string
                maxLength: 1024
              image00:
                description: image00
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image01:
                description: image01
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image02:
                description: image02
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image03:
                description: image03
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image04:
                description: image04
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image05:
                description: image05
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image06:
                description: image06
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image07:
                description: image07
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image08:
                description: image08
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image09:
                description: image09
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
    CustomizationMessageBox:
      title: Message Box Customization group
      description: >-
        Definitions for customization strings for Message Box customization
        group in all supported languages.
      type: array
      items:
        description: Customized strings for each language.
        type: object
        required:
          - language
          - strings
        properties:
          language:
            description: >-
              Language of customized strings. ISO 639-1 language codes should be
              used.
            type: string
            enum:
              - en
              - de
              - es
              - it
              - fr
              - ko
              - ja
              - zh-cn
              - zh-tw
          strings:
            type: object
            description: >-
              Definitions for customization strings for Message Box
              customization group.
            properties:
              title:
                description: Title.
                type: string
                maxLength: 1024
              message:
                description: Description (optional).
                type: string
                maxLength: 1024
              proceedMessage:
                description: Button caption.
                type: string
                maxLength: 1024
              image00:
                description: image00
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image01:
                description: image01
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image02:
                description: image02
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image03:
                description: image03
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image04:
                description: image04
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image05:
                description: image05
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image06:
                description: image06
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image07:
                description: image07
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image08:
                description: image08
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
              image09:
                description: image09
                type: string
                maxLength: 4096
                format: uri
                pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                title: Uniform Resource Identifier
    DeclarationDefinition:
      type: object
      title: Declaration Definition
      description: >-
        See additional documentation for information on the AS3 service
        definition.
    DeclarationOperationDefinition:
      type: object
      title: Declaration Operation Definition
      description: Declaration operation definition.
      properties:
        results:
          type: array
          title: Results
          description: The results of the operation(s)
          items:
            type: object
            title: Result Definition
            description: Result definition.
            properties:
              code:
                title: Code
                description: Result Code
                type: integer
                minimum: 100
                maximum: 600
              message:
                type: string
                title: Message
                description: Message.
                maxLength: 64000
              host:
                type: string
                title: Host
                description: Host.
                maxLength: 64000
              tenant:
                type: string
                title: Tenant
                description: Tenant.
                maxLength: 64000
              runTime:
                type: integer
                title: Runtime
                description: Runtime.
                minimum: 10
                maximum: 300000
            additionalProperties: false
        declaration:
          type: object
          title: Declaration Definition
          description: >-
            See additional documentation for information on the AS3 service
            definition.
      additionalProperties: false
    Declare:
      type: object
      title: Onboard
      description: Onboard.
      properties:
        token:
          type: string
          maxLength: 64000
          title: Access Token
          description: Maximum length for the access token string is 64,000 characters.
        deviceCertificate:
          type: object
          title: Device Certificate and Key
          description: The certificate and key for the device.
          properties:
            key:
              type: object
              title: Device Key
              description: >-
                System device key. Maximum length for the device key is 192
                characters.
              properties:
                name:
                  type: string
                  maxLength: 192
                  title: Key Name
                  description: >-
                    Key name associated with the certificate. Maximum length for
                    the device key name is 192 characters.
                fileName:
                  type: string
                  maxLength: 64000
                  title: File Name
                  description: >-
                    File name for the key associated with the certificate.
                    Maximum length for the device key file name is 64,000
                    characters.
                fileType:
                  type: string
                  maxLength: 64000
                  title: Key Type
                  description: Type of key associated with the certificate.
                  enum:
                    - application/pkcs8
                    - application/x-pem-file
                fileContent:
                  type: string
                  maxLength: 64000
                  title: Key Content
                  description: >-
                    Content of the key associated with the certificate. Maximum
                    content length is 64,000 characters.
                  format: binary
                filePath:
                  type: string
                  maxLength: 64000
                  title: File Path
                  description: Path to the key file the device is using.
                  readOnly: true
              required:
                - name
                - fileName
                - fileType
                - fileContent
            certificate:
              type: object
              title: Device Certificate
              description: Certificate the device is using.
              properties:
                name:
                  type: string
                  maxLength: 192
                  title: Certificate Name
                  description: Name of the certificate the device is using.
                fileName:
                  type: string
                  maxLength: 64000
                  title: File Name
                  description: File name representing the certificate the device is using.
                fileType:
                  type: string
                  maxLength: 64000
                  title: Certificate Type
                  description: >-
                    Type of certificate the device is using (e.g.,
                    application/x-x509-ca-cert).
                  enum:
                    - application/x-x509-ca-cert
                    - application/x-pem-file
                fileContent:
                  type: string
                  maxLength: 64000
                  title: Certificate Content
                  description: >-
                    Content of the certificate this device is using. Maximum
                    content length is 64,000 characters.
                  format: binary
                filePath:
                  type: string
                  maxLength: 64000
                  title: File Path
                  description: Path to the certificate the device is using.
                  readOnly: true
              required:
                - name
                - fileName
                - fileType
                - fileContent
        users:
          type: array
          items:
            type: object
            title: User
            description: Example user1.
            properties:
              username:
                title: Username
                description: >-
                  Username (e.g., admin). Note: You might want a username other
                  than admin in a production environment.
                type: string
                maxLength: 64000
                example: admin
              password:
                title: User Password
                description: >-
                  User password (e.g., PassWord123!). Important: Do not use this
                  example password in a production environment.
                type: string
                maxLength: 64000
                format: password
                example: PassWord123!
                minLength: 8
              role:
                description: User role for RBAC-based authorization.
                type: string
                enum:
                  - administrator
                  - resource-administrator
                  - as3-user
                  - user-manager
                  - manager
                  - certificate-manager
                  - application-owner
                  - network-operator
                  - application-editor
                  - no-access
                example: no-access
          title: Users
          description: >-
            Creates new user accounts. Important: Do not use these example names
            and passwords in your production environment.
          example:
            users:
              - username: exampleuser
                password: Password@example
                role: administrator
              - username: applicationuser
                password: Password@example
                role: application-owner
        platform:
          title: Platform
          description: Platform related properties.
          oneOf:
            - $ref: '#/components/schemas/DeclareVe'
            - $ref: '#/components/schemas/DeclareVelos'
          discriminator:
            propertyName: platformType
      required:
        - token
      additionalProperties: false
    DeclareVe:
      type: object
      title: Onboard
      description: Onboard.
      properties:
        platformType:
          type: string
          maxLength: 16
          title: Platform Type
          description: Current platform type.
          enum:
            - ve
          default: ve
        defaultGateway:
          $ref: '#/components/schemas/IpAddress'
          example: 2001:db8:245:245::1
          title: Default Gateway
          description: Default gateway.
        dnsServers:
          type: array
          default: []
          title: DNS Servers
          description: An array of DNS servers.
          items:
            $ref: '#/components/schemas/IpAddress'
          example: '[2001:db8:245:245::53, 192.0.2.53]'
        hostname:
          type: string
          maxLength: 64000
          example: example.example.com
          title: Hostname
          description: Hostname for the DNS server (e.g., example.example.com).
        managementIps:
          type: array
          title: Management IP Addresses
          description: >-
            System host management IP addresses in IPv4 and/or IPv6 format
            (e.g., [2001:db8:245:245::53/76, 192.168.2.53/24]).
          maxItems: 2
          uniqueItems: true
          items:
            $ref: '#/components/schemas/IpPrefix'
          example: '[2001:db8:245:245::53/76, 192.168.2.53/24]'
        ntpServers:
          type: array
          default: []
          title: NTP Servers
          description: Array of NTP servers (e.g., [0.ro.pool.ntp.org, 1.ro.pool.ntp.org]).
          items:
            $ref: '#/components/schemas/Host'
          example:
            - 0.ro.pool.ntp.org
            - 1.ro.pool.ntp.org
        vlans:
          type: array
          items:
            type: object
            title: L1 VLAN
            description: L1 VLAN.
            required:
              - name
            properties:
              id:
                title: ID
                description: ID for VLAN.
                readOnly: true
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              name:
                type: string
                minLength: 1
                maxLength: 192
                title: Name
                description: Unique VLAN name.
                example: vlan100
              tag:
                title: Tag
                description: VLAN tag to be applied to tagged interfaces.
                example: 1
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              taggedInterfaces:
                type: array
                title: Tagged Interface List
                description: Tagged interfaces for VLAN.
                items:
                  type: string
                  title: Tagged Interface
                  maxLength: 64
                example:
                  - '1.2'
              untaggedInterfaces:
                type: array
                title: Untagged Interface List
                description: Untagged interfaces for VLAN.
                items:
                  type: string
                  title: Untagged Interface
                  maxLength: 64
                example:
                  - '1.1'
              mtu:
                type: integer
                format: uint16
                default: 1500
                minimum: 576
                maximum: 9198
                title: MTU
                description: Maximum transmission unit.
                example: 1500
              selfIps:
                type: array
                title: Self IP List
                description: Self IPs for the L1 VLAN.
                items:
                  title: Self IP
                  type: object
                  description: L1 Self-IP.
                  required:
                    - address
                  properties:
                    address:
                      $ref: '#/components/schemas/IpPrefix'
                      title: Address
                      description: >-
                        The IPv4 or IPv6 address used to send and receive
                        traffic as well as the network mask.
                      example: 10.1.2.3/24
                    deviceName:
                      type: string
                      maxLength: 64000
                      title: Device Name
                      description: >-
                        Specifies a device via device-name this non-floating
                        self-ip belongs to.
                      example: defaultDevice
                  additionalProperties: false
            additionalProperties: false
          title: VLANs
          description: Array of VLANs.
        remoteSyslogServers:
          type: array
          title: Remote Syslog Servers
          description: Remote syslog servers.
          default: []
          items:
            type: object
            title: Remote Syslog Server
            description: Remote syslog server. Maximum server name is 192 characters.
            properties:
              name:
                type: string
                maxLength: 192
              host:
                $ref: '#/components/schemas/Host'
              remotePort:
                description: >
                  A 16-bit port number used by a transport protocol such as TCP
                  or UDP.
                title: Port
                type: integer
                format: uint16
                minimum: 0
                maximum: 65535
          example:
            - name: syslogServer1
              host: 172.28.31.40
              remotePort: 514
            - name: syslogServer2
              host: 172.28.31.37
              remotePort: 51400
      additionalProperties: false
    DeclareVelos:
      type: object
      title: Onboard
      description: Onboard.
      properties:
        platformType:
          type: string
          maxLength: 16
          title: Platform Type
          description: Current platform type.
          enum:
            - velos
          default: velos
      additionalProperties: false
    Disassemble:
      type: object
      title: Disassemble
      description: Disassemble the cluster.
      required:
        - verify
      properties:
        verify:
          type: boolean
          default: false
          title: Trigger
          description: >-
            Trigger the cluster disassemble by setting this property to true.
            The default is false.
          enum:
            - true
      additionalProperties: false
    DomainName:
      type: string
      minLength: 1
      maxLength: 253
      pattern: '[a-zA-Z_]+([a-zA-Z0-9\-\._]*)'
      description: Domain name
      title: Domain Name
    DomainNameRfc1034:
      type: string
      minLength: 1
      maxLength: 253
      pattern: >-
        ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
      description: >
        The domain-name type represents a DNS domain name. Fully quallified left
        to the models which utilize this type.

        Internet domain names are only loosely specified.  Section 3.5 of RFC
        1034 recommends a syntax (modified in Section 2.1 of RFC 1123).  The
        pattern above is intended to allow for current practice in domain name
        use, and some possible future expansion.  It is designed to hold various
        types of domain names, including names used for A or AAAA records (host
        names) and other records, such as SRV records.  Note that Internet host
        names have a stricter syntax (described in RFC 952) than the DNS
        recommendations in RFCs 1034 and 1123, and that systems that want to
        store host names in schema nodes using the domain-name type are
        recommended to adhere to this stricter standard to ensure
        interoperability.

        The encoding of DNS names in the DNS protocol is limited to 255
        characters.  Since the encoding consists of labels prefixed by a length
        bytes and there is a trailing NULL byte, only 253 characters can appear
        in the textual dotted notation.

        Domain-name values use the US-ASCII encoding.  Their canonical format
        uses lowercase US-ASCII characters.  Internationalized domain names MUST
        be encoded in punycode as described in RFC 3492
      title: Domain Name
    ErrorResponseDefinition:
      type: object
      title: Error Response Definition
      description: Error response definition.
      properties:
        code:
          type: integer
          title: Error Code
          description: Numerical code representing the error.
          minimum: 100
          maximum: 600
        message:
          type: string
          maxLength: 64000
          title: Error Message
          description: Additional information about the error.
        errors:
          type: array
          title: Error List
          description: >-
            Details about individual failures (there may be multiple errors that
            are presented).
          items:
            type: string
            title: Error
            maxLength: 64000
      additionalProperties: false
    FactoryReset:
      type: object
      title: Factory Reset
      description: Resets all values to their original settings.
      required:
        - verify
      properties:
        verify:
          type: boolean
          default: false
          title: Trigger
          description: >-
            Trigger the factory reset by setting this property to true. The
            default is false.
          enum:
            - true
      additionalProperties: false
    FastApplication:
      title: FAST Application
      type: object
      description: FAST Application.
      required:
        - template
        - tenant
        - name
      properties:
        template:
          type: string
          description: must be valid Template in the system
          example: examples/simple_udp_defaults
          maxLength: 64000
        setHash:
          type: string
          description: the hash of the Template Set used to deploy this Application
          example: b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715
          maxLength: 64000
        view:
          title: FAST Parameters Definition
          type: object
          description: Object must conform to specified template's schema.
          example:
            tenant: foo
            application: bar
            virtualAddress: 192.0.2.11
        lastModified:
          type: string
          description: timestamp of when the Application was last modified
          format: date-time
          maxLength: 64000
        ipamAddrs:
          title: FAST Object Definition
          type: object
          description: A generic definition for an object.
        tenant:
          type: string
          description: the tenant the Application belongs to
          example: tenant
          maxLength: 64000
        name:
          type: string
          description: the name of the Application
          example: app
          maxLength: 192
      additionalProperties: false
    FastApplicationDefinition:
      title: FAST Application Definition
      type: object
      description: Application Definition.
      required:
        - name
        - parameters
      properties:
        name:
          type: string
          description: Must be valid Template in the system.
          example: examples/simple_udp_defaults
          maxLength: 192
        parameters:
          title: FAST Parameters Definition
          type: object
          description: Object must conform to specified template's schema.
          example:
            tenant: foo
            application: bar
            virtualAddress: 192.0.2.11
        allowOverwrite:
          type: boolean
          description: >-
            Do not error if an Application with the same name already exists in
            the tenant.
          default: true
      example:
        name: examples/simple_udp_defaults
        parameters: {}
        allowOverwrite: true
      additionalProperties: false
    FastApplicationDefinitionList:
      title: FAST Application Definition List
      type: array
      description: Application Definition List.
      items:
        title: FAST Application Definition
        type: object
        description: Application Definition.
        required:
          - name
          - parameters
        properties:
          name:
            type: string
            description: Must be valid Template in the system.
            example: examples/simple_udp_defaults
            maxLength: 192
          parameters:
            title: FAST Parameters Definition
            type: object
            description: Object must conform to specified template's schema.
            example:
              tenant: foo
              application: bar
              virtualAddress: 192.0.2.11
          allowOverwrite:
            type: boolean
            description: >-
              Do not error if an Application with the same name already exists
              in the tenant.
            default: true
        example:
          name: examples/simple_udp_defaults
          parameters: {}
          allowOverwrite: true
        additionalProperties: false
      example:
        - name: examples/simple_udp_defaults
          parameters: {}
          allowOverwrite: true
        - name: tenant/app
          parameters: {}
          allowOverwrite: true
    FastApplicationDeleteResponse:
      title: FAST Application Delete Response
      type: object
      description: The response message when deleting Applications.
      required:
        - code
        - message
      properties:
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        code:
          type: integer
          minimum: 202
          maximum: 599
          example: 202
        message:
          minItems: 1
          type: array
          items:
            title: Message
            type: object
            description: Message object containing the results.
            properties:
              id:
                type: string
                maxLength: 64000
                description: The Task ID which can be used to query Task state.
                example: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
      additionalProperties: false
    FastApplicationList:
      title: FAST Application List
      type: array
      description: Application List.
      items:
        title: FAST Application
        type: object
        description: FAST Application.
        required:
          - template
          - tenant
          - name
        properties:
          template:
            type: string
            description: must be valid Template in the system
            example: examples/simple_udp_defaults
            maxLength: 64000
          setHash:
            type: string
            description: the hash of the Template Set used to deploy this Application
            example: b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715
            maxLength: 64000
          view:
            title: FAST Parameters Definition
            type: object
            description: Object must conform to specified template's schema.
            example:
              tenant: foo
              application: bar
              virtualAddress: 192.0.2.11
          lastModified:
            type: string
            description: timestamp of when the Application was last modified
            format: date-time
            maxLength: 64000
          ipamAddrs:
            title: FAST Object Definition
            type: object
            description: A generic definition for an object.
          tenant:
            type: string
            description: the tenant the Application belongs to
            example: tenant
            maxLength: 64000
          name:
            type: string
            description: the name of the Application
            example: app
            maxLength: 192
        additionalProperties: false
    FastApplicationRenderedResponse:
      title: FAST Application Rendered Response
      type: object
      description: Application Rendered Response.
      required:
        - code
        - message
      properties:
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
        code:
          title: Code
          description: Status Code render results.
          type: integer
          format: int32
          minimum: 200
          maximum: 599
          example: 200
        message:
          type: array
          title: Message
          description: Message containing render results.
          items:
            title: FAST Object Definition
            type: object
            description: A generic definition for an object.
          example:
            - appDef:
                class: ADC
                schemaVersion: 3.0.0
                tenant:
                  class: Tenant
                  bar:
                    class: Application
                    template: udp
                    serviceMain:
                      class: Service_UDP
                      virtualAddresses:
                        - 192.0.2.11
                      virtualPort: 5555
                      pool: bar_Pool1
                    bar_Pool1:
                      class: Pool
                      monitors:
                        - icmp
                      members:
                        - serverAddresses:
                            - 192.0.2.22
                          servicePort: 5555
              metaData:
                template: examples/simple_udp_defaults
                setHash: >-
                  b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715
                view:
                  tenant_name: tenant
                  app_name: app
                lastModified: '2022-03-26T23:34:23.873Z'
                ipamAddrs: {}
      additionalProperties: false
    FastApplicationRequest:
      title: FAST Application Request
      type: array
      description: An application request.
      items:
        oneOf:
          - $ref: '#/components/schemas/FastApplicationDefinition'
          - $ref: '#/components/schemas/FastApplicationDefinitionList'
    FastApplicationResponse:
      title: FAST Application Response
      type: object
      description: The response message when performing Application operations.
      required:
        - code
        - message
      properties:
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
        code:
          type: integer
          title: Code
          description: Response code.
          minimum: 202
          maximum: 599
          example: 202
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        message:
          type: array
          items:
            type: object
            title: Message
            description: Response message.
            properties:
              id:
                type: string
                description: The task ID which can be used to query task state.
                maxLength: 64000
                example: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
              name:
                type: string
                description: The name of the Template used.
                maxLength: 192
                example: examples/simple_udp_defaults
              parameters:
                description: The parameters used to create/update the application.
                title: FAST Parameters Definition
                type: object
                example:
                  tenant: foo
                  application: bar
                  virtualAddress: 192.0.2.11
      additionalProperties: false
    FastAs3App:
      title: FAST AS3 Application
      type: object
      description: The resulting AS3 Application.
      properties:
        class:
          type: string
          pattern: .*
          maxLength: 64000
      additionalProperties: false
    FastResponse200:
      title: FAST Response200
      type: object
      description: OK/Success.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 200
          maximum: 200
          example: 200
        message:
          type: string
          example: success
          maxLength: 64000
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
      additionalProperties: false
    FastResponse400:
      title: FAST Response400
      type: object
      description: >-
        AS3 errors (e.g., invalid schema) are forwarded as 400-level errors. See
        AS3 documentation for details.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 400
          maximum: 400
          example: 400
        message:
          type: string
          example: the request was not successful
          maxLength: 64000
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
      additionalProperties: false
    FastResponse404:
      title: FAST Response404
      type: object
      description: Not Found.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 404
          maximum: 404
          example: 404
        message:
          type: string
          example: resource not found
          maxLength: 64000
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
      additionalProperties: false
    FastResponse422:
      title: FAST Response422
      type: object
      description: Supplied configuration was invalid.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 422
          maximum: 422
          example: 422
        message:
          type: string
          example: supplied configuration was invalid
          maxLength: 64000
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
      additionalProperties: false
    FastResponse500:
      title: FAST Response500
      type: object
      description: Internal error. A bug report should be filed.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 500
          maximum: 500
          example: 500
        message:
          type: string
          example: internal server error
          maxLength: 64000
        requestId:
          type: integer
          minimum: 1
          maximum: 4294967295
          example: 3
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
      additionalProperties: false
    Fastl4Default:
      type: object
      title: Fast L4 Default
      description: FastL4 default.
      properties:
        id:
          readOnly: true
          title: FastL4 ID
          description: ID for the FastL4 protocol type.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        idleTimeout:
          title: Idle Timeout
          description: >-
            Number of seconds without traffic before a connection is eligible
            for deletion.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        looseInitiation:
          title: Loose Initiation
          description: >-
            Enable the system to initialize a connection when it receives any
            Transmission Control Protocol (TCP) packet, rather than requiring a
            SYN packet for connection initiation.
          type: boolean
          default: false
        looseClose:
          title: Loose Close
          description: >-
            Enable the system to close a loosely-initiated connection when the
            system receives the first FIN packet from either the client or the
            server.
          type: boolean
          default: false
        resetOnTimeout:
          type: boolean
          title: Reset On Timeout
          description: >-
            Enable the system to reset connections on timeout. If a TCP
            connection exceeds the Idle Timeout, sends a reset in addition to
            deleting the connection.
          default: true
        tcpCloseTimeout:
          title: TCP Close Timeout
          description: >-
            Number of seconds without traffic before a connection in the FIN
            received state is eligible for deletion. TCP Close Timeout should be
            less than Idle Timeout. Only used when Loose Initiation or Loose
            Close is enabled.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        tcpHandshakeTimeout:
          title: TCP Handshake Timeout
          description: >-
            Number of seconds without traffic before a connection in the SYN
            received state is eligible for deletion. This value must be less
            than Idle Timeout. If set to 0, Idle Timeout will be used.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
      additionalProperties: false
    Fastl4RevProxy:
      type: object
      title: FastL4 Reverse Proxy
      description: FastL4 reverse proxy.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - Fastl4RevProxy
          title: Stack Type
          description: Stack type.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: Stack ID
          description: ID for stack.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Stack
          title: Name
          description: Name for the stack. The maximum length is 192 characters.
        description:
          type: string
          maxLength: 256
          default: ''
          example: Netop's FastL4 Reverse Proxy.
          title: Description
          description: Description for stack.
        enabled:
          type: boolean
          default: true
          title: Enabled
          description: >-
            Determines whether the proxy accepts new connections. If set to
            false, the proxy does not accept new connections. The default value
            is true.
        clientSide:
          type: object
          title: Client Side Parameters
          description: Client side parameters.
          properties:
            l4ClientSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4
              description: A soft reference, by name, to an L4 Clientside object.
            fastL4:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/Fastl4Default'
              title: FastL4
              description: FastL4 for client side.
            persistence:
              oneOf:
                - $ref: '#/components/schemas/PersistenceDestAddr'
                - $ref: '#/components/schemas/PersistenceSourceAddr'
                - $ref: '#/components/schemas/PersistenceUniversal'
              title: Persistence
              description: Virtual server persistence configuration.
        serverSide:
          type: object
          title: Server Side Parameters
          description: Server side parameters.
          properties:
            monitors:
              type: object
              nullable: true
              title: Monitors
              description: Monitors.
              properties:
                http:
                  title: HTTP
                  description: HTTP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                icmp:
                  title: ICMP
                  description: ICMP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                inband:
                  title: INBAND
                  description: INBAND monitor.
                  type: object
                  nullable: true
                  properties:
                    failures:
                      title: Failures
                      description: >-
                        The number of failed attempts before marking a pool
                        member down.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    failureInterval:
                      title: Failure Interval
                      description: The interval, in seconds, in which failures are counted.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    responseTime:
                      title: Response Time
                      description: >-
                        The interval, in seconds, in which a pool member must
                        respond with data.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    retryTime:
                      title: Retry Time
                      description: >-
                        The wait time, in seconds, before retrying whether a
                        pool member is up.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                tcp:
                  title: TCP
                  description: TCP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: ''
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                  additionalProperties: false
                https:
                  title: HTTPS
                  description: HTTPS monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                http2:
                  title: HTTP2
                  description: HTTP2 monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
            l4ServerSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Server Side
              description: A soft reference, by name, to an L4 Serverside object.
            loadBalancing:
              example: round-robin
              title: Load Balancing
              description: Load balancing.
              type: string
              maxLength: 64000
              enum:
                - round-robin
                - least-connections
                - predictive
                - weighted-round-robin
                - ratio-least-connections
                - ratio-session
                - fastest
              default: round-robin
            ignorePersistedWeight:
              type: boolean
              default: false
              title: Ignore Persisted Weight
              description: >-
                Do not count the weight of persisted connections on pool members
                when making load balancing decisions.
            fastL4:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/Fastl4Default'
              title: FastL4
              description: FastL4 for server side.
        policies:
          type: array
          default: []
          title: Policies
          description: Associate array of stack policies.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: IRules
          description: IRules.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Connection mirroring
          description: >-
            If set to enabled, connection mirroring will be enabled for this
            proxy. Defaults to disabled.
        mirroringMode:
          example: connection
          title: Mirroring Mode
          description: Connection vs packet mirroring mode.
          type: string
          maxLength: 64000
          enum:
            - connection
            - packet
          default: connection
      required:
        - name
        - stackType
      additionalProperties: false
    FileReference:
      description: A file name as the soft reference.
      type: string
      maxLength: 64000
      example: file:///some_name.key
    FilesMetadata:
      type: object
      title: Files Metadata
      description: The metadata for the files.
      properties:
        id:
          title: File ID
          description: The ID associated with the file.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          maxLength: 192
          title: File Metadata Name
          description: The file metadata name. The maximum length is 192 characters.
        fileName:
          type: string
          maxLength: 64000
          title: Uploaded File Name
          description: The actual uploaded file name.
        description:
          type: string
          maxLength: 256
          default: ''
          title: File Description
          description: The description of the file. The maximum length is 256 characters.
        hash:
          type: string
          maxLength: 64000
          readOnly: true
          title: Hash
          description: File hash.
        size:
          type: integer
          readOnly: true
          title: Size
          description: File size.
          minimum: 0
          maximum: 2147483647
        uri:
          type: string
          maxLength: 64000
          readOnly: true
          title: URI
          description: File URI.
        type:
          readOnly: true
          description: The type of file metadata.
          title: Type
          type: string
          maxLength: 64000
          enum:
            - PRIVATE_KEY
            - CERTIFICATE
            - GENERIC
            - CRL
          example: PRIVATE_KEY
        lastUpdated:
          type: string
          maxLength: 64000
          format: date-time
          readOnly: true
          title: Last Updated
          description: The date and time the file was last updated.
      additionalProperties: false
    FilesMetadataType:
      type: string
      maxLength: 64000
      enum:
        - PRIVATE_KEY
        - CERTIFICATE
        - GENERIC
        - CRL
      example: PRIVATE_KEY
    HeaderEntries:
      description: 'HTTP header operations: modify existing headers and add new headers.'
      type: array
      items:
        type: object
        properties:
          headerName:
            description: Name of an existing or a new header.
            type: string
          headerValue:
            description: >-
              The value on which to operate. Any per-flow or session variable
              can be used as a header value, for example,
              %{session.user.clientip} or %{perflow.session.id}.
            type: string
          headerDelimiter:
            description: The separator to use when appending a header.
            type: string
          headerOperation:
            description: The operation to perform on the HTTP header.
            type: string
            enum:
              - insert
              - append
              - replace
              - remove
        required:
          - headerName
          - headerOperation
        example:
          headerOperation: insert
          headerName: X-Authenticated-User
          headerValue: '%{session.logon.last.username}'
    HealthResponseDefinition:
      type: object
      title: Health Response Definition
      description: Health response definition.
      properties:
        results:
          type: object
          title: Results
          description: Health result definition.
          properties:
            isActivated:
              type: boolean
              default: false
              title: Activated
              description: True when license is activated else False by default.
            isActiveUntil:
              type: string
              maxLength: 64000
              format: date-time
              readOnly: true
              title: Activated Until
              description: Null if unlimited, else UTC data time of when time window ends.
      additionalProperties: false
    Host:
      oneOf:
        - $ref: '#/components/schemas/IpAddress'
        - $ref: '#/components/schemas/DomainName'
      description: >
        The host type represents either an unzoned IP address or a DNS domain
        name.
      title: Host
    Http2Default:
      type: object
      title: HTTP2 Default
      description: HTTP2 default.
      properties:
        id:
          readOnly: true
          title: HTTP2 ID
          description: Id for http2.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    HttpAdvancedProxy:
      type: object
      title: HTTP Advanced Proxy
      description: Specifies settings for HTTP advanced proxy.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - HttpAdvancedProxy
          title: Stack Type
          description: Stack type.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: Stack ID
          description: ID for stack.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Stack
          title: Stack Name
          description: Name for stack.
        description:
          type: string
          maxLength: 256
          default: ''
          example: Netop's HTTP Advanced Proxy.
          title: Description
          description: Describes the stack. The maximum length is 256 characters.
        enabled:
          type: boolean
          default: true
          title: Enabled
          description: >-
            Specifies whether the proxy accepts new connections. If set to
            false, the proxy does not accept new connections. The default value
            is true.
        clientSide:
          type: object
          title: Client-Side Parameters
          description: Specifies client-side parameters.
          properties:
            l4ClientSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4
              description: >-
                A soft reference, by name, to an L4 client-side object. Maximum
                length is 192 characters.
            tls:
              oneOf:
                - $ref: '#/components/schemas/ClientSideTlsDefault'
                - $ref: '#/components/schemas/ClientSideTlsMulti'
              title: TLS
              description: Specifies TLS settings for client-side authentication.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: Specifies TCP settings for client-side communications.
            http:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/HttpDefault'
              title: HTTP
            http2:
              oneOf:
                - $ref: '#/components/schemas/Http2Default'
              title: HTTP2
            caching:
              title: Caching
              description: Ramcache.
              oneOf:
                - $ref: '#/components/schemas/RamcacheDefault'
            compression:
              title: HTTP Compression
              description: Specifies HTTP compression settings.
              oneOf:
                - $ref: '#/components/schemas/HttpCompressionDefault'
            persistence:
              oneOf:
                - $ref: '#/components/schemas/PersistenceDestAddr'
                - $ref: '#/components/schemas/PersistenceSourceAddr'
                - $ref: '#/components/schemas/PersistenceCookie'
                - $ref: '#/components/schemas/PersistenceSsl'
                - $ref: '#/components/schemas/PersistenceUniversal'
              title: Virtual Server Persistence
              description: Virtual server persistence configuration.
        serverSide:
          type: object
          title: Server-Side Parameters
          description: Server-side parameters.
          properties:
            l4ServerSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4
              description: >-
                A soft reference, by name, to an L4 server-side object. Maximum
                length is 192 characters.
            loadBalancing:
              example: least-connections
              title: Load Balancing
              description: Specifies load balancing settings.
              type: string
              maxLength: 64000
              enum:
                - round-robin
                - least-connections
                - predictive
                - weighted-round-robin
                - ratio-least-connections
                - ratio-session
                - fastest
              default: round-robin
            ignorePersistedWeight:
              type: boolean
              default: false
              title: Ignore Persisted Weight
              description: >-
                Specifies whether to count the weight of persisted connections
                on pool members when making load balancing decisions. The
                default is false.
            monitors:
              type: object
              nullable: true
              title: Monitors
              description: Monitors.
              properties:
                http:
                  title: HTTP
                  description: HTTP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                icmp:
                  title: ICMP
                  description: ICMP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                inband:
                  title: INBAND
                  description: INBAND monitor.
                  type: object
                  nullable: true
                  properties:
                    failures:
                      title: Failures
                      description: >-
                        The number of failed attempts before marking a pool
                        member down.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    failureInterval:
                      title: Failure Interval
                      description: The interval, in seconds, in which failures are counted.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    responseTime:
                      title: Response Time
                      description: >-
                        The interval, in seconds, in which a pool member must
                        respond with data.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    retryTime:
                      title: Retry Time
                      description: >-
                        The wait time, in seconds, before retrying whether a
                        pool member is up.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                tcp:
                  title: TCP
                  description: TCP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: ''
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                  additionalProperties: false
                https:
                  title: HTTPS
                  description: HTTPS monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                http2:
                  title: HTTP2
                  description: HTTP2 monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
            tls:
              oneOf:
                - $ref: '#/components/schemas/ServerSideTlsDefault'
                - $ref: '#/components/schemas/ServerSideTlsServerAuthentication'
              title: TLS
              description: TLS for server side.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: TCP for server side.
            http:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/HttpDefault'
              title: HTTP
            http2:
              oneOf:
                - $ref: '#/components/schemas/Http2Default'
              title: HTTP2
            oneConnect:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/OneConnectDefault'
              title: OneConnect
              description: Specifies whether OneConnect is used for connection management.
        policies:
          type: array
          default: []
          title: Policies
          description: Associated array of stack policies.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: iRules
          description: Specifies iRules associated with this proxy.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Packet Mirroring
          description: >-
            If set to enabled, packet mirroring will be enabled for this proxy.
            Defaults to disabled.
        analytics:
          type: object
          title: HTTP and TCP Analytics
          description: >-
            HTTP and TCP analytics collection settings. These settings define
            which analytics data will be collected for this stack. Reducing
            amount of analytics data collected can improve system performance.
          properties:
            http:
              title: HTTP
              description: >-
                Settings of HTTP analytics collection. These settings define
                which HTTP analytics data will be collected for this stack.
              type: object
              properties:
                id:
                  readOnly: true
                  title: Analytics Settings ID
                  description: The ID for HTTP analytics settings.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                collectClientLatency:
                  type: boolean
                  default: false
                  title: Collect Client Latency
                  description: >-
                    Specifies, when true, that client latency metric should be
                    collected.
                collectUrl:
                  type: boolean
                  default: true
                  title: Collect URL
                  description: Specifies, when true, that URL should be collected.
                collectIp:
                  type: boolean
                  default: true
                  title: Collect IP
                  description: >-
                    Specifies, when true, that client IP address should be
                    collected.
                collectDestIpGeo:
                  type: boolean
                  default: true
                  title: Collect Destination IP And Geo
                  description: >-
                    Specifies, when true, that desination IP address and geo
                    location should be collected.
                collectSubnet:
                  type: boolean
                  default: true
                  title: Collect Subnet
                  description: Specifies, when true, that subnet should be collected.
                collectGeo:
                  type: boolean
                  default: true
                  title: Collect Source Geo
                  description: >-
                    Specifies, when true, that source geo location should be
                    collected.
                collectUserAgent:
                  type: boolean
                  default: true
                  title: Collect User Agent
                  description: >-
                    Specifies, when true, that user agent HTTP header should be
                    collected.
                collectBrowser:
                  type: boolean
                  default: true
                  title: Collect Client Browser
                  description: >-
                    Specifies, when true, that client browser should be
                    collected.
                collectOs:
                  type: boolean
                  default: true
                  title: Collect Client OS Type
                  description: >-
                    Specifies, when true, that client OS type should be
                    collected.
                collectResponseCodes:
                  type: boolean
                  default: true
                  title: Collect HTTP Response Codes
                  description: >-
                    Specifies, when true, that HTTP response codes should be
                    collected.
                collectMethods:
                  type: boolean
                  default: true
                  title: Collect HTTP Methods
                  description: Specifies, when true, that HTTP methods should be collected.
                collectMaxTpsAndThroughput:
                  type: boolean
                  default: true
                  title: Collect Max Transactions and Throughput
                  description: >-
                    Specifies, when true, that max transactions per second and
                    max throughput metrics should be collected.
                collectHttpTimingMetrics:
                  type: boolean
                  default: false
                  title: Collect HTTP Timing Metrics
                  description: >-
                    Specifies, when true, that the following timing metrics
                    should be collected: application response time, TTFB,
                    network latencies, request and response durations.
                collectUserSessions:
                  type: boolean
                  default: true
                  title: Collect User Sessions
                  description: >-
                    Specifies, when true, that user sessison should be
                    collected.
                sessionTimeout:
                  minimum: 0
                  maximum: 3600
                  title: Session Timeout
                  description: >-
                    Specifies the session timeout value in seconds. The range is
                    from 0 (zero) to 3600 seconds (1 hour). The default value is
                    600 seconds (10 minutes).
                  type: integer
                  format: uint32
                sampling:
                  type: boolean
                  default: true
                  title: Sampling Mode On
                  description: >-
                    Specifies, when true, that sampling mode is on. Sampling
                    mode collects only one set of HTTP transactions statistics
                    per Sampling Ratio. The default is true.
                samplingRatio:
                  minimum: 1
                  maximum: 10000
                  title: Sampling Ratio
                  description: >-
                    Specifies how many HTTP transactions are reported as a
                    single analytics sample. Used when Sampling Mode On is true.
                    The range is from 1 to 10000. The default value is 2.
                  type: integer
                  format: uint32
                sessionCookieSecurity:
                  type: string
                  maxLength: 64000
                  enum:
                    - always
                    - only_ssl
                    - never
                  default: only_ssl
                  title: Session Cookie Security
                  description: >-
                    Specifies when to use session cookie security: always,
                    only_ssl, and never. The default value is only_ssl.
              additionalProperties: false
            tcp:
              title: TCP
              description: >-
                Settings of TCP analytics collection. These settings define
                which TCP analytics data will be collected for this stack.
              type: object
              properties:
                id:
                  readOnly: true
                  title: Analytics Settings ID
                  description: The ID number for TCP analytics settings.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                collectCity:
                  type: boolean
                  default: false
                  title: Collect City
                  description: Specifies, when true, that city name should be collected.
                collectContinent:
                  type: boolean
                  default: true
                  title: Collect Continent
                  description: >-
                    Specifies, when true, that continent name should be
                    collected.
                collectCountry:
                  type: boolean
                  default: true
                  title: Collect Country
                  description: Specifies, when true, that country name should be collected.
                collectNexthop:
                  type: boolean
                  default: false
                  title: Collect Next Hop Address
                  description: >-
                    Specifies, when true, that next hop address should be
                    collected.
                collectPostCode:
                  type: boolean
                  default: false
                  title: Collect Post Code
                  description: Specifies, when true, that post code should be collected.
                collectRegion:
                  type: boolean
                  default: false
                  title: Collect Region
                  description: Specifies, when true, that region should be collected.
                collectRemoteHostIp:
                  type: boolean
                  default: false
                  title: Collect Remote Host IP
                  description: >-
                    Specifies, when true, that IP address of remote host should
                    be collected.
                collectRemoteHostSubnet:
                  type: boolean
                  default: true
                  title: Collect Remote Host Subnet
                  description: >-
                    Specifies, when true, that subnet of remote host should be
                    collected.
                collectedByClientSide:
                  type: boolean
                  default: true
                  title: Collect Client Side
                  description: >-
                    Specifies, when true, that analytics data on client side
                    should be collected.
                collectedByServerSide:
                  type: boolean
                  default: false
                  title: Collect Server Side
                  description: >-
                    Specifies, when true, that analytics data on server side
                    should be collected.
                description:
                  type: string
                  maxLength: 256
                  title: Description
                  description: >-
                    Description of TCP settings. The maximum length is 256
                    characters.
              additionalProperties: false
      required:
        - name
        - stackType
      additionalProperties: false
    HttpCompressionDefault:
      type: object
      title: HTTP Compression
      description: HTTP Compression.
      properties:
        id:
          readOnly: true
          title: HTTP Compression ID
          description: Id for HTTP compression.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        contentTypeInclude:
          type: array
          items:
            type: string
            maxLength: 256
            format: contentType
            pattern: "(application|audio|font|example|image|message|model|multipart|text|video|x-(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+))/([0-9A-Za-z!#$%&'*+.^_`|~-]+)((?:[ \t]*;[ \t]*[0-9A-Za-z!#$%&'*+.^_`|~-]+=(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+|\"(?:[^\"\\\\]|\\.)*\"))*)"
            description: Content type as described in RFC 2045 section-5.1
            title: Content Type
          default:
            - text/
            - application/(xml|x-javascript)
          title: Include Content Types
          description: >-
            List of HTTP Content-Type responses that will be included for
            compression.
        contentTypeExclude:
          type: array
          items:
            type: string
            maxLength: 256
            format: contentType
            pattern: "(application|audio|font|example|image|message|model|multipart|text|video|x-(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+))/([0-9A-Za-z!#$%&'*+.^_`|~-]+)((?:[ \t]*;[ \t]*[0-9A-Za-z!#$%&'*+.^_`|~-]+=(?:[0-9A-Za-z!#$%&'*+.^_`|~-]+|\"(?:[^\"\\\\]|\\.)*\"))*)"
            description: Content type as described in RFC 2045 section-5.1
            title: Content Type
          default: []
          title: Exclude Content Types
          description: >-
            List of HTTP Content-Type responses that will be excluded for
            compression.
        uriInclude:
          type: array
          items:
            type: string
            maxLength: 4096
            format: uri
            pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
            description: >-
              An ASCII-encoded Uniform Resource Identifier (URI) as defined in
              RFC 3986.
            title: Uniform Resource Identifier
          default:
            - .*
          title: Include URIs
          description: >-
            List of HTTP Request-URI responses that will be included for
            compression.
        uriExclude:
          type: array
          items:
            type: string
            maxLength: 4096
            format: uri
            pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
            description: >-
              An ASCII-encoded Uniform Resource Identifier (URI) as defined in
              RFC 3986.
            title: Uniform Resource Identifier
          default: []
          title: Exclude URIs
          description: >-
            List of HTTP Request-URI responses that will be excluded for
            compression.
        gzipCompressionLevel:
          type: integer
          minimum: 1
          maximum: 9
          default: 1
          title: Gzip Compression Level
          description: >-
            A value that determines the amount of memory that the system uses
            when compressing a server response.
      additionalProperties: false
    HttpDefault:
      type: object
      title: HTTP Default
      description: HTTP default.
      properties:
        id:
          readOnly: true
          title: HTTP ID
          description: Id for http.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    HttpOnlyUri:
      type: string
      maxLength: 4096
      format: uri
      pattern: ^http:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
      description: An ASCII-encoded HTTP Uniform Resource Identifier (URI).
    HttpRevProxy:
      type: object
      title: HTTP Reverse Proxy
      description: HTTP rev proxy.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - HttpRevProxy
          title: Stack Type
          description: Stack type.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: ID
          description: ID for stack.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Stack
          title: Stack Name
          description: Name for stack.
        description:
          type: string
          maxLength: 256
          default: ''
          example: Olivia's HTTP Reverse Proxy.
          title: Description
          description: Description for stack.
        enabled:
          type: boolean
          default: true
          title: Enabled
          description: >-
            If set to false, the proxy will not accept new connections. Defaults
            to true.
        clientSide:
          type: object
          title: Client Side Parameters
          description: Client side parameters.
          properties:
            l4ClientSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4
              description: A soft reference, by name, to an L4 Clientside object.
            tls:
              oneOf:
                - $ref: '#/components/schemas/ClientSideTlsDefault'
              title: TLS
              description: TLS for client side.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: TCP for client side.
            http:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/HttpDefault'
              title: HTTP
            http2:
              oneOf:
                - $ref: '#/components/schemas/Http2Default'
              title: HTTP2
            caching:
              title: Caching
              description: Ramcache.
              oneOf:
                - $ref: '#/components/schemas/RamcacheDefault'
            compression:
              description: HTTP Compression.
              oneOf:
                - $ref: '#/components/schemas/HttpCompressionDefault'
              title: Compression
            persistence:
              oneOf:
                - $ref: '#/components/schemas/PersistenceDestAddr'
                - $ref: '#/components/schemas/PersistenceSourceAddr'
                - $ref: '#/components/schemas/PersistenceCookie'
                - $ref: '#/components/schemas/PersistenceSsl'
                - $ref: '#/components/schemas/PersistenceUniversal'
              title: Persistence
              description: Virtual server persistence configuration.
        serverSide:
          type: object
          title: Server Side Parameters
          description: Server side parameters.
          properties:
            l4ServerSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4
              description: A soft reference, by name, to an L4 Serverside object.
            loadBalancing:
              example: least-connections
              title: Load Balancing
              description: Load balancing.
              type: string
              maxLength: 64000
              enum:
                - round-robin
                - least-connections
                - predictive
                - weighted-round-robin
                - ratio-least-connections
                - ratio-session
                - fastest
              default: round-robin
            ignorePersistedWeight:
              type: boolean
              default: false
              title: Ignore Persisted Weight
              description: >-
                Do not count the weight of persisted connections on pool members
                when making load balancing decisions.
            monitors:
              type: object
              nullable: true
              title: Monitors
              description: Monitors.
              properties:
                http:
                  description: HTTP monitor.
                  title: HTTP
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                icmp:
                  description: ICMP monitor.
                  title: ICMP
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                inband:
                  description: INBAND monitor.
                  title: Inband
                  type: object
                  nullable: true
                  properties:
                    failures:
                      title: Failures
                      description: >-
                        The number of failed attempts before marking a pool
                        member down.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    failureInterval:
                      title: Failure Interval
                      description: The interval, in seconds, in which failures are counted.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    responseTime:
                      title: Response Time
                      description: >-
                        The interval, in seconds, in which a pool member must
                        respond with data.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    retryTime:
                      title: Retry Time
                      description: >-
                        The wait time, in seconds, before retrying whether a
                        pool member is up.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                tcp:
                  description: TCP monitor.
                  title: TCP
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: ''
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                  additionalProperties: false
                https:
                  description: HTTPS monitor.
                  title: HTTPS
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                http2:
                  description: HTTP2 monitor.
                  title: HTTP2
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
            tls:
              oneOf:
                - $ref: '#/components/schemas/ServerSideTlsDefault'
                - $ref: '#/components/schemas/ServerSideTlsServerAuthentication'
              title: TLS
              description: TLS for server side.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: TCP for server side.
            http:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/HttpDefault'
              title: HTTP
            http2:
              oneOf:
                - $ref: '#/components/schemas/Http2Default'
              title: HTTP2
            oneConnect:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/OneConnectDefault'
              title: OneConnect
              description: One connect.
        policies:
          type: array
          default: []
          title: Policies
          description: Associate array of stack policies.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: IRules
          description: IRules.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Packet Mirroring
          description: >-
            If set to enabled, packet mirroring will be enabled for this proxy.
            Defaults to disabled.
        analytics:
          type: object
          title: Analytics Collection Settings
          description: >-
            HTTP and TCP analytics collection settings. These settings define
            which analytics data will be collected for this stack. Reducing
            amount of analytics data collected can improve system performance.
          properties:
            http:
              title: HTTP
              description: >-
                Settings of HTTP analytics collection. These settings define
                which HTTP analytics data will be collected for this stack.
              type: object
              properties:
                id:
                  readOnly: true
                  title: Analytics Settings ID
                  description: The ID for HTTP analytics settings.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                collectClientLatency:
                  type: boolean
                  default: false
                  title: Collect Client Latency
                  description: >-
                    Specifies, when true, that client latency metric should be
                    collected.
                collectUrl:
                  type: boolean
                  default: true
                  title: Collect URL
                  description: Specifies, when true, that URL should be collected.
                collectIp:
                  type: boolean
                  default: true
                  title: Collect IP
                  description: >-
                    Specifies, when true, that client IP address should be
                    collected.
                collectDestIpGeo:
                  type: boolean
                  default: true
                  title: Collect Destination IP And Geo
                  description: >-
                    Specifies, when true, that desination IP address and geo
                    location should be collected.
                collectSubnet:
                  type: boolean
                  default: true
                  title: Collect Subnet
                  description: Specifies, when true, that subnet should be collected.
                collectGeo:
                  type: boolean
                  default: true
                  title: Collect Source Geo
                  description: >-
                    Specifies, when true, that source geo location should be
                    collected.
                collectUserAgent:
                  type: boolean
                  default: true
                  title: Collect User Agent
                  description: >-
                    Specifies, when true, that user agent HTTP header should be
                    collected.
                collectBrowser:
                  type: boolean
                  default: true
                  title: Collect Client Browser
                  description: >-
                    Specifies, when true, that client browser should be
                    collected.
                collectOs:
                  type: boolean
                  default: true
                  title: Collect Client OS Type
                  description: >-
                    Specifies, when true, that client OS type should be
                    collected.
                collectResponseCodes:
                  type: boolean
                  default: true
                  title: Collect HTTP Response Codes
                  description: >-
                    Specifies, when true, that HTTP response codes should be
                    collected.
                collectMethods:
                  type: boolean
                  default: true
                  title: Collect HTTP Methods
                  description: Specifies, when true, that HTTP methods should be collected.
                collectMaxTpsAndThroughput:
                  type: boolean
                  default: true
                  title: Collect Max Transactions and Throughput
                  description: >-
                    Specifies, when true, that max transactions per second and
                    max throughput metrics should be collected.
                collectHttpTimingMetrics:
                  type: boolean
                  default: false
                  title: Collect HTTP Timing Metrics
                  description: >-
                    Specifies, when true, that the following timing metrics
                    should be collected: application response time, TTFB,
                    network latencies, request and response durations.
                collectUserSessions:
                  type: boolean
                  default: true
                  title: Collect User Sessions
                  description: >-
                    Specifies, when true, that user sessison should be
                    collected.
                sessionTimeout:
                  minimum: 0
                  maximum: 3600
                  title: Session Timeout
                  description: >-
                    Specifies the session timeout value in seconds. The range is
                    from 0 (zero) to 3600 seconds (1 hour). The default value is
                    600 seconds (10 minutes).
                  type: integer
                  format: uint32
                sampling:
                  type: boolean
                  default: true
                  title: Sampling Mode On
                  description: >-
                    Specifies, when true, that sampling mode is on. Sampling
                    mode collects only one set of HTTP transactions statistics
                    per Sampling Ratio. The default is true.
                samplingRatio:
                  minimum: 1
                  maximum: 10000
                  title: Sampling Ratio
                  description: >-
                    Specifies how many HTTP transactions are reported as a
                    single analytics sample. Used when Sampling Mode On is true.
                    The range is from 1 to 10000. The default value is 2.
                  type: integer
                  format: uint32
                sessionCookieSecurity:
                  type: string
                  maxLength: 64000
                  enum:
                    - always
                    - only_ssl
                    - never
                  default: only_ssl
                  title: Session Cookie Security
                  description: >-
                    Specifies when to use session cookie security: always,
                    only_ssl, and never. The default value is only_ssl.
              additionalProperties: false
            tcp:
              title: TCP
              description: >-
                Settings of TCP analytics collection. These settings define
                which TCP analytics data will be collected for this stack.
              type: object
              properties:
                id:
                  readOnly: true
                  title: Analytics Settings ID
                  description: The ID number for TCP analytics settings.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                collectCity:
                  type: boolean
                  default: false
                  title: Collect City
                  description: Specifies, when true, that city name should be collected.
                collectContinent:
                  type: boolean
                  default: true
                  title: Collect Continent
                  description: >-
                    Specifies, when true, that continent name should be
                    collected.
                collectCountry:
                  type: boolean
                  default: true
                  title: Collect Country
                  description: Specifies, when true, that country name should be collected.
                collectNexthop:
                  type: boolean
                  default: false
                  title: Collect Next Hop Address
                  description: >-
                    Specifies, when true, that next hop address should be
                    collected.
                collectPostCode:
                  type: boolean
                  default: false
                  title: Collect Post Code
                  description: Specifies, when true, that post code should be collected.
                collectRegion:
                  type: boolean
                  default: false
                  title: Collect Region
                  description: Specifies, when true, that region should be collected.
                collectRemoteHostIp:
                  type: boolean
                  default: false
                  title: Collect Remote Host IP
                  description: >-
                    Specifies, when true, that IP address of remote host should
                    be collected.
                collectRemoteHostSubnet:
                  type: boolean
                  default: true
                  title: Collect Remote Host Subnet
                  description: >-
                    Specifies, when true, that subnet of remote host should be
                    collected.
                collectedByClientSide:
                  type: boolean
                  default: true
                  title: Collect Client Side
                  description: >-
                    Specifies, when true, that analytics data on client side
                    should be collected.
                collectedByServerSide:
                  type: boolean
                  default: false
                  title: Collect Server Side
                  description: >-
                    Specifies, when true, that analytics data on server side
                    should be collected.
                description:
                  type: string
                  maxLength: 256
                  title: Description
                  description: >-
                    Description of TCP settings. The maximum length is 256
                    characters.
              additionalProperties: false
      required:
        - name
        - stackType
      additionalProperties: false
    HttpSimpleProxy:
      type: object
      title: HTTP Simple Proxy
      description: HTTP simple proxy.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - HttpSimpleProxy
          title: Stack Type
          description: Stack type.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: ID
          description: ID for stack.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Stack
          title: Stack Name
          description: Name for stack.
        description:
          type: string
          maxLength: 256
          default: ''
          example: Olivia's HTTP Simple Proxy.
          title: Description
          description: Description for stack.
        enabled:
          type: boolean
          default: true
          title: Enabled
          description: >-
            If set to false, the proxy will not accept new connections. Defaults
            to true.
        l4ClientSide:
          type: string
          minLength: 1
          maxLength: 192
          title: L4 Client Side
          description: A soft reference, by name, to an L4 Clientside object.
        l4ServerSide:
          type: string
          minLength: 1
          maxLength: 192
          title: L4 Server Side
          description: A soft reference, by name, to an L4 Serverside object.
        monitors:
          type: object
          nullable: true
          title: Monitors
          description: Monitors.
          properties:
            http:
              title: HTTP
              description: HTTP monitor.
              type: object
              nullable: true
              properties:
                id:
                  title: Monitor ID
                  description: ID for the object.
                  readOnly: true
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                sendString:
                  title: Send String
                  description: Text string to send to the target.
                  type: string
                  maxLength: 64000
                  default: GET / HTTP/1.1
                receiveString:
                  title: Receive String
                  description: >-
                    The regular expression, when matched, indicated the target
                    is up.
                  type: string
                  maxLength: 64000
                  default: .*
                receiveDisableString:
                  title: Receive Disable String
                  description: The regular expression, when matched, disables the target.
                  type: string
                  maxLength: 64000
                  default: ''
                interval:
                  title: Interval
                  description: Specifies, in seconds, the monitor check frequency.
                  type: integer
                  format: uint32
                  minimum: 0
                  maximum: 4294967295
                timeout:
                  title: Timeout
                  description: >-
                    Specifies, in seconds, the time in which the target must
                    respond.
                  type: integer
                  format: uint32
                  minimum: 0
                  maximum: 4294967295
                username:
                  title: User Name
                  description: The username for HTTP authentication.
                  type: string
                  maxLength: 64000
                  default: ''
                password:
                  title: Password
                  description: The password for HTTP authentication.
                  type: string
                  maxLength: 64000
                  default: ''
                  writeOnly: true
              additionalProperties: false
            https:
              title: HTTPS
              description: HTTPS monitor.
              type: object
              nullable: true
              properties:
                id:
                  title: Monitor ID
                  description: ID for the object.
                  readOnly: true
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                sendString:
                  title: Send String
                  description: Text string to send to the target.
                  type: string
                  maxLength: 64000
                  default: GET / HTTP/1.1
                receiveString:
                  title: Receive String
                  description: >-
                    The regular expression, when matched, indicated the target
                    is up.
                  type: string
                  maxLength: 64000
                  default: .*
                receiveDisableString:
                  title: Receive Disable String
                  description: The regular expression, when matched, disables the target.
                  type: string
                  maxLength: 64000
                  default: ''
                interval:
                  title: Interval
                  description: Specifies, in seconds, the monitor check frequency.
                  type: integer
                  format: uint32
                  minimum: 0
                  maximum: 4294967295
                timeout:
                  title: Timeout
                  description: >-
                    Specifies, in seconds, the time in which the target must
                    respond.
                  type: integer
                  format: uint32
                  minimum: 0
                  maximum: 4294967295
                username:
                  title: User Name
                  description: The username for HTTP authentication.
                  type: string
                  maxLength: 64000
                  default: ''
                password:
                  title: Password
                  description: The password for HTTP authentication.
                  type: string
                  maxLength: 64000
                  default: ''
                  writeOnly: true
              additionalProperties: false
        policies:
          type: array
          default: []
          title: Policies
          description: Associate array of stack policies.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: IRules
          description: IRules.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Packet Mirroring
          description: >-
            If set to enabled, packet mirroring will be enabled for this proxy.
            Defaults to disabled.
        tcp:
          default: {}
          oneOf:
            - $ref: '#/components/schemas/TcpModern'
            - $ref: '#/components/schemas/TcpMobile'
            - $ref: '#/components/schemas/TcpLan'
            - $ref: '#/components/schemas/TcpWan'
            - $ref: '#/components/schemas/TcpDefault'
          title: TCP
          description: TCP for client and server side.
        http:
          default: {}
          oneOf:
            - $ref: '#/components/schemas/HttpDefault'
          title: HTTP
          description: HTTP for client and server side.
        http2:
          oneOf:
            - $ref: '#/components/schemas/Http2Default'
          title: HTTP2
          description: HTTP2 and httprouter for client and server side.
        clientSideTls:
          oneOf:
            - $ref: '#/components/schemas/ClientSideTlsDefault'
          title: Client Side TLS
          description: TLS for client side.
        serverSideTls:
          oneOf:
            - $ref: '#/components/schemas/ServerSideTlsDefault'
          title: Server Side TLS
          description: TLS for server side.
      required:
        - name
        - stackType
      additionalProperties: false
    HttpUri:
      type: string
      maxLength: 4096
      format: uri
      pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
      description: An ASCII-encoded HTTP/HTTPS Uniform Resource Identifier (URI).
    HttpsOnlyUri:
      type: string
      maxLength: 4096
      format: uri
      pattern: ^https:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
      description: An ASCII-encoded HTTPS Uniform Resource Identifier (URI).
    IdpConnector:
      description: >-
        A generic federated identity provider connector, using the SAML protocol
        to connect to external identity providers.
      type: object
      properties:
        name:
          description: An optional name of the IdP connector.
          type: string
        matchingSource:
          description: >-
            The selection criteria for IdP connectors. It is a session variable
            name in %{}. The value of this session variable is compared to
            matchingValue to determine which IdP connector is used to
            authenticate the user. Useful examples: %{session.logon.last.domain}
            %{session.logon.last.logonname} %{session.server.landinguri}
            %{session.server.network.name}
          type: string
          pattern: ^%{[A-Za-z0-9_\.-]+}$
        matchingValue:
          description: >-
            The IdP matching value for the entity ID. This property is used in
            combination with matchingSource.
          type: string
          minLength: 1
      additionalProperties: false
    IdpConnectorArray:
      description: An array of IdP connectors in the SAML service provider.
      type: array
      items:
        description: >-
          A generic federated identity provider connector, using the SAML
          protocol to connect to external identity providers.
        type: object
        properties:
          name:
            description: An optional name of the IdP connector.
            type: string
          matchingSource:
            description: >-
              The selection criteria for IdP connectors. It is a session
              variable name in %{}. The value of this session variable is
              compared to matchingValue to determine which IdP connector is used
              to authenticate the user. Useful examples:
              %{session.logon.last.domain} %{session.logon.last.logonname}
              %{session.server.landinguri} %{session.server.network.name}
            type: string
            pattern: ^%{[A-Za-z0-9_\.-]+}$
          matchingValue:
            description: >-
              The IdP matching value for the entity ID. This property is used in
              combination with matchingSource.
            type: string
            minLength: 1
        additionalProperties: false
      oneOf:
        - type: array
          items:
            type: object
            required:
              - name
          minItems: 1
          maxItems: 1
        - type: array
          items:
            type: object
            required:
              - name
              - matchingSource
              - matchingValue
          minItems: 2
    Ihealth:
      type: object
      title: IHealth
      description: IHealth.
      required:
        - username
        - password
      properties:
        username:
          type: string
          title: Username
          description: F5 iHealth username.
          maxLength: 128
          nullable: true
          default: null
        password:
          type: string
          title: Password
          description: F5 iHealth password.
          maxLength: 128
          nullable: true
          default: null
      additionalProperties: false
    Info:
      title: FAST Info
      type: object
      description: Info about FAST api.
      properties:
        version:
          type: string
          description: The version string for FAST.
          pattern: .*
          example: 1.0.0
          maxLength: 64000
        as3Info:
          type: object
          title: Schema Response Information
          description: Info response schema.
          properties:
            version:
              type: string
              title: Version
              description: Version.
              maxLength: 64000
            release:
              type: string
              title: Release
              description: Release.
              maxLength: 64000
            schemaCurrent:
              type: string
              title: Current Schema
              description: Schema current.
              maxLength: 64000
            schemaMinimum:
              type: string
              title: Schema Minimum
              description: Schema minimum.
              maxLength: 64000
          additionalProperties: false
        installedTemplates:
          title: FAST Template Set List
          type: array
          description: Template Set List.
          items:
            title: FAST Template Set
            type: object
            description: Template Set.
            properties:
              name:
                type: string
                description: Name of the Template Set.
                example: examples
                maxLength: 192
              hash:
                type: string
                description: A sha256 hash of the Template hashes.
                example: >-
                  b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715
                maxLength: 64000
              supported:
                type: boolean
                description: The Template Set is officially supported by F5.
                example: false
              templates:
                title: FAST Templates
                type: array
                description: A list of template objects.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the template.
                      maxLength: 192
                    hash:
                      type: string
                      description: The sha256 of the template source text.
                      maxLength: 64000
                    appsList:
                      type: array
                      description: A list of applications using the template.
                      items:
                        title: FAST Application Definition
                        type: object
                        description: Application Definition.
                        required:
                          - name
                          - parameters
                        properties:
                          name:
                            type: string
                            description: Must be valid Template in the system.
                            example: examples/simple_udp_defaults
                            maxLength: 192
                          parameters:
                            title: FAST Parameters Definition
                            type: object
                            description: >-
                              Object must conform to specified template's
                              schema.
                            example:
                              tenant: foo
                              application: bar
                              virtualAddress: 192.0.2.11
                          allowOverwrite:
                            type: boolean
                            description: >-
                              Do not error if an Application with the same name
                              already exists in the tenant.
                            default: true
                        example:
                          name: examples/simple_udp_defaults
                          parameters: {}
                          allowOverwrite: true
                        additionalProperties: false
                    title:
                      type: string
                      description: A "pretty name" for the Template
                      example: Simple UDP Application
                    description:
                      type: string
                      description: Template description
                      example: >-
                        ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN
                        PRODUCTION ** This Template is an example of how one
                        might build a simple UDP Application with load
                        balancing. It allows the user to provide a virtual IP
                        address and port along with a list of UDP server
                        addresses. The user-supplied values are inserted when
                        the Template is rendered, yielding an AS3 declaration
                        suitable for submission to BIG-IP.
              schemas:
                type: array
                description: A list of user supplied schema.
                items:
                  type: object
                  title: Schema
                  description: A schema object.
                  properties:
                    name:
                      type: string
                      description: Schema name.
                      maxLength: 192
                    hash:
                      type: string
                      description: A sha256 hash of the schema.
                      maxLength: 64000
                example:
                  - name: examples/types
                    hash: >-
                      0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c
              dataFiles:
                type: array
                description: A list of data files associated with the Template Set.
                items:
                  title: Data File
                  type: object
                  description: A data file object.
                  properties:
                    name:
                      type: string
                      description: data file name.
                      maxLength: 192
                    hash:
                      type: string
                      description: A sha256 hash of the data file.
                      maxLength: 64000
                  example:
                    - name: testSet/test
                      hash: >-
                        0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c
              enabled:
                type: boolean
                description: Template Set is installed and ready to use
                example: true
            additionalProperties: false
        config:
          title: FAST Settings
          type: object
          description: Current config for FAST.
          properties:
            deletedTemplateSets:
              type: array
              description: Template Sets that have been deleted.
              items:
                type: string
              example: []
            enableIpam:
              type: boolean
              description: Enable IPAM for Official F5 FAST Templates (Experimental/Beta).
              example: false
            ipamProviders:
              type: array
              description: IPAM Providers configuration (Experimental/Beta).
              items:
                oneOf:
                  - $ref: '#/components/schemas/IpamInfoblox'
                  - $ref: '#/components/schemas/IpamGeneric'
              example: []
            disableDeclarationCache:
              type: boolean
              description: Do not cache AS3 declarations.
              example: false
          additionalProperties: false
      additionalProperties: false
    InfoResponseSchema:
      type: object
      title: Schema Response Information
      description: Info response schema.
      properties:
        version:
          type: string
          title: Version
          description: Version.
          maxLength: 64000
        release:
          type: string
          title: Release
          description: Release.
          maxLength: 64000
        schemaCurrent:
          type: string
          title: Current Schema
          description: Schema current.
          maxLength: 64000
        schemaMinimum:
          type: string
          title: Schema Minimum
          description: Schema minimum.
          maxLength: 64000
      additionalProperties: false
    InstanceDetailsResponseDefinition:
      type: object
      title: Instance Details Response Definition
      description: Pod details.
      properties:
        podName:
          type: string
          maxLength: 192
          title: Pod Name
          description: Pod name.
        node:
          type: string
          maxLength: 192
          title: Node
          description: Node on which pod is running.
        status:
          type: string
          maxLength: 192
          title: Status
          description: Pod status.
        phase:
          type: string
          maxLength: 192
          title: Phase
          description: Pod phase.
        readyTime:
          type: string
          maxLength: 64000
          format: date-time
          readOnly: true
          title: Ready Time
          description: The date and time when the pod was in ready state.
        creationTime:
          type: string
          maxLength: 64000
          format: date-time
          readOnly: true
          title: Creation Time
          description: The date and time when the pod was created.
      additionalProperties: false
    Interface:
      type: object
      title: Interface
      description: Interface.
      properties:
        id:
          title: Interface ID
          description: Interface ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          maxLength: 192
          example: mgmt
          readOnly: true
          title: Interface Name
          description: Interface name. e.g., mgmt, 1.1, 1.2 ...
        data:
          type: boolean
          default: true
          example: false
          title: Data Interface
          description: >-
            Specifies whether this is a data interface (true) or a management
            interface (false). The default is true.
        deviceId:
          type: string
          example: pci:0000:03:00.0
          readOnly: true
          title: Device Interface ID
          description: Presents the PCI or pseudo interface ID of type PCI, tap, or vbus.
        nic:
          type: string
          maxLength: 64000
          example: eth0
          title: NIC Name
          description: Specifies the name of NIC.
          readOnly: true
        macAddress:
          title: MAC Address
          description: Represents the MAC address for the associated interface.
          type: string
          maxLength: 17
          pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$
        lldpState:
          type: string
          maxLength: 64000
          title: LLDP State
          description: Reports the LLDP state.
        lldpAttributeList:
          type: array
          title: LLDP Attribute List
          description: Provides a list of LLDP attributes.
          items:
            type: string
            maxLength: 64000
        flowControl:
          type: string
          maxLength: 64000
          title: Flow Control
          description: Specifies flow control properties.
        forwardingMode:
          type: string
          maxLength: 64000
          title: Forwarding Mode
          description: Specifies the forwarding mode.
        sFlowPollingInterval:
          type: string
          maxLength: 64000
          title: SFlow Polling Interval
          description: Specifies the SFlow polling interval.
      required:
        - name
        - deviceId
      additionalProperties: false
    IpAddress:
      oneOf:
        - $ref: '#/components/schemas/Ipv4Address'
        - $ref: '#/components/schemas/Ipv6Address'
      description: An IPv4 or IPv6 address with no prefix specified.
      title: IP Address
    IpPrefix:
      oneOf:
        - $ref: '#/components/schemas/Ipv4Prefix'
        - $ref: '#/components/schemas/Ipv6Prefix'
      description: |
        An IPv4 or IPv6 prefix.
      title: IP Address Prefix
    IpRange:
      oneOf:
        - $ref: '#/components/schemas/Ipv4Range'
        - $ref: '#/components/schemas/Ipv6Range'
      description: Range of IPv4 or Ipv6 addresses
      title: IP Address Range
    IpSocketAddress:
      oneOf:
        - $ref: '#/components/schemas/Ipv4SocketAddress'
        - $ref: '#/components/schemas/Ipv6SocketAddress'
      description: An IPv4 or IPv6 socket address.
      title: IP Socket Address
    IpamGeneric:
      title: FAST IPAM - Generic Provider
      type: object
      description: IPAM Provider settings - Generic.
      properties:
        serviceType:
          enum:
            - Generic
          title: Service Type
          type: string
          default: Generic
          maxLength: 64000
        name:
          title: Name
          type: string
          maxLength: 192
        host:
          title: Host
          type: string
          maxLength: 64000
        username:
          title: Username
          type: string
          maxLength: 64000
        password:
          writeOnly: true
          title: Password
          type: string
          maxLength: 64000
        retrieveUrl:
          title: Retrieve URL
          type: string
          maxLength: 64000
        retrieveBody:
          title: Retrieve Body
          type: string
          default: '{}'
          maxLength: 64000
        retrievePathQuery:
          title: Retrieve Path Query
          type: string
          default: $
          maxLength: 64000
        retrieveRefPathQuery:
          title: Retrieve Reference Path Query
          type: string
          default: ''
          maxLength: 64000
        releaseUrl:
          title: Release URL
          type: string
          maxLength: 64000
        releaseBody:
          title: Release Body
          type: string
          default: '{}'
          maxLength: 64000
        releaseMethod:
          enum:
            - get
            - post
            - put
            - patch
            - delete
          title: Release Method
          type: string
          default: post
          maxLength: 64000
        authHeaderName:
          title: Authorization Header Name
          type: string
          default: Authorization
          maxLength: 64000
        authHeaderValue:
          title: Authorization Header Value
          type: string
          maxLength: 64000
      additionalProperties: false
    IpamInfoblox:
      title: FAST IPAM - Infoblox
      type: object
      description: IPAM Provider settings - Infoblox.
      properties:
        serviceType:
          enum:
            - Infoblox
          title: Service Type
          type: string
          default: Infoblox
          maxLength: 64000
        name:
          title: Name
          type: string
          maxLength: 192
        host:
          title: Host
          type: string
          maxLength: 64000
        username:
          title: Username
          type: string
          maxLength: 64000
        password:
          writeOnly: true
          title: Password
          type: string
          maxLength: 64000
        retrieveUrl:
          title: Retrieve URL
          type: string
          maxLength: 64000
        retrieveBody:
          title: Retrieve Body
          type: string
          maxLength: 64000
        retrievePathQuery:
          title: Retrieve Path Query
          type: string
          default: $.result.ipv4addr
          maxLength: 64000
        retrieveRefPathQuery:
          title: Retrieve Reference Path Query
          type: string
          default: $.result._ref
          maxLength: 64000
        releaseUrl:
          title: Release URL
          type: string
          default: '{{host}}/wapi/{{apiVersion}}/{{addressRef}}'
          maxLength: 64000
        releaseBody:
          title: Release Body
          type: string
          default: '{}'
          maxLength: 64000
        releaseMethod:
          enum:
            - get
            - post
            - put
            - patch
            - delete
          title: Release Method
          type: string
          default: delete
          maxLength: 64000
        authHeaderName:
          title: Authorization Header Name
          type: string
          default: ''
          maxLength: 64000
        authHeaderValue:
          title: Authorization Header Value
          type: string
          default: ''
          maxLength: 64000
        apiVersion:
          title: API Version
          type: string
          default: v2.4
          maxLength: 64000
        network:
          title: Network Name
          type: string
          maxLength: 64000
      additionalProperties: false
    Ipv4Address:
      type: string
      maxLength: 16
      pattern: >-
        ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
      description: |
        An IPv4 address in dotted quad notation using the default zone.
      title: IPv4 Address
    Ipv4Prefix:
      type: string
      maxLength: 19
      pattern: >-
        ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))$
      description: >
        An IPv4 prefix represented in dotted quad notation followed by a slash
        and a CIDR mask (0 <= mask <= 32).
      title: IPv4 Address Prefix
    Ipv4Range:
      type: string
      maxLength: 33
      pattern: >-
        ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?(\-((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?))?$
      description: >-
        IPv4 addresses with a subnet mask or range of IPv4 addresses or range of
        IPv4 subnets or a single IPv4 address 
      title: IPv4 Address Range
    Ipv4SocketAddress:
      type: string
      maxLength: 21
      pattern: >-
        ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]):([0-9]{1,5})$
      example: 10.0.0.1:443
      description: |
        A socket address is the combination of an IP address and a port number
      title: IPv4 Socket Address
    Ipv6Address:
      type: string
      maxLength: 45
      pattern: >-
        ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
      description: >
        An IPv6 address represented as either a full address; shortened or
        mixed-shortened formats, using the default zone.
      title: IPv6 Address
    Ipv6Prefix:
      type: string
      maxLength: 49
      pattern: >-
        ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9])$
      description: >
        An IPv6 prefix represented in full, shortened, or mixed shortened format
        followed by a slash and CIDR mask (0 <= mask <= 128).
      title: IPv6 Address Prefix
    Ipv6Range:
      type: string
      maxLength: 91
      pattern: >-
        ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))(\/((12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9])))?(\-((([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))(\/((12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9])))?))?$
      description: >-
        IPv6 addresses with a subnet mask or range of IPv6 addresses or range of
        IPv6 subnets or a single IPv6 address
      title: IPv6 Address Range
    Ipv6SocketAddress:
      type: string
      maxLength: 50
      pattern: >-
        ^\[(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))\]:([0-9]{1,5})$
      example: '[1fff:0:a88:85a3::ac1f]:8001'
      description: >
        A socket address is the combination of an IPv6 address and a port
        number.
      title: IPv6 Socket Address
    Irule:
      type: object
      title: IRule
      description: IRule.
      properties:
        description:
          type: string
          maxLength: 256
          title: Description
          description: Description for iRule.
        priority:
          type: integer
          default: 500
          title: Priority
          description: Priority for iRule.
          minimum: 0
          maximum: 1000
        rule:
          type: string
          title: Rule
          description: Rule for iRule.
          maxLength: 64000
      additionalProperties: false
    ItemDecisionBox:
      title: Decision Box AP Item
      description: Decision Box AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - decision-box
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        customization:
          description: Decision Box customization group.
          title: Decision Box Customization group
          type: array
          items:
            description: Customized strings for each language.
            type: object
            required:
              - language
              - strings
            properties:
              language:
                description: >-
                  Language of customized strings. ISO 639-1 language codes
                  should be used.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              strings:
                type: object
                description: >-
                  Definitions for customization strings for Decision Box
                  customization group.
                properties:
                  decisionTitle:
                    description: Decision Box Title.
                    type: string
                    maxLength: 1024
                  confirmTitle:
                    description: Confirm/Continue Title.
                    type: string
                    maxLength: 1024
                  option1Image:
                    description: Field 1 image.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  decision1Message:
                    description: Option 1.
                    type: string
                    maxLength: 1024
                  continueMessage:
                    description: Continue.
                    type: string
                    maxLength: 1024
                  option2Image:
                    description: Field 2 image.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  decision2Message:
                    description: Option 2.
                    type: string
                    maxLength: 1024
                  cancelMessage:
                    description: Cancel.
                    type: string
                    maxLength: 1024
                  image00:
                    description: image00.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image01:
                    description: image01.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image02:
                    description: image02.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image03:
                    description: image03.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image04:
                    description: image04.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image05:
                    description: image05.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image06:
                    description: image06.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image07:
                    description: image07.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image08:
                    description: image08.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image09:
                    description: image09.
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
        nextItems:
          minItems: 2
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
      required:
        - itemType
        - customization
        - nextItems
      additionalProperties: false
    ItemEmptyForPerRequestPolicy:
      title: Empty AP Item
      description: Empty AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - empty
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerRequestAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - nextItems
      additionalProperties: false
    ItemEmptyForPerSessionPolicy:
      title: Empty AP Item
      description: Empty AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - empty
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - nextItems
      additionalProperties: false
    ItemEndingAllow:
      title: Ending Allow AP Item
      description: Ending Allow AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - allow
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - itemType
      additionalProperties: false
    ItemEndingDeny:
      title: Ending Deny AP Item
      description: Ending Deny AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - deny
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        customization:
          description: Logout customization group.
          title: Logout Customization group
          type: array
          items:
            description: Customized strings for each language.
            type: object
            required:
              - language
              - strings
            properties:
              language:
                description: >-
                  Language of customized strings. ISO 639-1 language codes
                  should be used.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              strings:
                type: object
                description: >-
                  Customizable strings and settings for Logout page in Access
                  user interface.
                properties:
                  successTitle:
                    description: Success title.
                    type: string
                    maxLength: 1024
                  successMessage:
                    description: Success message.
                    type: string
                    maxLength: 1024
                  thankMessage:
                    description: Thank you message.
                    type: string
                    maxLength: 1024
                  errorTitle:
                    description: Error title.
                    type: string
                    maxLength: 1024
                  accessDeniedRequirementsNotMetMessage:
                    description: Access denied message.
                    type: string
                    maxLength: 1024
                  adminSessionsMessage:
                    description: All sessions navigation.
                    type: string
                    maxLength: 1024
                  sessionIdMessage:
                    description: Session ID.
                    type: string
                    maxLength: 1024
                  promptSessionLogoutMessage:
                    description: Logout link message.
                    type: string
                    maxLength: 1024
                  accessNotFoundPageTitle:
                    description: Access not found page title.
                    type: string
                    maxLength: 1024
                  accessNotFoundRejectMessage:
                    description: >-
                      Access not found page reject message. May include basic
                      formatting HTML tags.
                    type: string
                    maxLength: 1024
                  sessionExpiredMessage:
                    description: Session expired message.
                    type: string
                    maxLength: 1024
                  acldeniedPageTitle:
                    description: ACL denied page title.
                    type: string
                    maxLength: 1024
                  acldeniedRejectMessage:
                    description: ACL denied page reject message.
                    type: string
                    maxLength: 1024
                  acldeniedGoBackMessage:
                    description: ACL denied page return link message.
                    type: string
                    maxLength: 1024
                  acldeniedRetryMessage:
                    description: ACL denied page retry link message.
                    type: string
                    maxLength: 1024
                  image00:
                    description: image00
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image01:
                    description: image01
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image02:
                    description: image02
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image03:
                    description: image03
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image04:
                    description: image04
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image05:
                    description: image05
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image06:
                    description: image06
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image07:
                    description: image07
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image08:
                    description: image08
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image09:
                    description: image09
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
      required:
        - itemType
      additionalProperties: false
    ItemEndingRedirect:
      title: Ending Redirect AP Item
      description: Ending Redirect AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - redirect
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        url:
          description: Redirection URL.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        closeSession:
          description: Set to true to close a session.
          type: boolean
          default: false
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - itemType
      additionalProperties: false
    ItemEndingReject:
      title: Ending Reject AP Item
      description: Ending Reject AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - reject
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        customization:
          description: Logout customization group.
          title: Logout Customization group
          type: array
          items:
            description: Customized strings for each language.
            type: object
            required:
              - language
              - strings
            properties:
              language:
                description: >-
                  Language of customized strings. ISO 639-1 language codes
                  should be used.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              strings:
                type: object
                description: >-
                  Customizable strings and settings for Logout page in Access
                  user interface.
                properties:
                  successTitle:
                    description: Success title.
                    type: string
                    maxLength: 1024
                  successMessage:
                    description: Success message.
                    type: string
                    maxLength: 1024
                  thankMessage:
                    description: Thank you message.
                    type: string
                    maxLength: 1024
                  errorTitle:
                    description: Error title.
                    type: string
                    maxLength: 1024
                  accessDeniedRequirementsNotMetMessage:
                    description: Access denied message.
                    type: string
                    maxLength: 1024
                  adminSessionsMessage:
                    description: All sessions navigation.
                    type: string
                    maxLength: 1024
                  sessionIdMessage:
                    description: Session ID.
                    type: string
                    maxLength: 1024
                  promptSessionLogoutMessage:
                    description: Logout link message.
                    type: string
                    maxLength: 1024
                  accessNotFoundPageTitle:
                    description: Access not found page title.
                    type: string
                    maxLength: 1024
                  accessNotFoundRejectMessage:
                    description: >-
                      Access not found page reject message. May include basic
                      formatting HTML tags.
                    type: string
                    maxLength: 1024
                  sessionExpiredMessage:
                    description: Session expired message.
                    type: string
                    maxLength: 1024
                  acldeniedPageTitle:
                    description: ACL denied page title.
                    type: string
                    maxLength: 1024
                  acldeniedRejectMessage:
                    description: ACL denied page reject message.
                    type: string
                    maxLength: 1024
                  acldeniedGoBackMessage:
                    description: ACL denied page return link message.
                    type: string
                    maxLength: 1024
                  acldeniedRetryMessage:
                    description: ACL denied page retry link message.
                    type: string
                    maxLength: 1024
                  image00:
                    description: image00
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image01:
                    description: image01
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image02:
                    description: image02
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image03:
                    description: image03
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image04:
                    description: image04
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image05:
                    description: image05
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image06:
                    description: image06
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image07:
                    description: image07
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image08:
                    description: image08
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image09:
                    description: image09
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
      required:
        - itemType
      additionalProperties: false
    ItemHttpHeaderModify:
      title: HTTP Header Modify AP Item
      description: HTTP Header Modify AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 24
          enum:
            - http-header-modify
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        headerEntries:
          description: 'HTTP header operations: modify existing headers and add new headers.'
          type: array
          items:
            type: object
            properties:
              headerName:
                description: Name of an existing or a new header.
                type: string
              headerValue:
                description: >-
                  The value on which to operate. Any per-flow or session
                  variable can be used as a header value, for example,
                  %{session.user.clientip} or %{perflow.session.id}.
                type: string
              headerDelimiter:
                description: The separator to use when appending a header.
                type: string
              headerOperation:
                description: The operation to perform on the HTTP header.
                type: string
                enum:
                  - insert
                  - append
                  - replace
                  - remove
            required:
              - headerName
              - headerOperation
            example:
              headerOperation: insert
              headerName: X-Authenticated-User
              headerValue: '%{session.logon.last.username}'
        cookieEntries:
          description: 'Cookie operations: modify existing cookies.'
          type: array
          items:
            type: object
            properties:
              cookieName:
                description: The name of the cookie to update or delete.
                type: string
              cookieValue:
                description: >-
                  The value to match when deleting a cookie, or the new value to
                  set when updating a cookie. Any per-flow or session variable
                  can be used as a cookie value.
                type: string
              cookieOperation:
                description: >-
                  The operation to perform on the cookie. If you select update,
                  and no cookie matches the name and value, HTTP Header adds the
                  specified cookie.
                type: string
                enum:
                  - update
                  - delete
            required:
              - cookieName
              - cookieOperation
            example:
              cookieOperation: update
              cookieName: SomeCookie
              cookieValue: Some value
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerRequestAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - nextItems
      additionalProperties: false
    ItemLogon:
      title: Logon Page AP Item
      description: Logon Page AP Items.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - logon
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        customization:
          description: Logon Page customization group.
          title: Logon Customization group
          type: array
          items:
            description: Customized strings for each language.
            type: object
            required:
              - language
              - strings
            properties:
              language:
                description: >-
                  Language of customized strings. ISO 639-1 language codes
                  should be used.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              strings:
                type: object
                description: >-
                  Customizable strings and settings for Logon page in Access
                  user interface.
                properties:
                  formHeader:
                    description: Form Header Text.
                    type: string
                    maxLength: 1024
                  logonField_1:
                    description: 'Logon Page Input Field #1.'
                    type: string
                    maxLength: 1024
                  selectvalues_1:
                    description: 'Input Field #1 Values.'
                    type: string
                    maxLength: 1024
                  logonField_2:
                    description: 'Logon Page Input Field #2.'
                    type: string
                    maxLength: 1024
                  selectvalues_2:
                    description: 'Input Field #2 Values.'
                    type: string
                    maxLength: 1024
                  logonField_3:
                    description: 'Logon Page Input Field #3.'
                    type: string
                    maxLength: 1024
                  selectvalues_3:
                    description: 'Input Field #3 Values.'
                    type: string
                    maxLength: 1024
                  logonField_4:
                    description: 'Logon Page Input Field #4.'
                    type: string
                    maxLength: 1024
                  selectvalues_4:
                    description: 'Input Field #4 Values.'
                    type: string
                    maxLength: 1024
                  logonField_5:
                    description: 'Logon Page Input Field #5.'
                    type: string
                    maxLength: 1024
                  selectvalues_5:
                    description: 'Input Field #5 Values.'
                    type: string
                    maxLength: 1024
                  logon:
                    description: Logon Button.
                    type: string
                    maxLength: 1024
                  pageTitle:
                    description: Custom Page Title.
                    type: string
                    maxLength: 1024
                  savePassword:
                    description: Save Password Checkbox.
                    type: string
                    maxLength: 1024
                  newPassword:
                    description: New Password Prompt.
                    type: string
                    maxLength: 1024
                  verifyPassword:
                    description: Confirm Password Prompt.
                    type: string
                    maxLength: 1024
                  passwordVerifyDontMatch:
                    description: Password and Confirmation do not Match.
                    type: string
                    maxLength: 1024
                  changePassword:
                    description: Change password.
                    type: string
                    maxLength: 1024
                  dontChangePassword:
                    description: Don't change password.
                    type: string
                    maxLength: 1024
                  http_401Response:
                    description: HTTP response message.
                    type: string
                    maxLength: 1024
                  logonOriginalUrl:
                    description: Logon Page Original URL.
                    type: string
                    maxLength: 1024
                  vmwareViewMessage:
                    description: VMWare Disclaimer message.
                    type: string
                    maxLength: 1024
                  'yes':
                    description: Yes string.
                    type: string
                    maxLength: 1024
                  'no':
                    description: No string.
                    type: string
                    maxLength: 1024
                  image00:
                    description: image00
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image01:
                    description: image01
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image02:
                    description: image02
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image03:
                    description: image03
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image04:
                    description: image04
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image05:
                    description: image05
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image06:
                    description: image06
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image07:
                    description: image07
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image08:
                    description: image08
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image09:
                    description: image09
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
        nextItems:
          minItems: 1
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
        fields:
          description: 'Logon Page fields: HTML form fields to be used in logon page.'
          type: array
          items:
            type: object
            properties:
              type:
                description: Form field type.
                enum:
                  - none
                  - text
                  - password
                  - select
                  - checkbox
                  - radio
                  - button
              postVarName:
                description: >-
                  Form field name. Specifies the variable name that is prepended
                  to the data typed in the text field. For example, the POST
                  variable 'username' sends the username input 'omaas' as the
                  POST string 'username=omaas'.
                type: string
              sessVarName:
                description: >-
                  Session variable name. Specifies the session (or subsession)
                  variable name that the server uses to store the data typed in
                  the text field. For example, the session variable username
                  stores the username input omaas as the session variable string
                  'session.logon.last.username=omaas'.
                type: string
              selectValues:
                description: >-
                  Specifies the values for a select or radio type logon page
                  input field.
                type: string
              modifiable:
                description: >-
                  Specifies whether the logon page input field is read-only, and
                  always used in the logon process as specified. You can use
                  this to add logon POST variables or session variables that you
                  want to submit from the logon page for every session that uses
                  this per-session policy.
                type: boolean
                default: true
              cleanSessVar:
                description: >-
                  To clear any value from the variable before presenting the
                  logon page to the user, set to 'true'. Defaults to 'false'.
                type: boolean
                default: false
          maxItems: 5
          default:
            - type: text
              postVarName: username
              sessVarName: username
              selectValues: ''
              modifiable: true
              cleanSessVar: false
            - type: password
              postVarName: password
              sessVarName: password
              selectValues: ''
              modifiable: true
              cleanSessVar: false
        splitUserName:
          description: >-
            In a per-session policy, set to 'true' to specify that when a
            username and domain combination is submitted (for example,
            'marketing\jsmith' or 'jsmith@marketing.example.com'), only the
            username portion (in this example, 'jsmith') is stored in the
            session variable 'session.logon.last.username'. If set to 'false',
            the entire username is stored in the variable. The default setting
            is 'false'.
          type: boolean
          default: false
      required:
        - itemType
        - customization
        - nextItems
      additionalProperties: false
    ItemMessageBox:
      title: Message Box AP Item
      description: Message Box AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - message-box
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        customization:
          description: Message Box customization group.
          title: Message Box Customization group
          type: array
          items:
            description: Customized strings for each language.
            type: object
            required:
              - language
              - strings
            properties:
              language:
                description: >-
                  Language of customized strings. ISO 639-1 language codes
                  should be used.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              strings:
                type: object
                description: >-
                  Definitions for customization strings for Message Box
                  customization group.
                properties:
                  title:
                    description: Title.
                    type: string
                    maxLength: 1024
                  message:
                    description: Description (optional).
                    type: string
                    maxLength: 1024
                  proceedMessage:
                    description: Button caption.
                    type: string
                    maxLength: 1024
                  image00:
                    description: image00
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image01:
                    description: image01
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image02:
                    description: image02
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image03:
                    description: image03
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image04:
                    description: image04
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image05:
                    description: image05
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image06:
                    description: image06
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image07:
                    description: image07
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image08:
                    description: image08
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
                  image09:
                    description: image09
                    type: string
                    maxLength: 4096
                    format: uri
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    title: Uniform Resource Identifier
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - customization
        - nextItems
      additionalProperties: false
    ItemSSOCredentialMapping:
      title: Credential Mapping AP Item
      description: >-
        The SSO Credential Mapping AP item caches the credentials in session
        variables for single sign-on (SSO) applications in the enterprise.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 24
          enum:
            - sso-credential-mapping
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        variables:
          description: >-
            Defines Variable Assignment action objects for an Access
            configuration.
          type: array
          items:
            description: Defines a single Variable Assign action.
            type: object
            properties:
              varname:
                description: Variable name.
                type: string
              expression:
                description: Tcl expression to use to obtain the value.
                type: string
              secure:
                description: Defines if the value is saved in encrypted form.
                type: boolean
                default: false
              append:
                description: >-
                  Defines if the value should be appended to existing variable
                  value.
                type: boolean
                default: false
              separator:
                description: >-
                  A string which is used to separate appended value from
                  existing variable value.
                type: string
            required:
              - varname
              - expression
            additionalProperties: false
          example:
            - varname: session.sso.token.last.username
              expression: mcget {session.logon.last.username}
            - varname: session.sso.token.last.password
              expression: mcget {session.logon.last.password}
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - nextItems
      additionalProperties: false
    ItemSaml:
      title: SAML AP Item
      description: SAML AP Item.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 16
          enum:
            - saml
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        service:
          description: >-
            The SAML SP service configuration that defines metadata required by
            an external SAML IdP to communicate with the SAML SP.
          type: object
          properties:
            name:
              description: The name of the SAML SP Service.
              type: string
            entityId:
              description: The FQDN of the SP virtual server.
              type: string
            spURI:
              description: >-
                The BIG-IP as SP hostname. This attribute is required when
                'entityId' is not a valid URL.
              type: string
              maxLength: 4096
              format: uri
              pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
            isAuthnRequestSigned:
              description: >-
                Set this property to true for SP to send signed authentication
                requests to IdP.
              type: boolean
              default: false
            wantAssertionSigned:
              description: Set this property to true if SP requires signed assertions.
              type: boolean
              default: true
            wantAssertionEncrypted:
              description: Set this property to true if SP requires encrypted assertions.
              type: boolean
              default: false
            acsBinding:
              description: >-
                The method BIG-IP as SP uses to receive assertions. Default
                value is http-post.
              enum:
                - http-post
                - http-redirect
                - http-artifact
                - soap
                - paos
              default: http-post
            relayState:
              description: >-
                An absolute path or a URI where the BIG-IP as SP redirects users
                after they are successfully authenticated.
              type: string
              default: ''
            forceAuthn:
              description: >-
                Set this property to true to force users to authenticate again
                even when they have an SSO session at the identity provider. To
                use this property, the external IdP should support a force
                authentication flag.
              type: boolean
              default: false
            allowNameIdentifierCreation:
              description: >-
                Set this property to true to allow the external IdP to create a
                new identifier to represent the principal when processing
                requests from the BIG-IP system as SP.
              type: boolean
              default: true
            nameIdFormat:
              description: >-
                The type of identifier information to use. For example, if a
                Service Provider initiates SSO by sending an AuthnRequest to the
                IdP with format
                urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress, then the
                IdP response should contain the subject identity in email
                format.
              enum:
                - federated
                - provider
                - emailAddress
                - WindowsDomainQualifiedName
                - X509SubjectName
                - unspecified
              default: unspecified
            nameIdSpNameQualifier:
              description: >-
                Specifies that the assertion subject's identifier be returned in
                the namespace of an SP other than the requester, or in the
                namespace of a SAML affiliation group of SPs. This property is
                optional and can be a session variable.
              type: string
              default: ''
            providerName:
              description: >-
                The human-readable name of the SAML SP for use by the IdP. This
                parameter is optional.
              type: string
              default: ''
            authCtxMethods:
              description: >-
                An array of authentication context classes that the BIG-IP as SP
                will request from an IdP.
              type: array
              items:
                description: values from urn:oasis:names:tc:SAML:2.0:ac:classes
                enum:
                  - InternetProtocol
                  - InternetProtocolPassword
                  - Kerberos
                  - MobileOneFactorUnregistered
                  - MobileTwoFactorUnregistered
                  - MobileOneFactorContract
                  - MobileTwoFactorContract
                  - Password
                  - PasswordProtectedTransport
                  - PreviousSession
                  - X509
                  - PGP
                  - SPKI
                  - XMLDSig
                  - Smartcard
                  - SmartcardPKI
                  - SoftwarePKI
                  - Telephony
                  - NomadTelephony
                  - PersonalTelephony
                  - AuthenticatedTelephony
                  - SecureRemotePassword
                  - TLSClient
                  - TimeSyncToken
                  - unspecified
              uniqueItems: true
              minItems: 1
            authCtxComparisonType:
              description: >-
                The comparison method that the IdP must use to compare the
                authentication context to the authentication class of the user
                session.
              enum:
                - exact
                - minimum
                - better
                - maximum
              default: exact
            signingCertificate:
              description: >-
                The name of the signing certificate file you used to upload a
                signing certificate. This property should be configured if
                isAuthnRequestSigned is set to true.
              default: ''
              type: string
              maxLength: 64000
              example: file:///some_name.key
            signingPrivateKey:
              description: >-
                The name of the signing private key file you used to upload a
                signing private key. This property should be configured if
                isAuthnRequestSigned is set to true.
              default: ''
              type: string
              maxLength: 64000
              example: file:///some_name.key
            decryptionKey:
              description: >-
                The private key that the SAML SP uses to decrypt encrypted
                assertions from the IdP. This property should be configured if
                wantAssertionEncrypted is set to true.
              default: ''
              type: string
              maxLength: 64000
              example: file:///some_name.key
            decryptionCertificate:
              description: >-
                The SAML SP certificate that the IdP uses to encrypt assertions
                send to SP. This property should be configured if
                wantAssertionEncrypted is set to true.
              default: ''
              type: string
              maxLength: 64000
              example: file:///some_name.key
            idpConnectors:
              $ref: '#/components/schemas/IdpConnectorArray'
            attributeConsumingServices:
              description: >-
                An array of objects that describes a service and the list of
                attributes to be used by the service. It is typically used with
                attributeConsumingServiceIndex in the SAML Authentication
                request used to map to an attribute-consuming service.
              type: array
              items:
                description: >-
                  Defines a service and a list of attributes to be used by the
                  service. It is typically used with
                  AttributeConsumingServiceIndex used to map to an
                  attributeConsumingService.
                type: object
                properties:
                  name:
                    description: An optional name of the attribute consuming service.
                    type: string
                  serviceName:
                    description: The attribute consuming service name.
                    type: string
                  attributes:
                    description: An array of attributeConsumingService attributes.
                    type: array
                    items:
                      type: object
                      description: An attribute consuming service object.
                      properties:
                        name:
                          description: An optional name of the attribute.
                          type: string
                        attributeName:
                          description: A unique name for the attribute.
                          type: string
                        attributeFriendlyName:
                          description: >-
                            A more human-readable form of the attribute name for
                            cases where attribute-name is complex.
                          type: string
                        attributeNameFormat:
                          description: A format of the attribute name.
                          type: string
                          enum:
                            - basic
                            - uri
                            - unspecified
                          default: unspecified
                        isRequired:
                          description: >-
                            Set this property to true if the IdP expects signed
                            authentication requests.
                          type: boolean
                          default: false
                      required:
                        - name
                        - attributeName
                        - attributeFriendlyName
                        - attributeNameFormat
                      additionalProperties: false
                    minItems: 1
                required:
                  - name
                  - serviceName
                additionalProperties: false
              minItems: 1
            authCtxClasses:
              description: >-
                An array of authentication context classes. The BIG-IP as SP
                uses this list to validate the authentication context from an
                IdP against locally configured context methods (authCtxMethods)
                using the specified comparison type (authCtxComparisonType).
                This property is required if you use a comparison type
                (authCtxComparisonType) other than the default (exact).
              type: array
              items:
                description: values from urn:oasis:names:tc:SAML:2.0:ac:classes
                enum:
                  - InternetProtocol
                  - InternetProtocolPassword
                  - Kerberos
                  - MobileOneFactorUnregistered
                  - MobileTwoFactorUnregistered
                  - MobileOneFactorContract
                  - MobileTwoFactorContract
                  - Password
                  - PasswordProtectedTransport
                  - PreviousSession
                  - X509
                  - PGP
                  - SPKI
                  - XMLDSig
                  - Smartcard
                  - SmartcardPKI
                  - SoftwarePKI
                  - Telephony
                  - NomadTelephony
                  - PersonalTelephony
                  - AuthenticatedTelephony
                  - SecureRemotePassword
                  - TLSClient
                  - TimeSyncToken
                  - unspecified
              minItems: 1
              uniqueItems: true
          required:
            - name
            - entityId
          additionalProperties: false
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - nextItems
      additionalProperties: false
    ItemVariableAssign:
      title: Variable Assign AP Item
      description: The Variable Assign AP item sets session variables.
      type: object
      properties:
        itemType:
          description: Access Policy Item type.
          type: string
          maxLength: 24
          enum:
            - variable-assign
        name:
          title: Name of Access Policy Item
          description: A string without white spaces.
          type: string
          maxLength: 255
          pattern: ^[a-zA-Z0-9@#(){}_.-]*$
        caption:
          description: A human-readable description of the policy item.
          type: string
          maxLength: 2048
        expression:
          title: Expression to choose this branch
          description: Expression to choose this branch.
          type: string
          minLength: 1
          maxLength: 255
        variables:
          description: >-
            Defines Variable Assignment action objects for an Access
            configuration.
          type: array
          items:
            description: Defines a single Variable Assign action.
            type: object
            properties:
              varname:
                description: Variable name.
                type: string
              expression:
                description: Tcl expression to use to obtain the value.
                type: string
              secure:
                description: Defines if the value is saved in encrypted form.
                type: boolean
                default: false
              append:
                description: >-
                  Defines if the value should be appended to existing variable
                  value.
                type: boolean
                default: false
              separator:
                description: >-
                  A string which is used to separate appended value from
                  existing variable value.
                type: string
            required:
              - varname
              - expression
            additionalProperties: false
          example:
            - varname: session.sso.token.last.username
              expression: mcget {session.logon.last.username}
            - varname: session.sso.token.last.password
              expression: mcget {session.logon.last.password}
        nextItems:
          title: Branches to next AP Item
          description: Branches to next AP Item
          type: array
          items:
            $ref: '#/components/schemas/PerSessionAccessPolicyItem'
          minItems: 1
      required:
        - itemType
        - nextItems
      additionalProperties: false
    Job:
      type: object
      title: Job
      description: Contains properties of the job.
      properties:
        id:
          readOnly: true
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Job ID
          description: Represents the job ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        verb:
          type: string
          enum:
            - GET
            - PUT
            - POST
            - PATCH
            - DELETE
            - OPTIONS
          readOnly: true
          example: PUT
          title: Verb
          description: Represents the action the job performs (e.g., GET, PUT, POST, etc.).
        uri:
          type: string
          readOnly: true
          example: >-
            https://example.example.com/api/0.1/systems/70e6e498-59a9-4202-a59b-25cb179e2dd6
          title: URI
          description: Properties of the URI the command is acting on.
        request:
          type: string
          readOnly: true
          title: Request Body
          description: Contains the request body of the job.
        status:
          type: string
          enum:
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
            - TIMEDOUT
          readOnly: true
          example: PENDING
          title: Status
          description: >-
            Presents the status of the job (e.g., PENDING, RUNNING, SUCCEEDED,
            FAILED, etc.).
        message:
          type: object
          readOnly: true
          title: Message
          description: Contains text that describes the error condition.
          properties:
            code:
              type: string
              title: Error code
              description: Reports an application-specific error code.
              example: abc123
            title:
              type: string
              title: Title
              description: Contains a short summary of the problem type.
            detail:
              type: string
              title: Details
              description: >-
                Contains an explanation specific to this occurrence of the
                problem.
            links:
              type: object
              title: Links
              description: Presents properties for the link.
              properties:
                about:
                  type: string
                  title: About
                  description: >-
                    Presents a link that leads to further details about this
                    particular occurrence of the problem.
                resourceLink:
                  type: string
                  title: Resource Link
                  description: Specifies a link to the top-level resource that was updated.
        creationTime:
          type: string
          format: date-time
          readOnly: true
          title: Creation Time
          description: Specifies the date and time the job was created.
        updateTime:
          type: string
          format: date-time
          readOnly: true
          title: Update Time
          description: Specifies the date and time the job last changed state.
        role:
          title: Role
          description: Describes the role (e.g., Administrator).
          type: string
          enum:
            - AGENTCONFIG
            - LICENSING
            - NOJOB
            - DECLARE
            - QKVIEW
            - CLUSTERCONFIG
            - ASEC_POLICY_COMPILER
            - UPGRADE_MANAGER
            - BIRD
            - VALIDATOR
            - REBOOT
            - LOG_ARCHIVE
            - DELETE_CORE
          default: AGENTCONFIG
          readOnly: true
        owner:
          type: string
          readOnly: true
          title: Owner
          description: >-
            The handle for the agent (user name or API key) that created the
            job.
          example: netopsuser
        authn:
          type: string
          readOnly: true
          title: AuthN
          description: >-
            The handle for the entity (username or API key) that authenticates
            the agent.
          example: local
        authz:
          type: string
          readOnly: true
          title: AuthZ
          description: >-
            Token describing how much access an agent has. The token is either
            `specific` or `global` meaning limited or full access, respectively.
          example: specific
      additionalProperties: false
    KerberosSso:
      type: object
      title: Kerberos SSO
      description: Defines schema for Kerberos SSO.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: SSO ID
          description: SSO ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        ssoType:
          type: string
          maxLength: 64
          title: SSO Type
          description: The type or method of SSO.
          enum:
            - Kerberos
        name:
          type: string
          maxLength: 192
          title: Name
          description: A unique name of the SSO object.
        usernameSource:
          type: string
          maxLength: 256
          default: session.sso.token.last.username
          title: Username Source
          description: The source for retrieving the username cached for single sign-on.
        usernameConversion:
          type: boolean
          default: false
          title: Convert Username
          description: >-
            Specifies whether to convert the PREWIN2k/UPN user name input format
            to the format you want to use for SSO. For example, convert
            domain\username or username@domain to username.
        domainSource:
          type: string
          maxLength: 256
          default: session.logon.last.domain
          title: Domain Source
          description: The source for retrieving domain.
        realm:
          type: string
          maxLength: 256
          title: Realm
          description: >-
            The realm of application servers, such as pool members or portal
            access resource hosts.
          example: BOSTON.EXAMPLE.COM
        kdc:
          type: string
          maxLength: 256
          title: IP or Hostname of KDC
          description: >-
            The IP Address or the host name of the Kerberos Key Distribution
            Center (KDC) (normally an Active Directory domain controller) for
            the server realm.
        upn:
          type: boolean
          default: false
          title: Enable UPN Suffix Support
          description: >-
            Specifies whether to enable or disable the UPN suffix support for
            Kerberos SSO when integrating into Microsoft Active Directory
            infrastructure.
        accountName:
          type: string
          maxLength: 256
          title: Active Directory Account Name
          description: The Active Directory account name configured for delegation.
        accountPassword:
          type: string
          maxLength: 256
          title: Active Directory Account Password
          description: >-
            The delegation account password specified in the accountName
            property.
        spnPattern:
          type: string
          maxLength: 256
          title: Service Principal Name Pattern
          description: >-
            Modifies how the Service Principal Name (SPN) for the servers is
            constructed.
          example: HTTP/%s@REALM
        ticketLifetime:
          type: integer
          default: 600
          minimum: 10
          maximum: 4294967295
          title: Ticket Lifetime
          description: >-
            The maximum ticket lifetime in minutes. Should not be set higher
            than the value configured for the Active Directory delegation
            account.
        sendAuthorization:
          type: string
          maxLength: 64
          title: Submit Kerberos Ticket to Application Servers
          description: Specifies when to submit the Kerberos ticket to application servers.
          default: always
          enum:
            - always
            - on-401
            - cache
        headers:
          type: array
          default: []
          title: Header Name or Value Pairs
          description: The header name-value pairs to send with the SSO method.
          items:
            type: object
            title: Header Name and Value Pair Send with SSO
            description: The header name-value pairs to send with the SSO method.
            properties:
              headerName:
                type: string
                maxLength: 256
                title: HTTP Header Name
                description: The HTTP header name.
              headerValue:
                type: string
                maxLength: 256
                title: HTTP Header Value
                description: The HTTP header value.
            additionalProperties: false
      required:
        - name
        - ssoType
        - realm
        - accountName
        - accountPassword
      additionalProperties: false
    KeyCertificate:
      type: object
      title: Key Certificate
      description: Key certificate.
      properties:
        id:
          readOnly: true
          title: Key Certificate ID
          description: Key certificate ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        keyCertificateProperties:
          type: object
          readOnly: true
          title: Key Certificate Properties
          description: Key certificate properties.
          properties:
            id:
              readOnly: true
              title: File ID
              description: File certificate properties ID.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            keyType:
              title: Key Type
              description: Key type.
              type: string
              maxLength: 64000
              enum:
                - RSA
                - ECDSA
            keyStrength:
              title: Key Strength
              description: Key strength.
              oneOf:
                - $ref: '#/components/schemas/KeySize'
                - $ref: '#/components/schemas/Curve'
              discriminator:
                propertyName: type
                mapping:
                  key-size: '#/keySize'
                  curve: '#/curve'
            x509CertificateProperties:
              type: object
              title: X.509 Certificate Properties
              description: X.509 certificate properties.
              properties:
                id:
                  readOnly: true
                  title: X.509 Certificate Properties ID
                  description: X.509 certificate properties ID.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                subject:
                  type: string
                  maxLength: 64000
                  title: Certificate Subject
                  description: Certificate subject.
                issuer:
                  type: string
                  maxLength: 64000
                  title: Certificate Issuer
                  description: Certificate issuer.
                expiration:
                  type: string
                  maxLength: 64000
                  format: date-time
                  title: Certificate Expiration
                  description: Certificate expiration.
            keyPath:
              type: string
              maxLength: 64000
              format: uri
              title: Key Path
              description: Key path.
            certificatePath:
              type: string
              maxLength: 64000
              format: uri
              title: Certificate Path
              description: Certificate path.
        keyCertificateContent:
          title: Key Certificate Content
          description: Key certificate content.
          oneOf:
            - $ref: '#/components/schemas/KeyCertificatePEMContents'
            - $ref: '#/components/schemas/KeyCertificateFileReferences'
      additionalProperties: false
    KeyCertificateFileReferences:
      type: object
      title: File References
      description: Reports the file reference associated with the key and certificate.
      properties:
        id:
          readOnly: true
          title: File References ID
          description: >-
            Reports the ID associated with the file reference representing the
            key and certificate.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        keyFile:
          type: string
          maxLength: 64000
          title: >-
            Specifies the key file in a string of no more than 64,000
            characters.
          description: Key file.
        certificateFile:
          type: string
          maxLength: 64000
          description: >-
            Specifies the certificate file in a string of no more than 64,000
            characters.
      required:
        - certificateFile
        - keyFile
      additionalProperties: false
    KeyCertificatePEMContents:
      type: object
      title: PEM Contents
      description: Reports the PEM content of the certificate.
      properties:
        id:
          readOnly: true
          title: PEM Contents ID
          description: >-
            Reports the ID representing the PEM content associated with the
            certificate.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        key:
          type: string
          maxLength: 64000
          format: privateKeyPEMContent
          title: Key PEM Content
          description: Reports the PEM content of the key.
        passphrase:
          type: string
          maxLength: 64000
          example: THIS_PASSPHRASE_IS_NOT_SECURE
          title: Key Passphrase
          description: >-
            Specifies the Passphrase used to encrypt the key in a string of no
            more than 64,000 characters.
        certificate:
          type: string
          maxLength: 64000
          format: x509CertificatePEMContent
          title: X.509 PEM Content
          description: >-
            Specifies the X.509 PEM content in a string of no more than 64,000
            characters.
      required:
        - key
        - certificate
      additionalProperties: false
    KeyCertificatePairs:
      type: array
      title: Key Certificates
      description: Array of key certificates.
      items:
        type: object
        title: Key Certificate
        description: Key certificate.
        properties:
          id:
            readOnly: true
            title: Key Certificate ID
            description: Key certificate ID.
            type: string
            format: uuid
            pattern: >-
              [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
          keyCertificateProperties:
            type: object
            readOnly: true
            title: Key Certificate Properties
            description: Key certificate properties.
            properties:
              id:
                readOnly: true
                title: File ID
                description: File certificate properties ID.
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              keyType:
                title: Key Type
                description: Key type.
                type: string
                maxLength: 64000
                enum:
                  - RSA
                  - ECDSA
              keyStrength:
                title: Key Strength
                description: Key strength.
                oneOf:
                  - $ref: '#/components/schemas/KeySize'
                  - $ref: '#/components/schemas/Curve'
                discriminator:
                  propertyName: type
                  mapping:
                    key-size: '#/keySize'
                    curve: '#/curve'
              x509CertificateProperties:
                type: object
                title: X.509 Certificate Properties
                description: X.509 certificate properties.
                properties:
                  id:
                    readOnly: true
                    title: X.509 Certificate Properties ID
                    description: X.509 certificate properties ID.
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                    example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                  subject:
                    type: string
                    maxLength: 64000
                    title: Certificate Subject
                    description: Certificate subject.
                  issuer:
                    type: string
                    maxLength: 64000
                    title: Certificate Issuer
                    description: Certificate issuer.
                  expiration:
                    type: string
                    maxLength: 64000
                    format: date-time
                    title: Certificate Expiration
                    description: Certificate expiration.
              keyPath:
                type: string
                maxLength: 64000
                format: uri
                title: Key Path
                description: Key path.
              certificatePath:
                type: string
                maxLength: 64000
                format: uri
                title: Certificate Path
                description: Certificate path.
          keyCertificateContent:
            title: Key Certificate Content
            description: Key certificate content.
            oneOf:
              - $ref: '#/components/schemas/KeyCertificatePEMContents'
              - $ref: '#/components/schemas/KeyCertificateFileReferences'
        additionalProperties: false
    KeySize:
      type: object
      title: Key Size
      description: Key size.
      properties:
        id:
          readOnly: true
          title: Key Size ID
          description: Key size ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        type:
          title: Key Type
          description: >-
            Specifies the strength type of the key associated with the
            certificate.
          type: string
          maxLength: 64000
          enum:
            - key-size
            - curve
        bitLength:
          title: Bit length.
          description: Specifies the bit length of the key associated with the certificate.
          type: string
          maxLength: 64000
          enum:
            - '2048'
            - '4096'
      additionalProperties: false
    KeyStrengthType:
      type: string
      maxLength: 64000
      enum:
        - key-size
        - curve
    KeyType:
      type: string
      maxLength: 64000
      enum:
        - RSA
        - ECDSA
    L1Ifc:
      type: object
      title: L1 Link Layer Interface
      description: L1 Link Layer Interface.
      required:
        - linkType
        - name
      properties:
        id:
          title: ID
          description: ID for L1 Link Layer Interface.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        linkType:
          type: string
          maxLength: 64
          enum:
            - Interface
          title: Link Type
          description: L1 Link type.
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: A soft reference, by name, to an interface.
          example: '1.1'
      additionalProperties: false
    L1Network:
      type: object
      title: L1 Network
      description: L1 network.
      properties:
        id:
          title: ID
          description: L1 network ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: ID
          description: L1 network name.
          example: oliviasL1Network
        vlans:
          type: array
          title: VLAN List
          description: Interface VLAN.
          items:
            title: VLAN
            description: VLAN used in the network.
            type: object
            required:
              - name
            properties:
              id:
                title: ID
                description: ID for VLAN.
                readOnly: true
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              name:
                type: string
                minLength: 1
                maxLength: 192
                title: Name
                description: Unique VLAN name.
                example: vlan100
              tag:
                title: Tag
                description: VLAN tag to be applied to tagged interfaces.
                example: 1
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              taggedInterfaces:
                type: array
                title: Tagged Interface List
                description: Tagged interfaces for VLAN.
                items:
                  type: string
                  title: Tagged Interface
                  maxLength: 64
                example:
                  - '1.2'
              untaggedInterfaces:
                type: array
                title: Untagged Interface List
                description: Untagged interfaces for VLAN.
                items:
                  type: string
                  title: Untagged Interface
                  maxLength: 64
                example:
                  - '1.1'
              mtu:
                type: integer
                format: uint16
                default: 1500
                minimum: 576
                maximum: 9198
                title: MTU
                description: Maximum transmission unit.
                example: 1500
              selfIps:
                type: array
                title: Self IP List
                description: Self IPs for the L1 VLAN.
                items:
                  title: Self IP
                  type: object
                  description: L1 Self-IP.
                  required:
                    - address
                  properties:
                    address:
                      $ref: '#/components/schemas/IpPrefix'
                      title: Address
                      description: >-
                        The IPv4 or IPv6 address used to send and receive
                        traffic as well as the network mask.
                      example: 10.1.2.3/24
                    deviceName:
                      type: string
                      maxLength: 64000
                      title: Device Name
                      description: >-
                        Specifies a device via device-name this non-floating
                        self-ip belongs to.
                      example: defaultDevice
                  additionalProperties: false
            additionalProperties: false
        l1Link:
          oneOf:
            - $ref: '#/components/schemas/L1Ifc'
          title: L1 Link
          description: >-
            Either an L1 interface (ex: 1.1), a bond object, or an advanced bond
            object.
          discriminator:
            propertyName: linkType
      required:
        - name
      additionalProperties: false
    L1SelfIp:
      type: object
      title: L1 Self-IP
      description: L1 Self-IP.
      required:
        - address
      properties:
        address:
          $ref: '#/components/schemas/IpPrefix'
          title: Address
          description: >-
            The IPv4 or IPv6 address used to send and receive traffic as well as
            the network mask.
          example: 10.1.2.3/24
        deviceName:
          type: string
          maxLength: 64000
          title: Device Name
          description: >-
            Specifies a device via device-name this non-floating self-ip belongs
            to.
          example: defaultDevice
      additionalProperties: false
    L1Vlan:
      type: object
      title: L1 VLAN
      description: L1 VLAN.
      required:
        - name
      properties:
        id:
          title: ID
          description: ID for VLAN.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: Unique VLAN name.
          example: vlan100
        tag:
          title: Tag
          description: VLAN tag to be applied to tagged interfaces.
          example: 1
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        taggedInterfaces:
          type: array
          title: Tagged Interface List
          description: Tagged interfaces for VLAN.
          items:
            type: string
            title: Tagged Interface
            maxLength: 64
          example:
            - '1.2'
        untaggedInterfaces:
          type: array
          title: Untagged Interface List
          description: Untagged interfaces for VLAN.
          items:
            type: string
            title: Untagged Interface
            maxLength: 64
          example:
            - '1.1'
        mtu:
          type: integer
          format: uint16
          default: 1500
          minimum: 576
          maximum: 9198
          title: MTU
          description: Maximum transmission unit.
          example: 1500
        selfIps:
          type: array
          title: Self IP List
          description: Self IPs for the L1 VLAN.
          items:
            title: Self IP
            type: object
            description: L1 Self-IP.
            required:
              - address
            properties:
              address:
                $ref: '#/components/schemas/IpPrefix'
                title: Address
                description: >-
                  The IPv4 or IPv6 address used to send and receive traffic as
                  well as the network mask.
                example: 10.1.2.3/24
              deviceName:
                type: string
                maxLength: 64000
                title: Device Name
                description: >-
                  Specifies a device via device-name this non-floating self-ip
                  belongs to.
                example: defaultDevice
            additionalProperties: false
      additionalProperties: false
    L2Forward:
      type: object
      title: L2 Forward
      description: L2 Forward.
      required:
        - name
      properties:
        id:
          title: ID
          description: L2 forward ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: L2 forward name.
          example: oliviasL2Forward
        l2Network:
          type: string
          maxLength: 64
          title: L2 Network
          description: A soft reference, by name, to an L2 Network object.
          example: oliviasL2Network
      additionalProperties: false
    L2Network:
      type: object
      title: L2 Network
      description: L2 Network.
      properties:
        id:
          title: ID
          description: L2 network ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: L2 network name. e.g., tunnel, bridge, ...
          example: oliviasL2Network
        idx:
          type: integer
          minimum: 0
          maximum: 2147483647
          title: Index
          description: L2 network index.
          example: 0
        vlans:
          type: array
          items:
            title: VLAN
            type: string
          default: []
          title: VLAN List
          description: L2 network VLANs.
          example:
            - vlan100
      required:
        - name
      additionalProperties: false
    L3DnsCacheNetResolver:
      type: object
      required:
        - name
        - l3ForwardType
      title: L3 DNS Cache Net Resolver
      description: DNS cache net resolver.
      properties:
        l3ForwardType:
          type: string
          maxLength: 64
          enum:
            - netResolver
          title: L3 Forward Type
          description: L3 forward type.
        id:
          readOnly: true
          title: ID
          description: ID for DNS cache net resolver.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          title: Name
          description: Name for DNS cache net resolver.
          example: f5-dns
          maxLength: 192
        description:
          type: string
          title: Description
          description: User defined description.
          example: Olivia's L3 DNS Cache Net Resolver.
          default: ''
          maxLength: 256
        answerDefaultZones:
          type: boolean
          title: Answer Default Zones
          description: >-
            Whether to answer queries for default zones: localhost, reverse
            127.0.0.1 and ::1, and AS112 zones.
          default: false
        forwardZones:
          type: array
          title: Forward Zones
          description: >-
            An array of forward-zones in FQDN format with their corresponding
            nameserver addresses and ports.
          items:
            type: object
            title: Forward Zone
            description: Forward zone.
            properties:
              forwardZone:
                title: Forward Zone
                description: A forward-zone FQDN
                type: string
                minLength: 1
                maxLength: 253
                pattern: >-
                  ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
              nameserver:
                $ref: '#/components/schemas/IpSocketAddress'
                title: Nameserver
                description: Nameserver ip:port
        msgCacheSize:
          title: Message Cache Size
          description: >-
            Number of bytes allocated for the message cache. The default value
            is 1MB.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        nameserverCacheCount:
          title: Nameserver Cache Count
          description: >-
            Maximum number of DNS nameservers to cache. The default is value
            166536.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        nameserverTtl:
          title: Nameserver TTL
          description: >-
            Time to live, in seconds, for DNS nameservers in the cache. The
            default value is 900.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        negCacheSize:
          title: Negative Cache Size
          description: >-
            Number of bytes allocated for the negative cache. The default value
            is 1MB.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        randomQueryNameCase:
          type: boolean
          title: Random Query Name Case
          description: Enables resolver to randomize the case of query names.
          default: true
        useIpv4:
          type: boolean
          title: Use IPv4
          description: Enables the resolver to issue IPv4 queries.
          default: true
        useIpv6:
          type: boolean
          title: Use IPv6
          description: Enables the resolver to issue IPv6 queries.
          default: true
        useTcp:
          type: boolean
          title: Use TCP
          description: Enables the resolver to issue TCP queries.
          default: true
        useUdp:
          type: boolean
          title: Use UDP
          description: Enables the resolver to issue UDP queries.
          default: true
      additionalProperties: false
    L3Forward:
      type: object
      title: L3 Forward
      description: L3 Forward.
      required:
        - name
      properties:
        id:
          title: ID
          description: L3 forward ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          title: Name
          minLength: 1
          maxLength: 192
          description: L3 forward name.
          example: oliviasL3Forward
        l3Network:
          type: string
          maxLength: 64
          title: L3 Network
          description: A soft reference, by name, to an L3 Network object.
          example: oliviasL3Network
        config:
          oneOf:
            - $ref: '#/components/schemas/L3RouteGateway'
            - $ref: '#/components/schemas/L3RouteInterface'
            - $ref: '#/components/schemas/L3RouteReject'
            - $ref: '#/components/schemas/L3Neighbors'
            - $ref: '#/components/schemas/L3DnsCacheNetResolver'
          title: Config
          description: An L3 forward type config.
          discriminator:
            propertyName: l3ForwardType
      additionalProperties: false
    L3Nat:
      type: object
      title: L3 NAT
      description: L3 Network Address Translation (NAT).
      required:
        - l3NetworkType
      properties:
        l3NetworkType:
          type: string
          maxLength: 64
          enum:
            - L3Nat
          title: L3 Network Type
          description: L3 network type.
        id:
          title: ID
          description: L3 NAT ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    L3Neighbors:
      type: object
      title: L3 Neighbors
      description: L3 Neighbors.
      required:
        - l3ForwardType
      properties:
        l3ForwardType:
          type: string
          maxLength: 64
          enum:
            - L3Neighbors
          title: L3 Forward Type
          description: L3 forward type.
        id:
          title: ID
          description: L3 neighbors ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        arp:
          title: ARP
          description: L3 neighbors ARP.
          type: object
          properties:
            id:
              title: ID
              description: ARP ID.
              readOnly: true
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
          additionalProperties: false
        ndp:
          title: NDP
          description: L3 neighbors NDP.
          type: object
          properties:
            id:
              title: NDP ID
              description: NDP ID.
              readOnly: true
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
          additionalProperties: false
      additionalProperties: false
    L3Network:
      type: object
      title: L3 Network
      description: L3 Network.
      properties:
        id:
          title: ID
          description: L3 network ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: >-
            L3 network name. e.g. Carrier-grade Network Address Translation
            (CGNAT), Firewallnat, etc.
          example: oliviasL3Network
        l2Networks:
          type: array
          items:
            title: L2 Networ
            type: string
          default: []
          title: L2 Network List
          description: An array of soft references, by name, to L2 networks.
          example:
            - oliviasL2Network
        config:
          oneOf:
            - $ref: '#/components/schemas/L3Nat'
          title: Config
          description: An L3 network type config.
          discriminator:
            propertyName: l3NetworkType
      required:
        - name
      additionalProperties: false
    L3RouteGateway:
      type: object
      title: L3 Route Gateway
      description: L3 Route Gateway.
      required:
        - l3ForwardType
      properties:
        l3ForwardType:
          type: string
          maxLength: 64
          enum:
            - L3RouteGateway
          title: L3 Forward Route Type
          description: L3 forward route type.
        id:
          title: ID
          description: L3 route ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        destination:
          $ref: '#/components/schemas/IpPrefix'
          title: Destination
          description: The destination IP CIDR for this route.
          example: 10.1.2.0/24
        gateway:
          $ref: '#/components/schemas/IpAddress'
          title: Gateway IP address
          description: The IPv4 or IPv6 address used as gateway address.
          example: 10.1.4.3
        interface:
          type: string
          minLength: 1
          maxLength: 192
          title: VLAN name
          description: VLAN name.
      additionalProperties: false
    L3RouteInterface:
      type: object
      title: L3 Route Interface
      description: L3 Route Interface.
      required:
        - l3ForwardType
      properties:
        l3ForwardType:
          type: string
          maxLength: 64
          enum:
            - L3RouteInterface
          title: L3 Forward Route Type
          description: L3 forward route type.
        id:
          title: ID
          description: L3 route ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        destination:
          $ref: '#/components/schemas/IpPrefix'
          title: Destination
          description: The destination IP CIDR for this route.
          example: 10.1.2.0/24
        interface:
          type: string
          minLength: 1
          maxLength: 192
          title: VLAN name
          description: VLAN name.
      additionalProperties: false
    L3RouteReject:
      type: object
      title: L3 Route Reject
      description: L3 Route Reject.
      required:
        - l3ForwardType
      properties:
        l3ForwardType:
          type: string
          maxLength: 64
          enum:
            - L3RouteReject
          title: L3 Forward Route Type
          description: L3 forward route type.
        id:
          title: ID
          description: L3 route ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        destination:
          $ref: '#/components/schemas/IpPrefix'
          title: Destination
          description: The destination IP CIDR for this route.
          example: 10.1.2.0/24
      additionalProperties: false
    L4BasicEndpoint:
      type: object
      title: L4 Basic Endpoint
      description: L4 Basic Endpoint.
      required:
        - endpointType
        - address
      properties:
        endpointType:
          type: string
          maxLength: 64
          enum:
            - L4BasicEndpoint
          title: Endpoint Type
          description: L4 basic endpoint type.
        id:
          title: ID
          description: Endpoint ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        description:
          type: string
          maxLength: 256
          title: Description
          description: Endpoint description.
          example: Olivia's L4 Basic Endpoint for TCP
        address:
          $ref: '#/components/schemas/IpSocketAddress'
          title: Address
          description: Endpoint address.
          example: 10.0.0.1:443
        ratio:
          type: integer
          default: 1
          title: Ratio
          description: >-
            Ratio for load balancing with ratio load balancing methods. The
            minimum is 1 with a maximum of 65535.
          example: 2
          minimum: 1
          maximum: 65535
        weight:
          type: integer
          default: 1
          title: Weight
          description: >-
            Weight for load balancing with weight-based load balancing methods.
            The minimum is 1 with a maximum of 65535.
          example: 2
          minimum: 1
          maximum: 65535
        priority:
          type: integer
          default: 0
          title: Priority
          description: Specifies the priority group within the L4 endpoints.
          example: 2
          minimum: 0
          maximum: 65535
      additionalProperties: false
    L4Clientside:
      type: object
      title: L4 Clientside
      description: L4 Clientside.
      properties:
        id:
          title: ID
          description: L4 clientside ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: L4 clientside name. e.g., tcp-clientside, udp-clientside ...
          example: oliviasL4ClientSide
        destinations:
          type: array
          title: Destination List
          description: Destination addresses.
          example:
            - 10.0.1.10
            - 10.0.1.11
          items:
            title: Destination
            $ref: '#/components/schemas/IpRange'
        ports:
          type: array
          title: Port List
          description: Destination ports.
          example:
            - '80'
          items:
            title: Port
            description: port numbers used by souce translation addresses
            type: string
            maxLength: 11
            pattern: >-
              ^([0-9]{1,4}|6[0-4][0-9]{3}|654[0-9][0-9]|655[0-2][0-9]|6553[0-5])(-([0-9]{1,4}|6[0-4][0-9]{3}|654[0-9][0-9]|655[0-2][0-9]|6553[0-5]))?$
        l3Networks:
          type: array
          title: L3 Network List
          description: An array of soft references, by name, to L3 networks.
          example:
            - oliviasL3Network
          items:
            title: L3 Network
            description: Soft reference to L3 network.
            type: string
            maxLength: 192
      required:
        - name
      additionalProperties: false
    L4Endpoint:
      oneOf:
        - $ref: '#/components/schemas/L4BasicEndpoint'
      discriminator:
        propertyName: endpointType
    L4Serverside:
      type: object
      title: L4 Serverside
      description: L4 Serverside.
      properties:
        id:
          title: ID
          description: L4 serverside ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: L4 serverside name. e.g., tcp-serverside, udp-serverside ...
          example: oliviasL4Serverside
        l3Networks:
          type: array
          title: L3 Network List
          description: An array of soft references, by name, to L3 networks.
          example:
            - oliviasL3Network
          items:
            type: string
            title: L3 Network
            description: Soft references to L3 network.
            maxLength: 64
        endpoints:
          type: array
          default: []
          title: Endpoints List
          description: L4 serverside endpoints.
          example:
            - 192.168.10.1:80
            - 192.168.10.2:80
          items:
            title: L4 Endpoint
            $ref: '#/components/schemas/L4Endpoint'
        snat:
          oneOf:
            - $ref: '#/components/schemas/L4SnatNone'
            - $ref: '#/components/schemas/L4SnatAutomap'
            - $ref: '#/components/schemas/L4SnatPool'
          description: >-
            A SNAT configuration specifying a valid snatType (AUTOMAP, NONE,
            POOL) and additional fields as required.
          title: SNAT Configuration
          example: >-
            snat: { "snatType": "POOL", "addresses": ["10.10.0.1", "10.10.0.3"]
            }
          discriminator:
            propertyName: snatType
      required:
        - name
      additionalProperties: false
    L4SnatAutomap:
      type: object
      title: L4 SNAT Automap
      description: SNAT automap.
      required:
        - snatType
      properties:
        snatType:
          type: string
          title: SNAT Type
          maxLength: 8
          enum:
            - AUTOMAP
          description: SNAT automap type.
        id:
          title: ID
          description: SNAT ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    L4SnatNone:
      type: object
      title: SNAT None
      description: SNAT none.
      required:
        - snatType
      properties:
        snatType:
          type: string
          title: SNAT Type
          maxLength: 8
          enum:
            - NONE
          description: SNAT none type.
        id:
          title: ID
          description: SNAT ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    L4SnatPool:
      type: object
      title: SNAT Pool
      description: SNAT pool.
      required:
        - snatType
      properties:
        snatType:
          type: string
          title: SNAT Type
          maxLength: 8
          description: SNAT type for pool configuration.
          enum:
            - POOL
        id:
          title: ID
          description: SNAT ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        connectionLimit:
          title: Connection Limit
          description: >-
            Specifies the number of connections a translation address must reach
            before it no longer initiates a connection. The default value of 0
            disables this option.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        tcpIdleTimeout:
          title: TCP Idle Timeout Value
          description: >-
            Specifies, in seconds, the time that TCP connections initiated using
            a SNAT address are allowed to remain idle before being automatically
            disconnected. Default 4294967295 prevents the connection from timing
            out.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        udpIdleTimeout:
          title: UDP Idle Timeout Value
          description: >-
            Specifies, in seconds, the time that UDP connections remain idle
            before being automatically disconnected. Default 4294967295 prevents
            the connection from timing out.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        ipIdleTimeout:
          title: IP Idle Timeout Value
          description: >-
            Specifies, in seconds, the time that connections to an IP address
            remain idle before being automatically disconnected. Default
            4294967295 prevents the connection from timing out.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        enableArp:
          type: boolean
          title: Enable ARP
          default: true
          description: Configuration setting for responding to ARP requests.
        addresses:
          type: array
          title: Addresses
          description: A list of SNAT translation addresses.
          items:
            $ref: '#/components/schemas/IpAddress'
      additionalProperties: false
    Languages:
      description: Language codes defined by ISO 639-1.
      type: string
      enum:
        - en
        - de
        - es
        - it
        - fr
        - ko
        - ja
        - zh-cn
        - zh-tw
    License:
      type: object
      title: Licensing
      description: Reports the signed acknowledgement for the corresponding license.
      properties:
        id:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Control Plane ID
          description: Reports the Control Plane ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        clusterUuid:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: License ID
          description: Reports the license ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        fullLicense:
          type: string
          maxLength: 64000
          example: Signed ACK of license file content.
          title: Full License File
          description: Reports the signed ACK for the complete content of the license file.
      additionalProperties: false
    LicenseActivate:
      type: object
      title: License Activate
      description: License activate definition.
      required:
        - JWT
      properties:
        JWT:
          type: string
          title: JWT
          description: This is JWT for license activation.
          example: >-
            eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6InYxIiwiamt1IjoiaHR0cHM6Ly9wcm9kdWN0LXRzdC5hcGlzLmY1bmV0d29ya3MubmV0L2VlL3YxL2tleXMvandrcyJ9.eyJzdWIiOiJUU1QtOThmMmIwYjAtOTI0Mi00MDU3LTkyZDYtNzY5MmNlY2RiNjU2IiwiaWF0IjoxNjM2NDA5NzE2LCJpc3MiOiJGNSBJbmMuIiwiYXVkIjoidXJuOmY1OnRlZW0iLCJqdGkiOiI1YTU1NDY0MC00MGUxLTExZWMtYjZjNy1mMWUxZDE3N2I5NTkiLCJmNV9vcmRlcl90eXBlIjoicGFpZCJ9.wM8JeaUhlHoJ6U3dAJMSXWYFLD8XzCCMu31E1nTJakuHXkeQYVtetzupIV8VLcR8ktkexBfCDdyOANRuWf1CdO2gDssoA2BARtHoPPI56Dz0zHsf3tOYH9JYHv8rm-mkW8cq-AA80eMMRZ5_YFkBCt-un0tupSSGkOtDkDgdvpOFRk53T4FRy8UQIy3nxAgDgmJJ4rPJwbzrTVz-T78uBpfemFuM7Kj902magjSDU4fu7FafcJQBLV9QpGAyN-gu7qfZYa4V986-Gt3xdHrVQUPU8_b0TkKSFV4hCVb-UrWbOginqV4ySBflf5lsZLasVZddijim_3lt6g_mUS6wZ2eYRfybIdYyrvquVlV3gUn8_ZbQU_81xnsjqBWzj0ludUOnNLk3m7fHxXta6PJNZ9PripEs39l9QBx0NaNCG7ZJcGEDoXaIdmVrGI_EG5hIrTZVP0bEVh1slwGLUuI3HSqkd805vrDP3St2AJ3dkA5JH0G6Hs2X5zn30vxy7wznNjYlU39aBcxYEPGr-c_p5-oZg0kJDeEfxc_y-DHQ_emU4CP9TXNAr62tAGKMiU8Snw2rdLto-IEyJetuwBC9NT6y_EU0P9hCEW7JEzI9rlVcwGx0XtjtEbhCH34gHARulfSTtVPS0LrDr_mZQHSX2VJri7iU5AL-EI75EpzhcyY
          maxLength: 64000
          minLength: 1
        mode:
          type: string
          title: Activation Mode
          description: >-
            Specifies the mode used for licensing. If not specified, default
            mode is CONNECTED.
          example: DISCONNECTED
          maxLength: 12
          enum:
            - CONNECTED
            - DISCONNECTED
      additionalProperties: false
    LicenseSignedAck:
      type: object
      title: License SignedAck
      description: License activate definition.
      required:
        - signedAck
      properties:
        signedAck:
          type: string
          title: SignedAck
          description: License SignedAck obtained from TS Portal by submitting ConfigReport
          minLength: 1
          maxLength: 64000
      additionalProperties: false
    LinksDefinition:
      title: FAST Links Definition
      type: object
      description: An object containing link references.
      properties:
        self:
          type: string
          title: Self-link
          description: Self-link to endpoint
          example: /mgmt/shared/fast/applications
          maxLength: 64000
        task:
          title: Self Task-Link
          type: string
          description: Self-link to task endpoint
          example: /mgmt/shared/fast/tasks/12345
          maxLength: 64000
      additionalProperties: false
    LoadBalancingMode:
      type: string
      maxLength: 64000
      enum:
        - round-robin
        - least-connections
        - predictive
        - weighted-round-robin
        - ratio-least-connections
        - ratio-session
        - fastest
      default: round-robin
      description: |
        The load balancing method.
         * `round-robin` - Round Robin method passes each new connection request to the next endpoint in line, eventually distributing connections evenly across the array of endpoints being load balanced.
         * `least-connections` - Least Connections method passes a new connection to the endpoint having the least number of active connections.
         * `predictive` - Predictive method uses the ranking method used by the Observed method, where endpoints are rated according to the number of current connections. However, with the Predictive method, the system analyzes the trend of the ranking over time, determining whether an endpoint's performance is currently improving or declining. The endpoints with performance rankings that are currently improving, rather than declining, receive a higher proportion of the connections.
         * `weighted-round-robin` - Weighted Round Robin method distributes connections over endpoints in a static rotation according to ratio weights.
         * `ratio-least-connections` - Ratio Least Connections method causes the system to select the endpoint according to the ratio of the number of connections that each endpoint has active.
         * `ratio-session` - Ratio Session method selects the endpoint according to a ratio of the number of entries in the persistence table.
         * `fastest` - Fastest method selects an endpoint based on the least number of current sessions.
    MacAddress:
      type: string
      maxLength: 17
      pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$
      description: An IEEE 802 MAC address
      title: MAC Address
    Manifest:
      title: System Manifest
      description: >-
        The manifest file contains information about the running instance of the
        product.
      type: object
      properties:
        product:
          type: object
          title: Product
          description: Reports the version information about the overall product.
          properties:
            name:
              type: string
              maxLength: 192
              title: Name
              description: Specifies the name of the software release.
            version:
              type: string
              maxLength: 64000
              title: Version
              description: Specifies the software version.
            buildDateTime:
              type: string
              maxLength: 64000
              title: Build Date Time
              description: >-
                Specifies the date and time of the software build running on the
                device.
      additionalProperties: false
    MetricsCpu:
      description: Reports CPU metrics.
      type: object
      title: CPU Metrics
      properties:
        cpuId:
          type: integer
          title: CPU ID
          description: CPU ID.
          minimum: 0
          maximum: 4096
        user:
          title: Un-niced User Processes
          description: >-
            Reports the percentage of time used to run un-niced user processes
            (i.e., user processes with a nice value of 0 (zero)).
          type: number
          minimum: 0
          maximum: 100
          default: 0
        nice:
          title: Niced User Processes
          description: >-
            Reports the percentage of time used to run niced user processes
            (i.e., user processes with a nice value not equal to 0 (zero)).
          type: number
          minimum: 0
          maximum: 100
          default: 0
        system:
          title: System
          description: Reports the amount of time used for running kernel processes.
          type: number
          minimum: 0
          maximum: 100
          default: 0
        idle:
          title: Idle
          description: Reports idle CPU time (i.e., time spent in the kernel idle handler).
          type: number
          minimum: 0
          maximum: 100
          default: 0
        ioWait:
          title: CPU IO Wait
          description: Reports the time spent waiting for I/O completion.
          type: number
          minimum: 0
          maximum: 100
          default: 0
        stolen:
          title: Steal Time
          description: >-
            Reports the CPU Steal Time (i.e., the percentage of time a virtual
            CPU waits for a real CPU while the hypervisor is servicing another
            virtual process).
          type: number
          minimum: 0
          maximum: 100
          default: 0
        softIrq:
          title: SoftIRQ
          description: Reports the time spent servicing software interrupts.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        irq:
          title: IRQ
          description: Reports the time spent servicing hardware interrupts.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
      additionalProperties: false
    MetricsDisk:
      title: Disk usage statistics
      description: Reports disk usage statistics.
      type: object
      properties:
        name:
          type: string
          title: Device name
          description: Reports device name associated with the disk.
          maxLength: 192
          example: vda1
        ioCount:
          title: Disk IO in progress
          description: Reports I/O in progress.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        readCount:
          title: Total successful reads
          description: Reports the number of total reads completed successfully.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        readBlocks:
          title: Blocks received
          description: Reports the number of blocks received from a block device.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        writeCount:
          title: Total successful writes
          description: Reports the number of total writes completed successfully.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        writeBlocks:
          title: Blocks sent
          description: Reports the number of blocks sent to a block device.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        readBytes:
          title: Bytes received
          description: Reports the number of bytes received from a block device.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        writeBytes:
          title: Bytes sent
          description: Reports the number of bytes sent to a block device.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
      additionalProperties: false
    MetricsFilesystem:
      type: object
      title: File System Usage Data
      description: File system usage data.
      properties:
        fileSystem:
          type: string
          maxLength: 4096
          example: /dev/sda1
          title: File System
          description: File system name.
        size:
          example: 32458
          title: Size
          description: File system storage capacity, in MB.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        used:
          example: 14573
          title: Storage Used
          description: The portion of storage capacity that is currently in use, in MB.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        available:
          example: 17885
          title: Storage Available
          description: The portion of storage capacity that is currently available, in MB.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        mountedOn:
          type: string
          maxLength: 4096
          example: /usr/dev/tmp
          title: Mounted On
          description: Mount point of the File System.
      additionalProperties: false
    MetricsInterface:
      description: Reports network interface metrics.
      title: Network Interface Metrics
      type: object
      properties:
        name:
          type: string
          maxLength: 192
          title: Interface Name
          description: Reports the interface name (e.g., mgmt, 1.1, 1.2, etc.).
          example: mgmt
        resets:
          title: Reset Connections
          description: Initiates a reset of the connection counter for all statistics.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        counters:
          type: object
          title: Counters
          description: Counters.
          properties:
            collisions:
              title: Collisions
              description: Reports the number of collisions that have occurred.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            bytesIn:
              title: Bytes In
              description: Reports the number of bytes received.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            bytesOut:
              title: Bytes Out
              description: Reports the number of bytes sent.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            packetsIn:
              title: Packets In
              description: Reports the number of packets received.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            packetsOut:
              title: Packets Out
              description: Reports the number of packets sent.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            errorsIn:
              title: Errors In
              description: Reports the number of errors received.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            errorsOut:
              title: Errors Out
              description: Reports the number of errors reported out.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            dropsIn:
              title: Drops In
              description: Reports the number of dropped connections received.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            dropsOut:
              title: Drops Out
              description: Reports the number of dropped connections reported out.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            multicastIn:
              title: Multicast In
              description: Reports the number of multicast packets received.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            multicastOut:
              title: Multicast Out
              description: Reports the number of multicast packets sent.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
      additionalProperties: false
    MetricsSystem:
      description: Presents CPU, memory, and disk system data.
      type: object
      title: System level metrics
      properties:
        time:
          type: string
          maxLength: 192
          example: '2017-07-21 17:32:28+00:00'
          title: Statistics Collection Time
          description: >-
            The date and time, in UTC format, of the most-recently collected
            statistics.
        systemName:
          type: string
          maxLength: 192
          title: System Name
          description: Specifies the name of the system.
          example: Default System
        systemId:
          title: System ID
          description: Specifies the ID of the system.
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        cpu:
          type: array
          default: []
          title: CPU Metrics Per Core
          description: Reports CPU metrics per core.
          items:
            description: Reports CPU metrics.
            type: object
            title: CPU Metrics
            properties:
              cpuId:
                type: integer
                title: CPU ID
                description: CPU ID.
                minimum: 0
                maximum: 4096
              user:
                title: Un-niced User Processes
                description: >-
                  Reports the percentage of time used to run un-niced user
                  processes (i.e., user processes with a nice value of 0
                  (zero)).
                type: number
                minimum: 0
                maximum: 100
                default: 0
              nice:
                title: Niced User Processes
                description: >-
                  Reports the percentage of time used to run niced user
                  processes (i.e., user processes with a nice value not equal to
                  0 (zero)).
                type: number
                minimum: 0
                maximum: 100
                default: 0
              system:
                title: System
                description: Reports the amount of time used for running kernel processes.
                type: number
                minimum: 0
                maximum: 100
                default: 0
              idle:
                title: Idle
                description: >-
                  Reports idle CPU time (i.e., time spent in the kernel idle
                  handler).
                type: number
                minimum: 0
                maximum: 100
                default: 0
              ioWait:
                title: CPU IO Wait
                description: Reports the time spent waiting for I/O completion.
                type: number
                minimum: 0
                maximum: 100
                default: 0
              stolen:
                title: Steal Time
                description: >-
                  Reports the CPU Steal Time (i.e., the percentage of time a
                  virtual CPU waits for a real CPU while the hypervisor is
                  servicing another virtual process).
                type: number
                minimum: 0
                maximum: 100
                default: 0
              softIrq:
                title: SoftIRQ
                description: Reports the time spent servicing software interrupts.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              irq:
                title: IRQ
                description: Reports the time spent servicing hardware interrupts.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
            additionalProperties: false
        ram:
          type: object
          title: RAM Usage
          description: Reports RAM usage metrics.
          properties:
            total:
              title: Total
              description: Reports total memory in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            free:
              title: Free
              description: Reports total free memory in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            used:
              title: Total Used Memory
              description: Total amount of used memory, in KB.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            percentUsed:
              example: 58.64
              title: Percentage of Memory Used
              description: Percentage of used memory.
              type: number
              minimum: 0
              maximum: 100
              default: 0
            shared:
              title: Shared
              description: Reports total shared memory in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            buffer:
              title: Buffer
              description: Reports total buffer memory in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            cache:
              title: Cache
              description: Reports total cache memory in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
        swap:
          type: object
          title: Swap Usage
          description: Reports swap usage metrics.
          properties:
            total:
              title: Total
              description: Reports the total swap in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            free:
              title: Free
              description: Reports the total free swap in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            shared:
              title: Shared
              description: Reports the total shared swap in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            buffer:
              title: Buffer
              description: Reports the total buffer swap in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            cache:
              title: Cache
              description: Reports the total cache swap in bytes.
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            pagesIn:
              title: Pages Swapped-in
              description: Reports the amount of memory swapped in from the disk (/s).
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
            pagesOut:
              title: Pages Swapped-out
              description: Reports the amount of memory swapped to disk (/s).
              type: integer
              format: uint64
              minimum: 0
              maximum: 18446744073709552000
        disk:
          type: array
          default: []
          title: Disk usage
          description: >-
            Reports disk usage statistics. collected with
            linuxproc.ReadDiskStats.
          items:
            title: Disk usage statistics
            description: Reports disk usage statistics.
            type: object
            properties:
              name:
                type: string
                title: Device name
                description: Reports device name associated with the disk.
                maxLength: 192
                example: vda1
              ioCount:
                title: Disk IO in progress
                description: Reports I/O in progress.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              readCount:
                title: Total successful reads
                description: Reports the number of total reads completed successfully.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              readBlocks:
                title: Blocks received
                description: Reports the number of blocks received from a block device.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              writeCount:
                title: Total successful writes
                description: Reports the number of total writes completed successfully.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              writeBlocks:
                title: Blocks sent
                description: Reports the number of blocks sent to a block device.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              readBytes:
                title: Bytes received
                description: Reports the number of bytes received from a block device.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              writeBytes:
                title: Bytes sent
                description: Reports the number of bytes sent to a block device.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
            additionalProperties: false
        fileSystems:
          type: array
          readOnly: true
          default: []
          title: Filesystem
          description: >-
            Presents disk usage per filesystem, as collected by the 'df -m'
            monitoring tool.
          items:
            type: object
            title: File System Usage Data
            description: File system usage data.
            properties:
              fileSystem:
                type: string
                maxLength: 4096
                example: /dev/sda1
                title: File System
                description: File system name.
              size:
                example: 32458
                title: Size
                description: File system storage capacity, in MB.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              used:
                example: 14573
                title: Storage Used
                description: >-
                  The portion of storage capacity that is currently in use, in
                  MB.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              available:
                example: 17885
                title: Storage Available
                description: >-
                  The portion of storage capacity that is currently available,
                  in MB.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              mountedOn:
                type: string
                maxLength: 4096
                example: /usr/dev/tmp
                title: Mounted On
                description: Mount point of the File System.
            additionalProperties: false
        interrupts:
          title: Interrupts
          description: Reports the number of interrupts per second, including the clock.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        contextSwitches:
          title: Context Switches
          description: Reports the number of context switches per second.
          type: integer
          format: uint64
          minimum: 0
          maximum: 18446744073709552000
        interfaces:
          type: array
          default: []
          title: Interfaces
          description: Reports per-interface network metrics.
          items:
            description: Reports network interface metrics.
            title: Network Interface Metrics
            type: object
            properties:
              name:
                type: string
                maxLength: 192
                title: Interface Name
                description: Reports the interface name (e.g., mgmt, 1.1, 1.2, etc.).
                example: mgmt
              resets:
                title: Reset Connections
                description: >-
                  Initiates a reset of the connection counter for all
                  statistics.
                type: integer
                format: uint64
                minimum: 0
                maximum: 18446744073709552000
              counters:
                type: object
                title: Counters
                description: Counters.
                properties:
                  collisions:
                    title: Collisions
                    description: Reports the number of collisions that have occurred.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  bytesIn:
                    title: Bytes In
                    description: Reports the number of bytes received.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  bytesOut:
                    title: Bytes Out
                    description: Reports the number of bytes sent.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  packetsIn:
                    title: Packets In
                    description: Reports the number of packets received.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  packetsOut:
                    title: Packets Out
                    description: Reports the number of packets sent.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  errorsIn:
                    title: Errors In
                    description: Reports the number of errors received.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  errorsOut:
                    title: Errors Out
                    description: Reports the number of errors reported out.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  dropsIn:
                    title: Drops In
                    description: Reports the number of dropped connections received.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  dropsOut:
                    title: Drops Out
                    description: Reports the number of dropped connections reported out.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  multicastIn:
                    title: Multicast In
                    description: Reports the number of multicast packets received.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
                  multicastOut:
                    title: Multicast Out
                    description: Reports the number of multicast packets sent.
                    type: integer
                    format: uint64
                    minimum: 0
                    maximum: 18446744073709552000
            additionalProperties: false
      additionalProperties: false
    MirroringMode:
      type: string
      maxLength: 64000
      enum:
        - connection
        - packet
      default: connection
      description: |
        The mirroring mode for L4 proxy.
         * `connection` - State synchronization between devices in HA setup.
         * `packet` - Every packet processed by client and server connections are mirrored.
    MonitorHttp:
      type: object
      title: HTTP Monitor
      nullable: true
      description: Monitor HTTP.
      properties:
        id:
          title: Monitor ID
          description: ID for the object.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        sendString:
          title: Send String
          description: Text string to send to the target.
          type: string
          maxLength: 64000
          default: GET / HTTP/1.1
        receiveString:
          title: Receive String
          description: The regular expression, when matched, indicated the target is up.
          type: string
          maxLength: 64000
          default: .*
        receiveDisableString:
          title: Receive Disable String
          description: The regular expression, when matched, disables the target.
          type: string
          maxLength: 64000
          default: ''
        interval:
          title: Interval
          description: Specifies, in seconds, the monitor check frequency.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        timeout:
          title: Timeout
          description: Specifies, in seconds, the time in which the target must respond.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        username:
          title: User Name
          description: The username for HTTP authentication.
          type: string
          maxLength: 64000
          default: ''
        password:
          title: Password
          description: The password for HTTP authentication.
          type: string
          maxLength: 64000
          default: ''
          writeOnly: true
      additionalProperties: false
    MonitorHttp2:
      type: object
      title: HTTP2 Monitor
      nullable: true
      description: Monitor HTTP2.
      properties:
        id:
          title: Monitor ID
          description: ID for the object.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        sendString:
          title: Send String
          description: Text string to send to the target.
          type: string
          maxLength: 64000
          default: GET / HTTP/1.1
        receiveString:
          title: Receive String
          description: The regular expression, when matched, indicated the target is up.
          type: string
          maxLength: 64000
          default: .*
        receiveDisableString:
          title: Receive Disable String
          description: The regular expression, when matched, disables the target.
          type: string
          maxLength: 64000
          default: ''
        interval:
          title: Interval
          description: Specifies, in seconds, the monitor check frequency.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        timeout:
          title: Timeout
          description: Specifies, in seconds, the time in which the target must respond.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        username:
          title: User Name
          description: The username for HTTP authentication.
          type: string
          maxLength: 64000
          default: ''
        password:
          title: Password
          description: The password for HTTP authentication.
          type: string
          maxLength: 64000
          default: ''
          writeOnly: true
      additionalProperties: false
    MonitorHttps:
      type: object
      title: HTTPS Monitor
      nullable: true
      description: Monitor HTTPS.
      properties:
        id:
          title: Monitor ID
          description: ID for the object.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        sendString:
          title: Send String
          description: Text string to send to the target.
          type: string
          maxLength: 64000
          default: GET / HTTP/1.1
        receiveString:
          title: Receive String
          description: The regular expression, when matched, indicated the target is up.
          type: string
          maxLength: 64000
          default: .*
        receiveDisableString:
          title: Receive Disable String
          description: The regular expression, when matched, disables the target.
          type: string
          maxLength: 64000
          default: ''
        interval:
          title: Interval
          description: Specifies, in seconds, the monitor check frequency.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        timeout:
          title: Timeout
          description: Specifies, in seconds, the time in which the target must respond.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        username:
          title: User Name
          description: The username for HTTP authentication.
          type: string
          maxLength: 64000
          default: ''
        password:
          title: Password
          description: The password for HTTP authentication.
          type: string
          maxLength: 64000
          default: ''
          writeOnly: true
      additionalProperties: false
    MonitorIcmp:
      type: object
      nullable: true
      title: ICMP Monitor
      description: Monitor ICMP.
      properties:
        id:
          title: Monitor ID
          description: ID for the object.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        interval:
          title: Interval
          description: Specifies, in seconds, the monitor check frequency.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        timeout:
          title: Timeout
          description: Specifies, in seconds, the time in which the target must respond.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
      additionalProperties: false
    MonitorInband:
      type: object
      title: Inband Monitor
      nullable: true
      description: Monitor Inband.
      properties:
        failures:
          title: Failures
          description: The number of failed attempts before marking a pool member down.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        failureInterval:
          title: Failure Interval
          description: The interval, in seconds, in which failures are counted.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        responseTime:
          title: Response Time
          description: >-
            The interval, in seconds, in which a pool member must respond with
            data.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        retryTime:
          title: Retry Time
          description: >-
            The wait time, in seconds, before retrying whether a pool member is
            up.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
      additionalProperties: false
    MonitorTcp:
      type: object
      nullable: true
      title: TCP Monitor
      description: Monitor TCP.
      properties:
        id:
          title: Monitor ID
          description: ID for the object.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        interval:
          title: Interval
          description: Specifies, in seconds, the monitor check frequency.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        timeout:
          title: Timeout
          description: Specifies, in seconds, the time in which the target must respond.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        sendString:
          title: Send String
          description: Text string to send to the target.
          type: string
          maxLength: 64000
          default: ''
        receiveString:
          title: Receive String
          description: The regular expression, when matched, indicated the target is up.
          type: string
          maxLength: 64000
          default: .*
        receiveDisableString:
          title: Receive Disable String
          description: The regular expression, when matched, disables the target.
          type: string
          maxLength: 64000
          default: ''
      additionalProperties: false
    Ndp:
      type: object
      title: NDP
      description: NDP.
      properties:
        id:
          title: NDP ID
          description: NDP ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      additionalProperties: false
    NonEmptyName:
      type: string
      maxLength: 192
      pattern: ^[^ ](.*[^ ])?$
    ObjectDefinition:
      title: FAST Object Definition
      type: object
      description: A generic definition for an object.
    OnOff:
      type: string
      enum:
        - true
        - false
    OneConnectDefault:
      type: object
      title: OneConnect Default
      nullable: true
      description: OneConnect default.
      properties:
        id:
          readOnly: true
          title: OneConnect ID
          description: ID for oneConnect.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        sourceMask:
          oneOf:
            - $ref: '#/components/schemas/IpAddress'
          title: Source IP Mask
          description: >-
            Applied to the server side source (local) address to determine
            whether the connection is eligible for reuse. Only the bits that are
            1 in the mask are required to match. A mask of 0.0.0.0 (default)
            causes the system to share reused connections across all clients. A
            host mask (all 1's in binary) causes the system to share reused
            connections only across clients with the same IP address.
          default: '::'
      additionalProperties: false
    ParametersDefinition:
      title: FAST Parameters Definition
      type: object
      description: Object must conform to specified template's schema.
      example:
        tenant: foo
        application: bar
        virtualAddress: 192.0.2.11
    PatchDeclarationDefinition:
      type: array
      title: Patch Declaration Definition
      description: The patch definition makes use of the standard JSON Patch design.
      items:
        type: object
        title: Declaration Definition
        description: Patch declaration definition.
        properties:
          op:
            type: string
            maxLength: 64000
            title: Operation
            description: Specify patch operation.
          path:
            type: string
            maxLength: 64000
            title: Path
            description: Path to execute the operation.
          value:
            type: object
            title: Value
            description: Optional parameter to support certain patch operation.
    PerRequestAccessPolicy:
      type: object
      title: Per-request Access Policy
      description: Defines a per-request access policy.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: ID
          description: The per-request access policy ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        policyType:
          type: string
          maxLength: 64
          title: Policy Type
          description: >-
            The type of policy. For a per-session policy, it is PerSession, and
            for a per-request policy, it is PerRequest.
          enum:
            - PerRequest
        name:
          title: Name
          description: The access policy name.
          example: URL filter
          type: string
          maxLength: 192
          pattern: ^[^ ](.*[^ ])?$
        caption:
          title: Policy caption
          description: The access policy caption.
          example: >-
            Some very long description for the policy which is used in external
            interface only
          type: string
          maxLength: 64000
        policy:
          title: Policy
          description: The per-request policy.
          oneOf:
            - $ref: '#/components/schemas/PerRequestPolicyBlob'
            - $ref: '#/components/schemas/PerRequestPolicyTree'
        externalServers:
          type: array
          default: []
          title: External Servers
          description: External Server definitions.
          items:
            $ref: '#/components/schemas/PerRequestServer'
        ssos:
          type: array
          default: []
          title: SSO objects
          description: An array of SSO objects.
          items:
            $ref: '#/components/schemas/Sso'
      required:
        - name
        - policyType
        - policy
      additionalProperties: false
    PerRequestAccessPolicyItem:
      title: Per-Request Access Policy Items
      description: Per-Request Access Policy Items.
      type: object
      oneOf:
        - $ref: '#/components/schemas/ItemEndingAllow'
        - $ref: '#/components/schemas/ItemEndingReject'
        - $ref: '#/components/schemas/ItemEndingRedirect'
        - $ref: '#/components/schemas/ItemEmptyForPerRequestPolicy'
        - $ref: '#/components/schemas/ItemHttpHeaderModify'
    PerRequestAccessPolicyItemRules:
      title: Branches to next AP Item
      description: Branches to next AP Item
      type: array
      items:
        $ref: '#/components/schemas/PerRequestAccessPolicyItem'
      minItems: 1
    PerRequestAccessStackPolicy:
      type: object
      title: Per-Request Access Policy Reference
      description: Per-Request Access Policy Reference.
      properties:
        perRequestAccessPolicy:
          type: string
          maxLength: 192
          example: example_per_req_access_policy
          title: Per-Request Access Policy Name
          description: Per-Request access policy name.
      required:
        - perRequestAccessPolicy
      additionalProperties: false
    PerRequestPolicyBlob:
      type: object
      title: The per-request policy
      description: The per-request policy.
      required:
        - content
      properties:
        content:
          type: string
          maxLength: 64000
          title: Policy Content
          description: The per-request policy blob in a JSON object format.
      additionalProperties: false
    PerRequestPolicyTree:
      type: object
      title: The per-request policy
      description: The per-request policy.
      required:
        - objectContent
      properties:
        objectContent:
          title: Recursive Access Policy
          description: Recursive Access Policy.
          type: object
          properties:
            languages:
              description: List of languages supported by this Access Policy.
              type: array
              minItems: 1
              items:
                description: Language codes defined by ISO 639-1.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              example:
                - en
                - es
              default:
                - en
            defaultLanguage:
              description: >-
                Default interface language; must be included into 'languages'
                array
              example: es
              default: en
              type: string
              enum:
                - en
                - de
                - es
                - it
                - fr
                - ko
                - ja
                - zh-cn
                - zh-tw
            generalUi:
              description: The General UI customization group.
              title: General UI Customization group
              type: array
              items:
                description: Customized strings for each language.
                type: object
                required:
                  - language
                  - strings
                properties:
                  language:
                    description: >-
                      Language of customized strings. ISO 639-1 language codes
                      should be used.
                    type: string
                    enum:
                      - en
                      - de
                      - es
                      - it
                      - fr
                      - ko
                      - ja
                      - zh-cn
                      - zh-tw
                  strings:
                    type: object
                    description: >-
                      General customizable strings and settings in Access user
                      interface
                    properties:
                      pageTitle:
                        description: Default page title.
                        type: string
                        maxLength: 1024
                      logoImage:
                        description: 'Header Image for Desktop (Max height: 60px).'
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      logoSmallImage:
                        description: 'Header Image for Mobile (Max height: 30px).'
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      headerMottoMessage:
                        description: Header text.
                        type: string
                        maxLength: 1024
                      headerDisconnectCaption:
                        description: Disconnect Caption.
                        type: string
                        maxLength: 1024
                      footerMessage:
                        description: Footer message.
                        type: string
                        maxLength: 1024
                      layoutBreakpointSmall:
                        description: >-
                          Maximum viewport width for applying small (mobile)
                          screen styles (px / % / auto).
                        oneOf:
                          - $ref: '#/components/schemas/SizePixel'
                          - $ref: '#/components/schemas/SizePercent'
                          - $ref: '#/components/schemas/SizeAuto'
                      layoutBreakpointLarge:
                        description: >-
                          Maximum viewport width for applying large (desktop)
                          screen styles (px / % / auto).
                        oneOf:
                          - $ref: '#/components/schemas/SizePixel'
                          - $ref: '#/components/schemas/SizePercent'
                          - $ref: '#/components/schemas/SizeAuto'
                      logonSequenceTimeoutMessage:
                        description: Session timeout message.
                        type: string
                        maxLength: 1024
                      newSessionMessage:
                        description: New session message.
                        type: string
                        maxLength: 1024
                      stripeColor:
                        description: Top Stripe Color.
                        type: string
                        maxLength: 256
                      headerBackgroundColor:
                        description: Header Color.
                        type: string
                        maxLength: 256
                      pageBackgroundColor:
                        description: Page Background Color.
                        type: string
                        maxLength: 256
                      formBackgroundColor:
                        description: Form Background Color.
                        type: string
                        maxLength: 256
                      footerBackgroundColor:
                        description: Footer Background Color.
                        type: string
                        maxLength: 256
                      textColor:
                        description: HTML Color for Text.
                        type: string
                        maxLength: 256
                      activeColor:
                        description: HTML Color for Active Links and Buttons.
                        type: string
                        maxLength: 256
                      solidButtonTextColor:
                        description: HTML Color for Solid Button Text.
                        type: string
                        maxLength: 256
                      disableExternalData:
                        description: Disable all external scripts and styles (on/off).
                        type: string
                        enum:
                          - true
                          - false
                      externalJs00Url:
                        description: External Javascript 1 Address.
                        type: string
                        maxLength: 1024
                      externalJs00Integrity:
                        description: External Javascript 1 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalJs01Url:
                        description: External Javascript 2 Address.
                        type: string
                        maxLength: 1024
                      externalJs01Integrity:
                        description: External Javascript 2 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalJs02Url:
                        description: External Javascript 3 Address.
                        type: string
                        maxLength: 1024
                      externalJs02Integrity:
                        description: External Javascript 3 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalJs03Url:
                        description: External Javascript 4 Address.
                        type: string
                        maxLength: 1024
                      externalJs03Integrity:
                        description: External Javascript 4 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalCss00Url:
                        description: External Stylesheet 1 Address.
                        type: string
                        maxLength: 1024
                      externalCss00Integrity:
                        description: External Stylesheet 1 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalCss01Url:
                        description: External Stylesheet 2 Address.
                        type: string
                        maxLength: 1024
                      externalCss01Integrity:
                        description: External Stylesheet 2 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      image00:
                        description: image00.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image01:
                        description: image01.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image02:
                        description: image02.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image03:
                        description: image03.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image04:
                        description: image04.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image05:
                        description: image05.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image06:
                        description: image06.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image07:
                        description: image07.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image08:
                        description: image08.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image09:
                        description: image09.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
            logout:
              description: Logout Customization group.
              title: Logout Customization group
              type: array
              items:
                description: Customized strings for each language.
                type: object
                required:
                  - language
                  - strings
                properties:
                  language:
                    description: >-
                      Language of customized strings. ISO 639-1 language codes
                      should be used.
                    type: string
                    enum:
                      - en
                      - de
                      - es
                      - it
                      - fr
                      - ko
                      - ja
                      - zh-cn
                      - zh-tw
                  strings:
                    type: object
                    description: >-
                      Customizable strings and settings for Logout page in
                      Access user interface.
                    properties:
                      successTitle:
                        description: Success title.
                        type: string
                        maxLength: 1024
                      successMessage:
                        description: Success message.
                        type: string
                        maxLength: 1024
                      thankMessage:
                        description: Thank you message.
                        type: string
                        maxLength: 1024
                      errorTitle:
                        description: Error title.
                        type: string
                        maxLength: 1024
                      accessDeniedRequirementsNotMetMessage:
                        description: Access denied message.
                        type: string
                        maxLength: 1024
                      adminSessionsMessage:
                        description: All sessions navigation.
                        type: string
                        maxLength: 1024
                      sessionIdMessage:
                        description: Session ID.
                        type: string
                        maxLength: 1024
                      promptSessionLogoutMessage:
                        description: Logout link message.
                        type: string
                        maxLength: 1024
                      accessNotFoundPageTitle:
                        description: Access not found page title.
                        type: string
                        maxLength: 1024
                      accessNotFoundRejectMessage:
                        description: >-
                          Access not found page reject message. May include
                          basic formatting HTML tags.
                        type: string
                        maxLength: 1024
                      sessionExpiredMessage:
                        description: Session expired message.
                        type: string
                        maxLength: 1024
                      acldeniedPageTitle:
                        description: ACL denied page title.
                        type: string
                        maxLength: 1024
                      acldeniedRejectMessage:
                        description: ACL denied page reject message.
                        type: string
                        maxLength: 1024
                      acldeniedGoBackMessage:
                        description: ACL denied page return link message.
                        type: string
                        maxLength: 1024
                      acldeniedRetryMessage:
                        description: ACL denied page retry link message.
                        type: string
                        maxLength: 1024
                      image00:
                        description: image00
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image01:
                        description: image01
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image02:
                        description: image02
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image03:
                        description: image03
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image04:
                        description: image04
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image05:
                        description: image05
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image06:
                        description: image06
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image07:
                        description: image07
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image08:
                        description: image08
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image09:
                        description: image09
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
            start:
              description: The access policy tree.
              $ref: '#/components/schemas/PerRequestAccessPolicyItem'
          required:
            - start
      additionalProperties: false
    PerRequestServer:
      oneOf:
        - $ref: '#/components/schemas/SamlIdpConnector'
    PerSessionAccessPolicy:
      type: object
      title: Per-session Access Policy
      description: Defines a per-session access policy.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: ID
          description: The access policy ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        policyType:
          type: string
          maxLength: 64
          title: Policy Type
          description: >-
            The type of policy. For a per-session policy, it is PerSession, and
            for a per-request policy, it is PerRequest.
          enum:
            - PerSession
        name:
          title: Name
          description: The access policy name.
          example: SAML SP Service Access Policy
          type: string
          maxLength: 192
          pattern: ^[^ ](.*[^ ])?$
        caption:
          title: Policy caption
          description: The access policy caption.
          example: >-
            Some very long description for the policy which is used in external
            interface only
          type: string
          maxLength: 64000
        profileType:
          example: ltm-apm
          title: Profile Type
          description: The type of access profile.
          type: string
          maxLength: 64
          enum:
            - all
            - ltm-apm
            - sso
        scope:
          example: global
          title: Scope
          description: >-
            The scope of an access profile. Specifying profile as a scope gives
            a user access only to resources behind the same access profile. This
            is the default value. Specifying virtual-server as a scope gives a
            user access only to resources behind the same virtual server.
            Specify scope as global to give a user access to resources behind
            any access profile with global scope.
          type: string
          maxLength: 64000
          enum:
            - profile
            - virtual-server
            - global
          default: profile
        timeout:
          minimum: 0
          title: Timeout
          description: >-
            The time in seconds a client has to complete an access policy
            (complete the logon process). This parameter helps mitigate
            denial-of-service (DoS) attacks. The default value is set to 300
            seconds.
          type: integer
          format: uint32
          maximum: 4294967295
        inactivityTimeout:
          minimum: 0
          title: Inactivity Timeout
          description: >-
            The time in seconds a client can keep a live session without sending
            traffic. If the Inactivity Timeout value is reached, the BIG-IP MA
            system will terminate the session. The default value is set to 900
            seconds.
          type: integer
          format: uint32
          maximum: 4294967295
        maxSessionTimeout:
          minimum: 0
          title: Max Session Timeout
          description: >-
            The maximum amount of time in seconds a user's session is active
            without needing to reauthenticate. If the value is set to 0 (zero),
            the user's session is active until either the user terminates the
            session or the Inactivity Timeout value is reached (the default
            value is set to 604,800 seconds).
          type: integer
          format: uint32
          maximum: 4294967295
        maxConcurrentUsers:
          minimum: 0
          title: Maximum Concurrent Users
          description: >-
            The maximum number of sessions per access profile. The default value
            is 0 which represents unlimited sessions.
          type: integer
          format: uint32
          maximum: 4294967295
        maxConcurrentSessions:
          minimum: 0
          title: Maximum Concurrent Sessions
          description: >-
            The maximum number of sessions that a user can have active. The
            default value is 0 which represents unlimited sessions.
          type: integer
          format: uint32
          maximum: 4294967295
        maxInProgressSessions:
          minimum: 0
          title: Maximum In Progress Sessions
          description: >-
            The maximum number of sessions that can be in progress for a client
            IP address. The default value is 0 which represents unlimited
            sessions.
          type: integer
          format: uint32
          maximum: 4294967295
        minFailureDelay:
          minimum: 0
          title: Minimum Failure Delay
          description: >-
            The minimum number of seconds to delay before displaying an error
            after authentication failure. The default value is 2.
          type: integer
          format: uint32
          maximum: 4294967295
        maxFailureDelay:
          minimum: 0
          title: Maximum Failure Delay
          description: >-
            The maximum number of seconds to delay before displaying an error
            after authentication failure. The default value is 5.
          type: integer
          format: uint32
          maximum: 4294967295
        domainMode:
          example: multiple
          title: Domain Mode
          description: >-
            Specifies whether the SSO configuration is applied to a single
            domain or multiple domain. Default value is single domain mode.
          type: string
          maxLength: 64000
          enum:
            - single
            - multiple
          default: single
        domainCookie:
          type: string
          maxLength: 64000
          title: Domain Cookie
          description: The name of the domain in which the cookie will be used for access.
        secureCookie:
          type: boolean
          default: true
          title: Secure Cookie
          description: >-
            Set this parameter to true to add a secure keyword to the session
            cookie.
        persistentCookie:
          type: boolean
          default: false
          title: Persistent Cookie
          description: >-
            Set this parameter to true for a web-access management session only
            with ltm-apm profile type. It retains the cookie for a user session
            even when the session is terminated.
        httpOnlyCookie:
          type: boolean
          default: false
          title: Http Only Cookie
          description: >-
            Set this parameter to true to insert an HttpOnly directive in an
            HTTP response from BIG-IP MA. It helps mitigate the risk of a
            client-side script accessing the cookie if the session is HTTP only.
        samesiteCookie:
          type: boolean
          default: false
          title: Samesite Cookie
          description: >-
            Set this parameter to true to insert a Samesite attribute to the
            session cookie. This attribute enforces same-site usage and prevents
            the cookie from being included with cross-site requests.
        samesiteCookieAttrValue:
          example: lax
          title: Samesite Cookie Attribute Value
          description: >-
            The value of samesite cookie attribute. Specify a strict value to
            include only the cookie with same-site requests. The browser would
            not send cookies in requests to third-party domains. Specify a lax
            value to include the cookie with same-site requests and with HTTP
            GET requests. Specifying none does not enforce the same-site
            request; however, all browser requests must follow the HTTPS
            protocol and include the Secure attribute.
          type: string
          maxLength: 64000
          enum:
            - strict
            - lax
            - none
          default: strict
        restrictToSingleClientIP:
          type: boolean
          default: false
          title: Restrict to Single Client IP
          description: >-
            Set this parameter to true to limit a session to a single IP
            address.
        useHttp503OnError:
          type: boolean
          default: false
          title: Use Http 503 On Error
          description: >-
            Set this parameter to true to send HTTP response code 503 for error
            pages to clients.
        logoutUriInclude:
          type: string
          maxLength: 64000
          example: /index.php /another/logout.cgi
          title: Logout Uri Include
          description: >-
            A list of logoff URIs that the access profile searches to terminate
            the Access session.
        logoutUriTimeout:
          minimum: 0
          title: Logout Uri Timeout
          description: >-
            The timeout in seconds used to delay logout for the customized
            logout URIs defined in the logout URI include list.
          type: integer
          format: uint32
          maximum: 4294967295
        policy:
          title: Policy
          description: The per-session policy.
          oneOf:
            - $ref: '#/components/schemas/PerSessionPolicyBlob'
            - $ref: '#/components/schemas/PerSessionPolicyTree'
        externalServers:
          type: array
          default: []
          title: External Servers
          description: External Server definitions.
          items:
            $ref: '#/components/schemas/PerSessionServer'
        ssos:
          type: array
          default: []
          title: SSO objects
          description: An array of Kerberos SSO objects.
          items:
            $ref: '#/components/schemas/Sso'
        ssoReference:
          type: string
          maxLength: 64
          title: SSO Reference
          description: Soft reference by name to SSO object in ssos.
      required:
        - name
        - policyType
        - profileType
        - policy
      additionalProperties: false
    PerSessionAccessPolicyItem:
      title: Per-Session Access Policy Items
      description: Per-Session Access Policy Items.
      type: object
      oneOf:
        - $ref: '#/components/schemas/ItemEndingAllow'
        - $ref: '#/components/schemas/ItemEndingDeny'
        - $ref: '#/components/schemas/ItemEmptyForPerSessionPolicy'
        - $ref: '#/components/schemas/ItemMessageBox'
        - $ref: '#/components/schemas/ItemDecisionBox'
        - $ref: '#/components/schemas/ItemLogon'
        - $ref: '#/components/schemas/ItemSaml'
        - $ref: '#/components/schemas/ItemVariableAssign'
        - $ref: '#/components/schemas/ItemSSOCredentialMapping'
    PerSessionAccessPolicyItemRules:
      title: Branches to next AP Item
      description: Branches to next AP Item
      type: array
      items:
        $ref: '#/components/schemas/PerSessionAccessPolicyItem'
      minItems: 1
    PerSessionAccessStackPolicy:
      type: object
      title: Access Policy Reference
      description: Access Policy Reference.
      properties:
        perSessionAccessPolicy:
          type: string
          maxLength: 192
          example: example_access_policy
          title: Access Policy Name
          description: The name of the access policy. The maximum length is 192 characters.
      required:
        - perSessionAccessPolicy
      additionalProperties: false
    PerSessionPolicyBlob:
      type: object
      title: The per-session policy
      description: >-
        The per-session policy; deprecated format. Please use recursive policy
        format instead.
      required:
        - content
      properties:
        content:
          type: string
          maxLength: 64000
          title: Policy Content
          description: The per-session policy blob in a JSON object format.
      additionalProperties: false
    PerSessionPolicyTree:
      type: object
      title: The per-session policy
      description: The per-session policy.
      required:
        - objectContent
      properties:
        objectContent:
          title: Recursive Access Policy
          description: Recursive Access Policy.
          type: object
          properties:
            languages:
              description: List of languages supported by this Access Policy.
              type: array
              minItems: 1
              items:
                description: Language codes defined by ISO 639-1.
                type: string
                enum:
                  - en
                  - de
                  - es
                  - it
                  - fr
                  - ko
                  - ja
                  - zh-cn
                  - zh-tw
              example:
                - en
                - es
              default:
                - en
            defaultLanguage:
              description: >-
                Default interface language; must be included into 'languages'
                array
              example: es
              default: en
              type: string
              enum:
                - en
                - de
                - es
                - it
                - fr
                - ko
                - ja
                - zh-cn
                - zh-tw
            generalUi:
              description: The General UI customization group.
              title: General UI Customization group
              type: array
              items:
                description: Customized strings for each language.
                type: object
                required:
                  - language
                  - strings
                properties:
                  language:
                    description: >-
                      Language of customized strings. ISO 639-1 language codes
                      should be used.
                    type: string
                    enum:
                      - en
                      - de
                      - es
                      - it
                      - fr
                      - ko
                      - ja
                      - zh-cn
                      - zh-tw
                  strings:
                    type: object
                    description: >-
                      General customizable strings and settings in Access user
                      interface
                    properties:
                      pageTitle:
                        description: Default page title.
                        type: string
                        maxLength: 1024
                      logoImage:
                        description: 'Header Image for Desktop (Max height: 60px).'
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      logoSmallImage:
                        description: 'Header Image for Mobile (Max height: 30px).'
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      headerMottoMessage:
                        description: Header text.
                        type: string
                        maxLength: 1024
                      headerDisconnectCaption:
                        description: Disconnect Caption.
                        type: string
                        maxLength: 1024
                      footerMessage:
                        description: Footer message.
                        type: string
                        maxLength: 1024
                      layoutBreakpointSmall:
                        description: >-
                          Maximum viewport width for applying small (mobile)
                          screen styles (px / % / auto).
                        oneOf:
                          - $ref: '#/components/schemas/SizePixel'
                          - $ref: '#/components/schemas/SizePercent'
                          - $ref: '#/components/schemas/SizeAuto'
                      layoutBreakpointLarge:
                        description: >-
                          Maximum viewport width for applying large (desktop)
                          screen styles (px / % / auto).
                        oneOf:
                          - $ref: '#/components/schemas/SizePixel'
                          - $ref: '#/components/schemas/SizePercent'
                          - $ref: '#/components/schemas/SizeAuto'
                      logonSequenceTimeoutMessage:
                        description: Session timeout message.
                        type: string
                        maxLength: 1024
                      newSessionMessage:
                        description: New session message.
                        type: string
                        maxLength: 1024
                      stripeColor:
                        description: Top Stripe Color.
                        type: string
                        maxLength: 256
                      headerBackgroundColor:
                        description: Header Color.
                        type: string
                        maxLength: 256
                      pageBackgroundColor:
                        description: Page Background Color.
                        type: string
                        maxLength: 256
                      formBackgroundColor:
                        description: Form Background Color.
                        type: string
                        maxLength: 256
                      footerBackgroundColor:
                        description: Footer Background Color.
                        type: string
                        maxLength: 256
                      textColor:
                        description: HTML Color for Text.
                        type: string
                        maxLength: 256
                      activeColor:
                        description: HTML Color for Active Links and Buttons.
                        type: string
                        maxLength: 256
                      solidButtonTextColor:
                        description: HTML Color for Solid Button Text.
                        type: string
                        maxLength: 256
                      disableExternalData:
                        description: Disable all external scripts and styles (on/off).
                        type: string
                        enum:
                          - true
                          - false
                      externalJs00Url:
                        description: External Javascript 1 Address.
                        type: string
                        maxLength: 1024
                      externalJs00Integrity:
                        description: External Javascript 1 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalJs01Url:
                        description: External Javascript 2 Address.
                        type: string
                        maxLength: 1024
                      externalJs01Integrity:
                        description: External Javascript 2 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalJs02Url:
                        description: External Javascript 3 Address.
                        type: string
                        maxLength: 1024
                      externalJs02Integrity:
                        description: External Javascript 3 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalJs03Url:
                        description: External Javascript 4 Address.
                        type: string
                        maxLength: 1024
                      externalJs03Integrity:
                        description: External Javascript 4 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalCss00Url:
                        description: External Stylesheet 1 Address.
                        type: string
                        maxLength: 1024
                      externalCss00Integrity:
                        description: External Stylesheet 1 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      externalCss01Url:
                        description: External Stylesheet 2 Address.
                        type: string
                        maxLength: 1024
                      externalCss01Integrity:
                        description: External Stylesheet 2 Subresource Integrity.
                        type: string
                        maxLength: 1024
                      image00:
                        description: image00.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image01:
                        description: image01.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image02:
                        description: image02.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image03:
                        description: image03.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image04:
                        description: image04.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image05:
                        description: image05.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image06:
                        description: image06.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image07:
                        description: image07.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image08:
                        description: image08.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image09:
                        description: image09.
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
            logout:
              description: Logout Customization group.
              title: Logout Customization group
              type: array
              items:
                description: Customized strings for each language.
                type: object
                required:
                  - language
                  - strings
                properties:
                  language:
                    description: >-
                      Language of customized strings. ISO 639-1 language codes
                      should be used.
                    type: string
                    enum:
                      - en
                      - de
                      - es
                      - it
                      - fr
                      - ko
                      - ja
                      - zh-cn
                      - zh-tw
                  strings:
                    type: object
                    description: >-
                      Customizable strings and settings for Logout page in
                      Access user interface.
                    properties:
                      successTitle:
                        description: Success title.
                        type: string
                        maxLength: 1024
                      successMessage:
                        description: Success message.
                        type: string
                        maxLength: 1024
                      thankMessage:
                        description: Thank you message.
                        type: string
                        maxLength: 1024
                      errorTitle:
                        description: Error title.
                        type: string
                        maxLength: 1024
                      accessDeniedRequirementsNotMetMessage:
                        description: Access denied message.
                        type: string
                        maxLength: 1024
                      adminSessionsMessage:
                        description: All sessions navigation.
                        type: string
                        maxLength: 1024
                      sessionIdMessage:
                        description: Session ID.
                        type: string
                        maxLength: 1024
                      promptSessionLogoutMessage:
                        description: Logout link message.
                        type: string
                        maxLength: 1024
                      accessNotFoundPageTitle:
                        description: Access not found page title.
                        type: string
                        maxLength: 1024
                      accessNotFoundRejectMessage:
                        description: >-
                          Access not found page reject message. May include
                          basic formatting HTML tags.
                        type: string
                        maxLength: 1024
                      sessionExpiredMessage:
                        description: Session expired message.
                        type: string
                        maxLength: 1024
                      acldeniedPageTitle:
                        description: ACL denied page title.
                        type: string
                        maxLength: 1024
                      acldeniedRejectMessage:
                        description: ACL denied page reject message.
                        type: string
                        maxLength: 1024
                      acldeniedGoBackMessage:
                        description: ACL denied page return link message.
                        type: string
                        maxLength: 1024
                      acldeniedRetryMessage:
                        description: ACL denied page retry link message.
                        type: string
                        maxLength: 1024
                      image00:
                        description: image00
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image01:
                        description: image01
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image02:
                        description: image02
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image03:
                        description: image03
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image04:
                        description: image04
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image05:
                        description: image05
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image06:
                        description: image06
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image07:
                        description: image07
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image08:
                        description: image08
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
                      image09:
                        description: image09
                        type: string
                        maxLength: 4096
                        format: uri
                        pattern: >-
                          ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                        title: Uniform Resource Identifier
            start:
              description: The access policy tree.
              $ref: '#/components/schemas/PerSessionAccessPolicyItem'
          required:
            - start
      additionalProperties: false
    PerSessionServer:
      oneOf:
        - $ref: '#/components/schemas/SamlIdpConnector'
    Percent:
      type: number
      minimum: 0
      maximum: 100
      default: 0
      title: Percent
      description: Reports a percentage from 0 to 100.
    PersistenceCookie:
      type: object
      title: Cookie Persistence
      description: Cookie Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        cookieName:
          type: string
          maxLength: 64000
          title: Cookie Name
          description: Specifies a unique name for the cookie.
        cookieAlwaysSend:
          type: boolean
          default: false
          title: Always Send Cookie
          description: >-
            Specifies whether to send the cookie persistence entry on every
            reply, even if the entry has previously been supplied to the client.
            The default is false.
        cookieEncryption:
          title: Cookie Encryption
          description: >-
            Specifies the way in which cookie format will be used:
            \"encryption-off\": generate old format,unencrypted;
            \"encryption-preferred\": generate encrypted cookie but accept both
            encrypted and old format, and \"encryption-required\": cookie format
            must be encrypted.
          type: string
          maxLength: 64
          enum:
            - encryption-preferred
            - encryption-required
            - encryption-off
          default: encryption-off
          example: encryption-off
        cookieEncryptionPassphrase:
          type: string
          maxLength: 64000
          title: Cookie Encryption Passphrase
          description: Specifies a passphrase to be used for cookie encryption.
          format: password
          writeOnly: true
        cookieMethod:
          oneOf:
            - $ref: '#/components/schemas/PersistenceCookieInsert'
            - $ref: '#/components/schemas/PersistenceCookieRewrite'
            - $ref: '#/components/schemas/PersistenceCookiePassive'
            - $ref: '#/components/schemas/PersistenceCookieHash'
          title: Cookie Method
          description: Specifies the type of cookie processing that the system uses.
        template:
          title: Persistence Template
          description: Template type for persistence.
          type: string
          maxLength: 64000
          enum:
            - COOKIE_TEMPLATE
      required:
        - template
        - cookieMethod
      additionalProperties: false
    PersistenceCookieHash:
      type: object
      title: Cookie Hash Persistence
      description: Cookie Hash Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        matchAcrossStacks:
          type: boolean
          default: false
          title: Match Across Stacks
          description: >-
            Specifies, when true, that all persistent connections from a client
            IP address, which go to the same virtual IP address, also go to the
            same node. The default value is false.
        matchAcrossApplications:
          type: boolean
          default: false
          title: Match Across Applications
          description: >-
            Specifies, when true, that all persistent connections from a client
            IP address go to the same node. The default value is false.
        matchAcrossEndpoints:
          type: boolean
          default: false
          title: Match Across Endpoints
          description: >-
            Specifies, when true, that the system can use any endpoint that
            contains this persistence record. The default value is false.
        timeout:
          type: integer
          default: 180
          minimum: 1
          maximum: 2147483647
          title: Timeout
          description: Specifies the duration of the persistence entries.
        method:
          title: Cookie Persistence Method
          description: Method type for cookie persistence.
          type: string
          maxLength: 64000
          enum:
            - COOKIE_HASH_METHOD
      required:
        - method
      additionalProperties: false
    PersistenceCookieInsert:
      type: object
      title: Cookie Insert Persistence
      description: Cookie Insert Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        httponlyAttribute:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: enabled
          title: HTTPOnly Attribute
          description: >-
            When enabled, adds an httponly attribute value to a cookie inserted
            into the response header. This setting applies to HTTP and SSL
            connections.
        secureAttribute:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: enabled
          title: Secure Attribute
          description: >-
            When enabled, adds a secure attribute value to a cookie inserted
            into the response header. This setting applies only to SSL
            connections.
        encryptCookieL4serverside:
          type: boolean
          default: false
          title: Encrypt L4 Server Side Name
          description: >-
            Specifies whether the L4-serverside name in the inserted BigIPServer
            default cookie should be encrypted.
        expiration:
          title: Expiration
          description: >-
            Specifies the cookie expiration date. The time period must be less
            than 24856 days.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        method:
          title: Cookie Persistence Method
          description: Method type for cookie persistence.
          type: string
          maxLength: 64000
          enum:
            - COOKIE_INSERT_METHOD
      required:
        - method
      additionalProperties: false
    PersistenceCookiePassive:
      type: object
      title: Cookie Passive Persistence
      description: Cookie Passive Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        method:
          title: Cookie Persistence Method
          description: Method type for cookie persistence.
          type: string
          maxLength: 64000
          enum:
            - COOKIE_PASSIVE_METHOD
      required:
        - method
      additionalProperties: false
    PersistenceCookieRewrite:
      type: object
      title: Cookie Rewrite Persistence
      description: Cookie Rewrite Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        encryptCookieL4serverside:
          type: boolean
          default: false
          title: Encrypt L4 Server Side Name
          description: >-
            Specifies whether the L4-serverside name in the inserted BigIPServer
            default cookie should be encrypted.
        expiration:
          title: Expiration
          description: >-
            Specifies the cookie expiration date. The time period must be less
            than 24856 days.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        method:
          title: Cookie Persistence Method
          description: Method type for cookie persistence.
          type: string
          maxLength: 64000
          enum:
            - COOKIE_REWRITE_METHOD
      required:
        - method
      additionalProperties: false
    PersistenceDestAddr:
      type: object
      title: Destination Address Persistence
      description: Persistence on desttination address.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        matchAcrossStacks:
          type: boolean
          default: false
          title: Match Across Stacks
          description: >-
            Specifies, when true, that all persistent connections to a
            destination IP address go to the same endpoint. The default value is
            false.
        matchAcrossApplications:
          type: boolean
          default: false
          title: Match Across Applications
          description: >-
            Specifies, when true, that all persistent connections to a
            destination IP address, which go to the stacks with the same
            destination IP addresses, also go to the same endpoint. The default
            value is false.
        matchAcrossEndpoints:
          type: boolean
          default: false
          title: Match Across Endpoints
          description: >-
            Specifies, when true, that the system can use any endpoint that
            contains this persistence record. The default value is false.
        timeout:
          type: integer
          default: 180
          minimum: 1
          maximum: 2147483647
          title: Timeout
          description: >-
            Specifies the duration of the persistence entries in seconds. The
            default value is 180.
        ipv4PrefixLength:
          title: IPv4 Prefix Length
          description: >-
            Specifies the prefix length that you want to use as the mask. The
            default is None. The length must be the number of set bits in a
            bitmask between 0 and 32 for IPv4.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        ipv6PrefixLength:
          title: IPv6 Prefix Length
          description: >-
            Specifies the prefix length that you want to use as the mask. The
            default is None. The length must be the number of set bits in a
            bitmask between 0 and 128 for IPv6.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        template:
          title: Persistence Template
          description: Template type for persistence.
          type: string
          maxLength: 64000
          enum:
            - DEST_ADDR_TEMPLATE
          example: '"template": { "template": "SOURCE_ADDR_TEMPLATE", "timeout": 5 }'
      required:
        - template
      additionalProperties: false
    PersistenceSourceAddr:
      type: object
      title: Source Address Persistence
      description: Persistence source addr.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        matchAcrossStacks:
          type: boolean
          default: false
          title: Match Across Stacks
          description: >-
            Specifies, when true, that all persistent connections from a client
            IP address, which go to the same virtual IP address, also go to the
            same node. The default value is false.
        matchAcrossApplications:
          type: boolean
          default: false
          title: Match Across Applications
          description: >-
            Specifies, when true, that all persistent connections from the same
            client IP address go to the same node. The default value is false.
        matchAcrossEndpoints:
          type: boolean
          default: false
          title: Match Across Endpoints
          description: >-
            Specifies, when true, that the system can use any endpoint that
            contains this persistence record. The default value is false.
        timeout:
          type: integer
          default: 180
          minimum: 1
          maximum: 2147483647
          title: Timeout
          description: Specifies the duration of the persistence entries.
        ipv4PrefixLength:
          title: IPv4 Prefix Length
          description: >-
            Specifies the prefix length that you want to use as the mask. The
            default is None. The length must be the number of set bits in a
            bitmask between 0 and 32 for IPv4.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        ipv6PrefixLength:
          title: IPv6 Prefix Length
          description: >-
            Specifies the prefix length that you want to use as the mask. The
            default is None. The length must be the number of set bits in a
            bitmask between 0 and 128 for IPv6.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        template:
          title: Persistence Template
          description: Template type for persistence.
          type: string
          maxLength: 64000
          enum:
            - SOURCE_ADDR_TEMPLATE
      required:
        - template
      additionalProperties: false
    PersistenceSsl:
      type: object
      title: SSL Persistence
      description: SSL Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        matchAcrossStacks:
          type: boolean
          default: false
          title: Match Across Stacks
          description: >-
            Specifies, when true, that all persistent connections from a client
            IP address, which go to the same virtual IP address, also go to the
            same node. The default value is false.
        matchAcrossApplications:
          type: boolean
          default: false
          title: Match Across Applications
          description: >-
            Specifies, when true, that all persistent connections from the same
            client IP address go to the same node. The default value is false.
        matchAcrossEndpoints:
          type: boolean
          default: false
          title: Match Across Endpoints
          description: >-
            Specifies, when true, that the system can use any endpoint that
            contains this persistence record.
        overrideConnectionLimit:
          type: boolean
          default: false
          title: Override Connection Limit
          description: >-
            Specifies, when true, that the pool member connection limits are not
            enforced for persisted clients. Per-virtual connection limits remain
            hard limits and are not disabled.
        timeout:
          type: integer
          default: 300
          minimum: 1
          maximum: 2147483647
          title: Timeout
          description: Specifies the duration of the persistence entries.
        template:
          title: Persistence Template
          description: Template type for persistence.
          type: string
          maxLength: 64000
          enum:
            - SSL_SID_TEMPLATE
      required:
        - template
      additionalProperties: false
    PersistenceUniversal:
      type: object
      title: Universal Persistence
      description: Universal Persistence.
      properties:
        id:
          readOnly: true
          title: Profile ID
          description: A unique name to identify the profile.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        matchAcrossStacks:
          type: boolean
          default: false
          title: Match Across Stacks
          description: >-
            Specifies, when true, that all persistent connections from a client
            IP address, which go to the same virtual IP address, also go to the
            same node. The default value is false.
        matchAcrossApplications:
          type: boolean
          default: false
          title: Match Across Applications
          description: >-
            Specifies, when true, that all persistent connections from the same
            client IP address go to the same node. The default value is false.
        matchAcrossEndpoints:
          type: boolean
          default: false
          title: Match Across Endpoints
          description: >-
            Specifies, when true, that the system can use any endpoint that
            contains this persistence record. The default value is false.
        uieRule:
          title: iRule
          description: >-
            Specifies an iRule when you are using a rule for universal
            persistence.
          type: object
          properties:
            description:
              type: string
              maxLength: 256
              title: Description
              description: Description for iRule.
            priority:
              type: integer
              default: 500
              title: Priority
              description: Priority for iRule.
              minimum: 0
              maximum: 1000
            rule:
              type: string
              title: Rule
              description: Rule for iRule.
              maxLength: 64000
          additionalProperties: false
        overrideConnectionLimit:
          type: boolean
          default: false
          title: Override Connection Limit
          description: >-
            Specifies, when true, that the pool member connection limits are not
            enforced for persisted clients. Per-virtual connection limits remain
            hard limits and are not disabled.
        timeout:
          type: integer
          default: 180
          minimum: 1
          maximum: 2147483647
          title: Timeout
          description: Specifies the duration of the persistence entries.
        template:
          title: Persistence Template
          description: Template type for persistence.
          type: string
          maxLength: 64000
          enum:
            - UIE_TEMPLATE
      required:
        - template
      additionalProperties: false
    PortNumber:
      description: |
        A 16-bit port number used by a transport protocol such as TCP or UDP.
      title: Port
      type: integer
      format: uint16
      minimum: 0
      maximum: 65535
    PortRange:
      description: port numbers used by souce translation addresses
      title: Port Range
      type: string
      maxLength: 11
      pattern: >-
        ^([0-9]{1,4}|6[0-4][0-9]{3}|654[0-9][0-9]|655[0-2][0-9]|6553[0-5])(-([0-9]{1,4}|6[0-4][0-9]{3}|654[0-9][0-9]|655[0-2][0-9]|6553[0-5]))?$
    Qkview:
      type: object
      title: QuickView
      description: QKView.
      properties:
        name:
          type: string
          maxLength: 48
          title: QuickView File Name
          description: The requested QuickView file name.
          default: ''
      additionalProperties: false
    RamcacheDefault:
      type: object
      title: RAM Cache Default
      description: RAMCache default.
      properties:
        id:
          readOnly: true
          title: RAM Cache ID
          description: ID for Ramcache.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        cacheSize:
          type: integer
          default: 2
          minimum: 1
          maximum: 4
          title: Cache Size
          description: >-
            Specifies the amount of memory (in MB) the system provides for
            caching per Traffic Management Microkernel (TMM). The total cache
            size equals the Cache Size multiplied by the number of TMMs on the
            system.
        maxEntries:
          type: integer
          default: 10000
          minimum: 1
          maximum: 2097152
          title: Maximum Entries
          description: >-
            Specifies the maximum number of entries the system allows for
            caching.
        maxAge:
          type: integer
          default: 3600
          minimum: 0
          maximum: 86400
          title: Maximum Age
          description: >-
            Specifies the duration, in seconds, in which the system considers
            the cached content valid.
        minObjectSize:
          type: integer
          default: 500
          minimum: 0
          maximum: 50000
          title: Minimum Object Size
          description: >-
            Specifies the minimum object size, in bytes, that the system stores
            in the cache.
        maxObjectSize:
          type: integer
          default: 50000
          minimum: 0
          maximum: 2097152
          title: Maximum Object Size
          description: >-
            Specifies the maximum object size, in bytes, that the system stores
            in the cache.
        agingRate:
          type: integer
          default: 9
          minimum: 0
          maximum: 10
          title: Aging Rate
          description: >-
            Specifies how quickly the system ages a cache entry. The aging rate
            ranges from 0 (slowest aging) to 10 (fastest aging).
        uriExcludeList:
          type: array
          items:
            type: string
            maxLength: 4096
            format: uri
            pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
            description: >-
              An ASCII-encoded Uniform Resource Identifier (URI) as defined in
              RFC 3986.
            title: Uniform Resource Identifier
          default: []
          title: URI Exclude List
          description: >-
            Configures a list of Uniform Resource Identifiers (URIs) to exclude
            from the WA Cache. The default value is an empty list, which
            indicates that no URI will be excluded.
        uriIncludeList:
          type: array
          items:
            type: string
            maxLength: 4096
            format: uri
            pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
            description: >-
              An ASCII-encoded Uniform Resource Identifier (URI) as defined in
              RFC 3986.
            title: Uniform Resource Identifier
          default: []
          title: URI Include List
          description: >-
            Configures a list of URIs that are cacheable. The default value is
            an empty list, which indicates that all URIs are cacheable.
        uriIncludeOverrideList:
          type: array
          items:
            type: string
            maxLength: 4096
            format: uri
            pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
            description: >-
              An ASCII-encoded Uniform Resource Identifier (URI) as defined in
              RFC 3986.
            title: Uniform Resource Identifier
          default: []
          title: URI Include Override List
          description: >-
            Configures a list of URIs that should be cached in the WA cache even
            though they would normally not be cached due to constraints defined
            by `max-object-size` or others. URIs on the `uri-include-override`
            list are cacheable even if they are not on the `uri-include` list.
        uriPinList:
          type: array
          items:
            type: string
            maxLength: 64000
          default: []
          title: URI Pin List
          description: >-
            Configures a list of URIs to keep in the cache. The pinning process
            keeps URIs in cache when they would normally be evicted to make room
            for more active URIs.
        ignoreHeaders:
          type: string
          maxLength: 64000
          enum:
            - none
            - max-age
            - all
          default: all
          title: Ignore Headers
          description: >-
            Specifies which cache disabling headers sent by clients the system
            ignores.
        insertAgeHeader:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: enabled
          title: Insert Age Header
          description: Inserts Age and Date headers in the response.
      additionalProperties: false
    RbacRoles:
      type: string
      enum:
        - administrator
        - resource-administrator
        - as3-user
        - user-manager
        - manager
        - certificate-manager
        - application-owner
        - network-operator
        - application-editor
        - no-access
      example: no-access
    Restore:
      type: object
      title: Restore payload
      description: Restore dDetails.
      properties:
        id:
          title: File ID that refers to backup file
          description: The requested backup file ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        password:
          type: string
          maxLength: 400
          title: Password
          description: Password to untar the tarball.
          default: ''
          readOnly: true
      additionalProperties: false
    ResultDefinition:
      type: object
      title: Result Definition
      description: Result definition.
      properties:
        code:
          title: Code
          description: Result Code
          type: integer
          minimum: 100
          maximum: 600
        message:
          type: string
          title: Message
          description: Message.
          maxLength: 64000
        host:
          type: string
          title: Host
          description: Host.
          maxLength: 64000
        tenant:
          type: string
          title: Tenant
          description: Tenant.
          maxLength: 64000
        runTime:
          type: integer
          title: Runtime
          description: Runtime.
          minimum: 10
          maximum: 300000
      additionalProperties: false
    Role:
      type: string
      enum:
        - AGENTCONFIG
        - LICENSING
        - NOJOB
        - DECLARE
        - QKVIEW
        - CLUSTERCONFIG
        - ASEC_POLICY_COMPILER
        - UPGRADE_MANAGER
        - BIRD
        - VALIDATOR
        - REBOOT
        - LOG_ARCHIVE
        - DELETE_CORE
      default: AGENTCONFIG
      readOnly: true
      description: >-
        The type of service needed for the job. NOJOB indicates that this object
        cannot be put in the JOB table.
    SamlArtifactResolutionServiceHttp:
      type: object
      title: SAML HTTP Artifact Resolution Service
      description: SAML HTTP Artifact Resolution Service.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          description: SAML Artifact Resolution Service ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          title: UUID
        username:
          description: Specifies a name for the artifact resolution service request.
          type: string
          maxLength: 127
        password:
          description: Specifies a password for the artifact resolution service request.
          type: string
          maxLength: 127
          writeOnly: true
        signArtifactResolutionRequest:
          description: Specifies if artifact resolution messages from an SP are signed.
          type: boolean
          default: false
        dnsResolverName:
          type: string
          minLength: 1
          maxLength: 127
          description: DNS resolver name.
          default: global_f5_internal_net_resolver
        artifactResolutionServiceUrl:
          description: Specifies the URL of the artifact resolution service.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^http:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
      required:
        - artifactResolutionServiceUrl
      additionalProperties: false
    SamlArtifactResolutionServiceHttps:
      type: object
      title: SAML HTTPS Artifact Resolution Service
      description: SAML HTTPS Artifact Resolution Service.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          description: SAML Artifact Resolution Service ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          title: UUID
        username:
          description: Specifies a name for the artifact resolution service request.
          type: string
          maxLength: 127
        password:
          description: Specifies a password for the artifact resolution service request.
          type: string
          maxLength: 127
          writeOnly: true
        signArtifactResolutionRequest:
          description: Specifies if artifact resolution messages from an SP are signed.
          type: boolean
          default: false
        dnsResolverName:
          type: string
          minLength: 1
          maxLength: 127
          description: DNS resolver name.
          default: global_f5_internal_net_resolver
        artifactResolutionServiceUrl:
          description: Specifies the URL of the artifact resolution service.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        clientTls:
          default:
            tlsVersions: {}
          description: TLS for server side for client.
          type: object
          title: Server-side TLS Default
          properties:
            id:
              readOnly: true
              title: Server-side TLS ID
              description: Contains the ID for the TLS default for server-side connections.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            cipherstring:
              type: string
              maxLength: 64000
              default: DEFAULT
              title: Cipher String
              description: >-
                Defines the cipher string to use for server-side SSL
                communications in a string of no more than 64,000 characters.
            tlsVersions:
              title: TLS Version
              description: >-
                Specifies the TLS version information for these server-side TLS
                settings.
              type: object
              default: {}
              properties:
                id:
                  readOnly: true
                  title: TLS Version ID
                  description: TLS version ID.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                enableTLS1.3:
                  type: boolean
                  default: true
                  title: Enable TLS 1.3
                  description: Specifies whether TLS 1.3 is enabled. The default is true.
                enableTLS1.2:
                  type: boolean
                  default: true
                  title: Enable TLS 1.2
                  description: Specifies whether TLS 1.2 is enabled. The default is true.
                enableTLS1.1:
                  type: boolean
                  default: false
                  title: Enable TLS 1.1
                  description: Specifies whether TLS 1.1 is enabled. The default is false.
              additionalProperties: false
          additionalProperties: false
      required:
        - artifactResolutionServiceUrl
      additionalProperties: false
    SamlBindingType:
      type: string
      maxLength: 64000
      enum:
        - http-post
        - http-redirect
        - http-artifact
        - soap
        - paos
      default: http-post
    SamlIdpConnector:
      type: object
      title: SAML IDP Connector
      description: >-
        A generic federated identity provider connector, using the SAML protocol
        to connect to external identity providers.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          description: IdP Connector ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          title: UUID
        name:
          description: Name of the IdP connector.
          type: string
          maxLength: 192
          pattern: ^[^ ](.*[^ ])?$
        serverType:
          description: External Server type.
          type: string
          maxLength: 192
          enum:
            - SamlIdPConnector
        entityId:
          description: A unique identifier for the SAML Identity Provider.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        nameQualifier:
          description: The security or administrative domain of the Identity Provider.
          type: string
          maxLength: 64000
          default: ''
        wantAuthnRequestSigned:
          description: Specifies whether the IdP expects signed authentication requests.
          type: boolean
          default: false
        wantDetachedSignature:
          description: Specifies whether to detach signature when using redirect binding.
          type: boolean
          default: false
        signatureType:
          description: >-
            Specifies the signing algorithm used to send authentication request
            to IdP.
          type: string
          maxLength: 64000
          enum:
            - sha1
            - sha256
            - sha384
            - sha512
          default: sha256
        errorReportingUrl:
          description: A reporting URL which receives errors, if any.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        identityLocation:
          description: >-
            Specifies where to find the user ID or name: in the Subject element
            of the assertion or in one of the Attributes in the attribute
            statement.
          type: string
          maxLength: 32
          enum:
            - subject
            - attribute
          default: subject
        identityLocationAttribute:
          description: >-
            Specifies the name of the attribute where the user ID or name can be
            found.
          type: string
          maxLength: 64000
        certificate:
          description: >-
            Specifies the IdP certificate that, with public key, a service
            provider uses to validate a signed assertion.
          type: string
          maxLength: 64000
        samlArtifactResolutionService:
          description: SAML artifact resolution service for HTTP or HTTPS scheme.
          oneOf:
            - $ref: '#/components/schemas/SamlArtifactResolutionServiceHttp'
            - $ref: '#/components/schemas/SamlArtifactResolutionServiceHttps'
        singleLogoutUri:
          description: >-
            Specifies the URL at the SAML IdP where APM can send the logout
            request when a service provider initiates a logout.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        singleLogoutResponseUri:
          description: >-
            Specifies the URL at the SAML IdP where APM can send the logout
            response when the IdP initiates the logout request.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        singleLogoutBinding:
          description: >-
            Specifies the method that APM uses to send logout requests and
            responses to the SAML IdP.
          type: string
          maxLength: 64000
          enum:
            - http-post
            - http-redirect
            - http-artifact
            - soap
            - paos
          default: http-post
        ssoUri:
          description: >-
            Specifies the URL where APM redirects the user for authentication
            when the user initiates connection through the service provider.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        ssoBinding:
          description: >-
            Specifies how APM should send an authentication request to the SAML
            Identity Provider.
          type: string
          maxLength: 64000
          enum:
            - http-post
            - http-redirect
            - http-artifact
            - soap
            - paos
          default: http-post
      required:
        - name
        - serverType
        - entityId
        - ssoUri
      additionalProperties: false
    SamlService:
      description: >-
        The SAML SP service configuration that defines metadata required by an
        external SAML IdP to communicate with the SAML SP.
      type: object
      properties:
        name:
          description: The name of the SAML SP Service.
          type: string
        entityId:
          description: The FQDN of the SP virtual server.
          type: string
        spURI:
          description: >-
            The BIG-IP as SP hostname. This attribute is required when
            'entityId' is not a valid URL.
          type: string
          maxLength: 4096
          format: uri
          pattern: ^https?:(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
        isAuthnRequestSigned:
          description: >-
            Set this property to true for SP to send signed authentication
            requests to IdP.
          type: boolean
          default: false
        wantAssertionSigned:
          description: Set this property to true if SP requires signed assertions.
          type: boolean
          default: true
        wantAssertionEncrypted:
          description: Set this property to true if SP requires encrypted assertions.
          type: boolean
          default: false
        acsBinding:
          description: >-
            The method BIG-IP as SP uses to receive assertions. Default value is
            http-post.
          enum:
            - http-post
            - http-redirect
            - http-artifact
            - soap
            - paos
          default: http-post
        relayState:
          description: >-
            An absolute path or a URI where the BIG-IP as SP redirects users
            after they are successfully authenticated.
          type: string
          default: ''
        forceAuthn:
          description: >-
            Set this property to true to force users to authenticate again even
            when they have an SSO session at the identity provider. To use this
            property, the external IdP should support a force authentication
            flag.
          type: boolean
          default: false
        allowNameIdentifierCreation:
          description: >-
            Set this property to true to allow the external IdP to create a new
            identifier to represent the principal when processing requests from
            the BIG-IP system as SP.
          type: boolean
          default: true
        nameIdFormat:
          description: >-
            The type of identifier information to use. For example, if a Service
            Provider initiates SSO by sending an AuthnRequest to the IdP with
            format urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress, then
            the IdP response should contain the subject identity in email
            format.
          enum:
            - federated
            - provider
            - emailAddress
            - WindowsDomainQualifiedName
            - X509SubjectName
            - unspecified
          default: unspecified
        nameIdSpNameQualifier:
          description: >-
            Specifies that the assertion subject's identifier be returned in the
            namespace of an SP other than the requester, or in the namespace of
            a SAML affiliation group of SPs. This property is optional and can
            be a session variable.
          type: string
          default: ''
        providerName:
          description: >-
            The human-readable name of the SAML SP for use by the IdP. This
            parameter is optional.
          type: string
          default: ''
        authCtxMethods:
          description: >-
            An array of authentication context classes that the BIG-IP as SP
            will request from an IdP.
          type: array
          items:
            description: values from urn:oasis:names:tc:SAML:2.0:ac:classes
            enum:
              - InternetProtocol
              - InternetProtocolPassword
              - Kerberos
              - MobileOneFactorUnregistered
              - MobileTwoFactorUnregistered
              - MobileOneFactorContract
              - MobileTwoFactorContract
              - Password
              - PasswordProtectedTransport
              - PreviousSession
              - X509
              - PGP
              - SPKI
              - XMLDSig
              - Smartcard
              - SmartcardPKI
              - SoftwarePKI
              - Telephony
              - NomadTelephony
              - PersonalTelephony
              - AuthenticatedTelephony
              - SecureRemotePassword
              - TLSClient
              - TimeSyncToken
              - unspecified
          uniqueItems: true
          minItems: 1
        authCtxComparisonType:
          description: >-
            The comparison method that the IdP must use to compare the
            authentication context to the authentication class of the user
            session.
          enum:
            - exact
            - minimum
            - better
            - maximum
          default: exact
        signingCertificate:
          description: >-
            The name of the signing certificate file you used to upload a
            signing certificate. This property should be configured if
            isAuthnRequestSigned is set to true.
          default: ''
          type: string
          maxLength: 64000
          example: file:///some_name.key
        signingPrivateKey:
          description: >-
            The name of the signing private key file you used to upload a
            signing private key. This property should be configured if
            isAuthnRequestSigned is set to true.
          default: ''
          type: string
          maxLength: 64000
          example: file:///some_name.key
        decryptionKey:
          description: >-
            The private key that the SAML SP uses to decrypt encrypted
            assertions from the IdP. This property should be configured if
            wantAssertionEncrypted is set to true.
          default: ''
          type: string
          maxLength: 64000
          example: file:///some_name.key
        decryptionCertificate:
          description: >-
            The SAML SP certificate that the IdP uses to encrypt assertions send
            to SP. This property should be configured if wantAssertionEncrypted
            is set to true.
          default: ''
          type: string
          maxLength: 64000
          example: file:///some_name.key
        idpConnectors:
          $ref: '#/components/schemas/IdpConnectorArray'
        attributeConsumingServices:
          description: >-
            An array of objects that describes a service and the list of
            attributes to be used by the service. It is typically used with
            attributeConsumingServiceIndex in the SAML Authentication request
            used to map to an attribute-consuming service.
          type: array
          items:
            description: >-
              Defines a service and a list of attributes to be used by the
              service. It is typically used with AttributeConsumingServiceIndex
              used to map to an attributeConsumingService.
            type: object
            properties:
              name:
                description: An optional name of the attribute consuming service.
                type: string
              serviceName:
                description: The attribute consuming service name.
                type: string
              attributes:
                description: An array of attributeConsumingService attributes.
                type: array
                items:
                  type: object
                  description: An attribute consuming service object.
                  properties:
                    name:
                      description: An optional name of the attribute.
                      type: string
                    attributeName:
                      description: A unique name for the attribute.
                      type: string
                    attributeFriendlyName:
                      description: >-
                        A more human-readable form of the attribute name for
                        cases where attribute-name is complex.
                      type: string
                    attributeNameFormat:
                      description: A format of the attribute name.
                      type: string
                      enum:
                        - basic
                        - uri
                        - unspecified
                      default: unspecified
                    isRequired:
                      description: >-
                        Set this property to true if the IdP expects signed
                        authentication requests.
                      type: boolean
                      default: false
                  required:
                    - name
                    - attributeName
                    - attributeFriendlyName
                    - attributeNameFormat
                  additionalProperties: false
                minItems: 1
            required:
              - name
              - serviceName
            additionalProperties: false
          minItems: 1
        authCtxClasses:
          description: >-
            An array of authentication context classes. The BIG-IP as SP uses
            this list to validate the authentication context from an IdP against
            locally configured context methods (authCtxMethods) using the
            specified comparison type (authCtxComparisonType). This property is
            required if you use a comparison type (authCtxComparisonType) other
            than the default (exact).
          type: array
          items:
            description: values from urn:oasis:names:tc:SAML:2.0:ac:classes
            enum:
              - InternetProtocol
              - InternetProtocolPassword
              - Kerberos
              - MobileOneFactorUnregistered
              - MobileTwoFactorUnregistered
              - MobileOneFactorContract
              - MobileTwoFactorContract
              - Password
              - PasswordProtectedTransport
              - PreviousSession
              - X509
              - PGP
              - SPKI
              - XMLDSig
              - Smartcard
              - SmartcardPKI
              - SoftwarePKI
              - Telephony
              - NomadTelephony
              - PersonalTelephony
              - AuthenticatedTelephony
              - SecureRemotePassword
              - TLSClient
              - TimeSyncToken
              - unspecified
          minItems: 1
          uniqueItems: true
      required:
        - name
        - entityId
      additionalProperties: false
    SamlSignatureType:
      type: string
      maxLength: 64000
      description: >-
        Specifies the signing algorithm used to send authentication request to
        IdP
      enum:
        - sha1
        - sha256
        - sha384
        - sha512
      default: sha256
    ServerSideTLSVersions:
      title: Server-Side TLS Versions
      type: object
      description: TLS versions.
      default: {}
      properties:
        id:
          readOnly: true
          title: TLS Version ID
          description: TLS version ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        enableTLS1.3:
          type: boolean
          default: true
          title: Enable TLS 1.3
          description: Specifies whether TLS 1.3 is enabled. The default is true.
        enableTLS1.2:
          type: boolean
          default: true
          title: Enable TLS 1.2
          description: Specifies whether TLS 1.2 is enabled. The default is true.
        enableTLS1.1:
          type: boolean
          default: false
          title: Enable TLS 1.1
          description: Specifies whether TLS 1.1 is enabled. The default is false.
      additionalProperties: false
    ServerSideTlsDefault:
      type: object
      title: Server-side TLS Default
      description: TLS default properties for connections on the server side.
      properties:
        id:
          readOnly: true
          title: Server-side TLS ID
          description: Contains the ID for the TLS default for server-side connections.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        cipherstring:
          type: string
          maxLength: 64000
          default: DEFAULT
          title: Cipher String
          description: >-
            Defines the cipher string to use for server-side SSL communications
            in a string of no more than 64,000 characters.
        tlsVersions:
          title: TLS Version
          description: >-
            Specifies the TLS version information for these server-side TLS
            settings.
          type: object
          default: {}
          properties:
            id:
              readOnly: true
              title: TLS Version ID
              description: TLS version ID.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            enableTLS1.3:
              type: boolean
              default: true
              title: Enable TLS 1.3
              description: Specifies whether TLS 1.3 is enabled. The default is true.
            enableTLS1.2:
              type: boolean
              default: true
              title: Enable TLS 1.2
              description: Specifies whether TLS 1.2 is enabled. The default is true.
            enableTLS1.1:
              type: boolean
              default: false
              title: Enable TLS 1.1
              description: Specifies whether TLS 1.1 is enabled. The default is false.
          additionalProperties: false
      additionalProperties: false
    ServerSideTlsServerAuthentication:
      type: object
      title: Server-side TLS Server Authentication
      description: Defines server-side TLS server authentication.
      properties:
        id:
          readOnly: true
          title: Serverside TLS ID
          description: Contains the ID for the server-side TLS connections.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        cipherstring:
          type: string
          maxLength: 64000
          default: DEFAULT
          title: Cipher String
          description: >-
            Specifies the cipher string for server-side SSL connections in a
            string of no more than 64,000 characters.
        tlsVersions:
          title: TLS Version
          description: >-
            Specifies the TLS version information for these server-side TLS
            settings.
          type: object
          default: {}
          properties:
            id:
              readOnly: true
              title: TLS Version ID
              description: TLS version ID.
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
            enableTLS1.3:
              type: boolean
              default: true
              title: Enable TLS 1.3
              description: Specifies whether TLS 1.3 is enabled. The default is true.
            enableTLS1.2:
              type: boolean
              default: true
              title: Enable TLS 1.2
              description: Specifies whether TLS 1.2 is enabled. The default is true.
            enableTLS1.1:
              type: boolean
              default: false
              title: Enable TLS 1.1
              description: Specifies whether TLS 1.1 is enabled. The default is false.
          additionalProperties: false
        trustedCa:
          type: string
          maxLength: 64000
          title: Trusted CA Bundle File
          description: Specifies the trusted CA bundle file for authenticating TLS servers.
        enable:
          type: boolean
          title: Enable Server Certificate Verification
          description: Enables/Disables server certificate verification.
          default: true
        crlFile:
          nullable: true
          type: string
          maxLength: 64000
          title: CRL File
          description: Specifies the CRL file for authenticating TLS server certificates.
        crlFileAllowExpired:
          type: boolean
          title: Allow CRL File Expired
          description: Allows use of the specified CRL file even if it has expired.
          default: false
        template:
          title: TLS Template
          description: >-
            Specifies the TLS template type to use for authenticating TLS
            servers.
          type: string
          maxLength: 64000
          enum:
            - SERVERSIDE_TLS_SERVER_AUTH_TEMPLATE
      required:
        - template
      additionalProperties: false
    Service:
      type: object
      title: Service
      description: Service parameters configuration.
      required:
        - name
      properties:
        id:
          example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
          title: Service ID
          description: >-
            A unique, typically generated, internal ID that represents the
            service, e.g., 70e6e498-59a9-4202-a59b-25cb179e2dd6.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Service
          title: Name
          description: >-
            Specifies the service name in a string of no more than 192
            characters.
        description:
          type: string
          maxLength: 256
          default: ''
          example: My service.
          title: Description
          description: >-
            Describes the service you are configuring in no more than 256
            characters, e.g., My service.
        logging:
          title: Logging
          description: Specifies the system logging configuration.
          type: object
          properties:
            id:
              example: 1197f750-1f00-4733-8bb9-def089c7c7e5
              title: Logging Servers ID
              description: Specifies the ID of the logging servers.
              readOnly: true
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            levels:
              type: array
              default: []
              title: Log Levels
              description: Specifies the log levels for one or more services.
              items:
                type: object
                title: Service Log Level
                description: >-
                  Represents the service log level (e.g., info, warning, etc.)
                  for the data being reported.
                properties:
                  id:
                    example: 1197f750-1f00-4733-8bb9-def089c7c7e5
                    title: Logging Level ID
                    description: >-
                      Represents the ID for the service log level for the data
                      being reported.
                    readOnly: true
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  type:
                    type: string
                    maxLength: 64000
                    enum:
                      - container
                    title: Service Object Type
                    description: Specifies the type of service object.
                  container:
                    type: string
                    maxLength: 64000
                    example: f5-eesv_f5-eesv-licensing
                    title: Container
                    description: Specifies the container name.
                  level:
                    type: string
                    maxLength: 64000
                    enum:
                      - EMERGENCY
                      - ALERT
                      - CRITICAL
                      - ERROR
                      - WARNING
                      - NOTICE
                      - INFO
                      - DEBUG
                    title: Log Level
                    description: >-
                      Acceptable log levels "EMERGENCY", "ALERT", "CRITICAL",
                      "ERROR", "WARNING", "NOTICE", "INFO" and "DEBUG".
                required:
                  - type
                  - container
                  - level
                additionalProperties: false
            servers:
              type: array
              default: []
              title: Servers
              description: >-
                Specifies the location of one or more remote syslog servers to
                send messages. The default value is none.
              items:
                type: object
                title: Service Logging Server
                description: Specifies the server that receives service log messages.
                properties:
                  serverType:
                    type: string
                    maxLength: 64000
                    enum:
                      - SyslogServer
                    title: Server Type
                    description: >-
                      Specifies the type of syslog server used for logging
                      service messages. Maximum length is 64,000 characters.
                  id:
                    example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
                    title: Logging Server ID
                    description: >-
                      A unique, typically generated, internal ID that specifies
                      the logging server ID, e.g.,
                      70e6e498-59a9-4202-a59b-25cb179e2dd6.
                    readOnly: true
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  address:
                    $ref: '#/components/schemas/IpAddress'
                    title: IP Address
                    description: >-
                      Specifies IP address to which log messages are sent. The
                      default value is none.
                    example: 192.0.2.53
                  port:
                    example: 514
                    title: Port
                    description: >-
                      Specifies the port of the remote server to which syslog
                      messages are sent. The default value is 514.
                    type: integer
                    format: uint16
                    minimum: 0
                    maximum: 65535
                  destinationServerType:
                    type: string
                    maxLength: 64000
                    enum:
                      - syslog
                    readOnly: true
                    example: syslog
                    default: syslog
                    title: Destination Server Type
                    description: >-
                      Specifies the remote log destination server type. The
                      default value is syslog.
                required:
                  - serverType
                additionalProperties: false
          additionalProperties: false
        analytics:
          title: Analytics
          description: Specifies the analytics reporting configuration.
          type: object
          properties:
            id:
              example: 1197f750-1f00-4733-8bb9-def089c7c7e5
              title: Report Settings ID
              description: Represents the ID for the analytics reporting settings.
              readOnly: true
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            servers:
              title: Analytics Servers
              description: >-
                Represents the servers where analytics data will be sent. The
                data can be sent to multiple servers in parallel. The servers
                are grouped by the data exchange protocols they support.
              type: array
              default: []
              items:
                oneOf:
                  - $ref: '#/components/schemas/ServiceLoggingServer'
                  - $ref: '#/components/schemas/ServiceAnalyticsServerHttps'
                  - $ref: '#/components/schemas/ServiceAnalyticsServerOtlp'
                discriminator:
                  propertyName: serverType
          additionalProperties: false
        cluster:
          title: Clustering
          description: Specifies the clustering configuration.
          type: object
          required:
            - nodes
            - controlPlaneVlan
            - dataPlaneVlan
          properties:
            name:
              type: string
              maxLength: 192
              example: Default cluster
              title: Cluster Name
              description: >-
                Specifies a name for the cluster. The maximum length is 192
                characters.
            clusterManagementIP:
              $ref: '#/components/schemas/IpAddress'
              title: Cluster Management IP
              description: >-
                The floating IP address used for communication to the BIG-IP
                Next HA instance. This property is required to create an HA
                instance.
            virtualRouterId:
              type: integer
              minimum: 1
              maximum: 255
              title: Virtual Router ID
              description: >-
                Arbitrary unique number from 1 to 255 used to differentiate
                multiple instances of vrrpd, the daemon that handles
                administrative events for VRRP routers.
            autoFailback:
              type: boolean
              default: false
              title: Auto Failback
              description: >-
                Automatically restore operations to the first device if it is
                available, or when it becomes available if it is not.
            nodes:
              type: array
              title: Nodes
              description: >-
                List of nodes in this BIG-IP Next HA instance, where the first
                listed is the active node. This property is required to create
                an HA instance.
              maxItems: 2
              items:
                type: object
                title: Cluster Node
                description: Cluster node properties.
                required:
                  - name
                  - managementAddress
                  - controlPlaneAddress
                  - dataPlanePrimaryAddress
                properties:
                  systemId:
                    readOnly: true
                    title: System ID
                    description: System ID.
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                    example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                  name:
                    type: string
                    maxLength: 192
                    title: Name
                    description: >-
                      The name of the instance. The maximum length is 192
                      characters.
                  managementAddress:
                    $ref: '#/components/schemas/IpAddress'
                    title: Management IP
                    description: The IP address of the node on management network.
                  controlPlaneAddress:
                    $ref: '#/components/schemas/IpPrefix'
                    title: HA Network Node IP
                    description: >-
                      The IP address and netmask of the node on control plane HA
                      network.
                  username:
                    type: string
                    maxLength: 64000
                    example: admin
                    title: Username
                    description: >-
                      The username that is allowed API access. This property is
                      required together with the password to create an HA
                      instance unless a token is provided.
                  password:
                    type: string
                    maxLength: 64000
                    format: password
                    example: p12345678
                    title: Password
                    description: >-
                      The password associated with the username that is allowed
                      API access. This property is required together with the
                      username to create an HA instance unless a token is
                      provided. **Important**: Do not use the provided example
                      password in production environments.
                    minLength: 8
                  token:
                    type: string
                    maxLength: 64000
                    title: Token
                    description: >-
                      The access token string of this node as issued by the API
                      engine. This property is required to create an HA instance
                      unless a username and password is provided.
                  dataPlanePrimaryAddress:
                    $ref: '#/components/schemas/IpPrefix'
                    title: Primary Mirror IP
                    description: >-
                      Specifies the IP address and network mask used for state
                      mirroring.
                    example: 10.1.2.3/24
                  dataPlaneSecondaryAddress:
                    $ref: '#/components/schemas/IpPrefix'
                    title: Secondary Mirror IP
                    description: >-
                      Specifies the secondary IP address used for state
                      mirroring as well as the network mask.
                    example: 10.1.2.3/24
                additionalProperties: false
            dataPlaneVlan:
              type: string
              maxLength: 64000
              title: HA Data Plane VLAN
              description: The VLAN used for data plane high availablity traffic.
            controlPlaneVlan:
              type: string
              maxLength: 64000
              title: HA Control Plane VLAN
              description: The VLAN used for control plane high availablity traffic.
          additionalProperties: false
        waf:
          title: WAF
          description: Specifies the global WAF configuration.
          type: object
          properties:
            id:
              example: 1197f750-1f00-4733-8bb9-def089c7c7e5
              title: WAF Global Config ID
              description: Specifies the ID for the WAF global configuration.
              readOnly: true
              type: string
              format: uuid
              pattern: >-
                [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
            filename:
              type: string
              maxLength: 64000
              example: waf-settings.json
              title: File Name
              description: >-
                Specifies the FCDN logical name for the WAF settings file in a
                string of no more than 64,000 characters.
            wafSettings:
              type: object
              title: WAF Settings
              description: Specifies WAF global settings.
              properties:
                enforcerSettings:
                  type: object
                  title: Enforcer Settings
                  description: Enforcer settings.
                  properties:
                    allowAutoRestart:
                      type: boolean
                      default: false
                      description: >-
                        Allow waf-enforcer container to auto restart when
                        necessary after changing enforcer setting
                      title: Allow Auto Restart
                    maxRequestSize:
                      type: integer
                      minimum: 0
                      maximum: 10000000
                      example: 10000
                      title: Maximum Request Size
                      description: This value, in bytes, is used to detect a long request.
                    maxLongRequestSize:
                      type: integer
                      minimum: 0
                      maximum: 30000000
                      example: 10000000
                      title: Maximum Long Request Size
                      description: >-
                        This value, in bytes, is the max allowed size for a long
                        request.
                    maxScanInLongRequest:
                      type: integer
                      minimum: 0
                      maximum: 2147483647
                      example: 10000
                      title: Maximum Scan In Long Request
                      description: >-
                        This many bytes to scan in a request that exceed max
                        allowed size in case of transparent policy.
                    maxConcurrentLongRequests:
                      type: integer
                      minimum: 0
                      maximum: 2147483647
                      example: 10
                      title: Maximum Concurrent Long Requests
                      description: >-
                        Maximum number of concurrent long requests that the
                        system will handle.
                cookieProtection:
                  type: object
                  title: Cookie Protection
                  description: >-
                    Specifies cookie protection in a string of no more than 256
                    characters.
                  properties:
                    seed:
                      type: string
                      maxLength: 256
                      example: '123456'
                      title: SEED
                      description: >-
                        Specifies the cookie protection SEED cipher in a string
                        of no more than 512 characters.
                    digest:
                      type: string
                      maxLength: 512
                      title: Digest
                      description: >-
                        Specifies Base64 export encoding of legacy data in a
                        string of no more than 512 characters.
                attackSignatures:
                  type: object
                  title: Attack Signatures
                  description: Attack signatures.
                  properties:
                    securityUpdateFile:
                      type: string
                      maxLength: 64000
                      example: asu.im
                      description: >-
                        Specifies the FCDN logical name for the associated ASU
                        file.
                threatCampaigns:
                  type: object
                  title: Threat Campaigns
                  description: Specifies threat campaign properties.
                  properties:
                    securityUpdateFile:
                      type: string
                      maxLength: 64000
                      example: threat_campaigns.im
                      title: Threat Campaigns Update File
                      description: >-
                        Specifies the FCDN logical name for the threat campaigns
                        update file.
                botSignatures:
                  type: object
                  title: Bot Signatures
                  description: Bot signatures.
                  properties:
                    securityUpdateFile:
                      type: string
                      maxLength: 64000
                      example: bot_signaures.im
                      title: Bot Signatures Update File
                      description: >-
                        Specifies the FCDN logical name for the bot signatures
                        update file.
          additionalProperties: false
        access:
          title: Access
          description: Global Access configuration.
          type: object
          properties:
            logging:
              type: array
              title: Logging
              description: Access log settings.
              default: []
              items:
                type: object
                title: Access Log Settings
                description: Access log settings.
                properties:
                  id:
                    example: 1197f750-1f00-4733-8bb9-def089c7c7e5
                    title: ID
                    description: ID for logging levels.
                    readOnly: true
                    type: string
                    format: uuid
                    pattern: >-
                      [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  component:
                    type: string
                    maxLength: 64000
                    enum:
                      - apmd
                      - tmm
                      - websso
                      - renderer
                    title: Access component
                    description: Specifies Access component.
                  policy:
                    type: string
                    maxLength: 192
                    default: ''
                    title: Access Policy name
                    description: Access Policy name (optional).
                  level:
                    type: string
                    maxLength: 64000
                    enum:
                      - EMERGENCY
                      - ALERT
                      - CRITICAL
                      - ERROR
                      - WARNING
                      - NOTICE
                      - INFO
                      - DEBUG
                    title: Log Level
                    description: >-
                      Acceptable log levels "EMERGENCY", "ALERT", "CRITICAL",
                      "ERROR", "WARNING", "NOTICE", "INFO" and "DEBUG".
                required:
                  - component
                  - level
                additionalProperties: false
          additionalProperties: false
      additionalProperties: false
    ServiceAccess:
      type: object
      title: Access Configuration
      description: Global Access configuration.
      properties:
        logging:
          type: array
          title: Logging
          description: Access log settings.
          default: []
          items:
            type: object
            title: Access Log Settings
            description: Access log settings.
            properties:
              id:
                example: 1197f750-1f00-4733-8bb9-def089c7c7e5
                title: ID
                description: ID for logging levels.
                readOnly: true
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              component:
                type: string
                maxLength: 64000
                enum:
                  - apmd
                  - tmm
                  - websso
                  - renderer
                title: Access component
                description: Specifies Access component.
              policy:
                type: string
                maxLength: 192
                default: ''
                title: Access Policy name
                description: Access Policy name (optional).
              level:
                type: string
                maxLength: 64000
                enum:
                  - EMERGENCY
                  - ALERT
                  - CRITICAL
                  - ERROR
                  - WARNING
                  - NOTICE
                  - INFO
                  - DEBUG
                title: Log Level
                description: >-
                  Acceptable log levels "EMERGENCY", "ALERT", "CRITICAL",
                  "ERROR", "WARNING", "NOTICE", "INFO" and "DEBUG".
            required:
              - component
              - level
            additionalProperties: false
      additionalProperties: false
    ServiceAnalytics:
      type: object
      title: Analytics Reporting Settings
      description: >-
        Represents the analytics reporting settings, a list of targets where
        analytics data will be sent.
      properties:
        id:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Report Settings ID
          description: Represents the ID for the analytics reporting settings.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        servers:
          title: Analytics Servers
          description: >-
            Represents the servers where analytics data will be sent. The data
            can be sent to multiple servers in parallel. The servers are grouped
            by the data exchange protocols they support.
          type: array
          default: []
          items:
            oneOf:
              - $ref: '#/components/schemas/ServiceLoggingServer'
              - $ref: '#/components/schemas/ServiceAnalyticsServerHttps'
              - $ref: '#/components/schemas/ServiceAnalyticsServerOtlp'
            discriminator:
              propertyName: serverType
      additionalProperties: false
    ServiceAnalyticsServerHttps:
      type: object
      title: Analytics HTTPS Server
      description: Specifies service analytics server HTTPS properties.
      properties:
        serverType:
          type: string
          maxLength: 64000
          enum:
            - HttpsServer
          title: Server Type
          description: >-
            Specifies the HTTPS server type to use for analytics in a string of
            no more than 64,000 characters.
        id:
          example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
          title: Analytics HTTPS Server ID
          description: >-
            Specifies the ID of the HTTPS server used for analytics in a string
            of no more than 192 characters.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        l4ClientSide:
          type: string
          maxLength: 192
          title: L4-ClientSide Reference
          description: >-
            Specifies the name of a soft reference to an L4ClientSide
            configuration containing destinations/ports for sending analytics
            data via HTTPS. Character limit is 192 characters. Usually used for
            DCD destinations/ports.
          example: netopsL4ClientSide
          default: ''
        sourceId:
          type: string
          example: b16ec264-102e-4d57-9b89-848c1ef78b0d_10.240.105.249
          title: Source ID
          description: >-
            Represents the source ID assigned to the device by BIG-IP Modular
            Architecture Central Manager.
        tenantId:
          type: string
          default: default
          example: clientAbc
          title: Tenant ID
          description: >-
            Represents the tenant ID assigned to the instance by BIG-IP Modular
            Architecture Central Manager.
      required:
        - serverType
      additionalProperties: false
    ServiceAnalyticsServerOtlp:
      type: object
      title: Service Analytice OTLP Server
      description: Service analytics OTLP server.
      properties:
        serverType:
          type: string
          maxLength: 64000
          enum:
            - OtlpServer
          title: Server Type
          description: Server type.
        id:
          example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
          title: Server ID
          description: Analytics OTLP server ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        hostname:
          type: string
          maxLength: 64000
          example: example.example.com or 10.10.10.10
          title: Hostname
          description: Hostname or IP address representing remote Otlp analytics server.
        port:
          example: 8080
          title: Port
          description: The port of remote analytics server.
          type: integer
          format: uint16
          minimum: 0
          maximum: 65535
        associatedAddress:
          $ref: '#/components/schemas/IpAddress'
          title: Associated Address
          description: >-
            Optional ip address which is expected to be associated with hostname
            in /etc/hosts file of otel container.
        protocol:
          type: string
          maxLength: 64000
          default: GRPC
          enum:
            - GRPC
            - HTTPS
          example: GRPC
          title: Protocol
          description: >-
            Specifies the protocol used to send analytics data. Accepatable
            values "GRPC" and "HTTPS".
        type:
          type: string
          maxLength: 64000
          default: metrics
          enum:
            - metrics
            - log
            - trace
          example: metrics
          title: Type
          description: >-
            Specifies the type of analytics data. Accepatable values "metrics"
            or "log" or "trace".
        tls:
          type: boolean
          default: false
          title: mTLS
          description: Whether or not to use mTLS for the connection.
        privateKey:
          type: string
          maxLength: 64000
          default: ''
          title: Private Key
          description: Private Key for mTLS connection.
          example: >-
            -----EXAMPLE KEY BEGIN RSA PRIVATE
            KEY-----\nMIIabcde\nfghijk=\n-----END RSA PRIVATE KEY-----
        certificate:
          type: string
          maxLength: 64000
          default: ''
          title: Public Certificate
          description: Public Certificate for mTLS connection.
          example: >-
            -----BEGIN CERTIFICATE-----\nMIICabcde\nfghijk\n-----END
            CERTIFICATE-----
        rootCA:
          type: string
          maxLength: 64000
          default: ''
          title: Root Certificate Authority
          description: Root Certificate Authority for mTLS connection.
          example: >-
            -----BEGIN CERTIFICATE-----\nMIIabcde\nfghijk==\n-----END
            CERTIFICATE-----
      required:
        - serverType
        - hostname
        - port
      additionalProperties: false
    ServiceLogLevel:
      type: object
      title: Service Log Level
      description: >-
        Represents the service log level (e.g., info, warning, etc.) for the
        data being reported.
      properties:
        id:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Logging Level ID
          description: >-
            Represents the ID for the service log level for the data being
            reported.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        type:
          type: string
          maxLength: 64000
          enum:
            - container
          title: Service Object Type
          description: Specifies the type of service object.
        container:
          type: string
          maxLength: 64000
          example: f5-eesv_f5-eesv-licensing
          title: Container
          description: Specifies the container name.
        level:
          type: string
          maxLength: 64000
          enum:
            - EMERGENCY
            - ALERT
            - CRITICAL
            - ERROR
            - WARNING
            - NOTICE
            - INFO
            - DEBUG
          title: Log Level
          description: >-
            Acceptable log levels "EMERGENCY", "ALERT", "CRITICAL", "ERROR",
            "WARNING", "NOTICE", "INFO" and "DEBUG".
      required:
        - type
        - container
        - level
      additionalProperties: false
    ServiceLogging:
      type: object
      title: Service Logging
      description: Specifies properties for service logging.
      properties:
        id:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Logging Servers ID
          description: Specifies the ID of the logging servers.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        levels:
          type: array
          default: []
          title: Log Levels
          description: Specifies the log levels for one or more services.
          items:
            type: object
            title: Service Log Level
            description: >-
              Represents the service log level (e.g., info, warning, etc.) for
              the data being reported.
            properties:
              id:
                example: 1197f750-1f00-4733-8bb9-def089c7c7e5
                title: Logging Level ID
                description: >-
                  Represents the ID for the service log level for the data being
                  reported.
                readOnly: true
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              type:
                type: string
                maxLength: 64000
                enum:
                  - container
                title: Service Object Type
                description: Specifies the type of service object.
              container:
                type: string
                maxLength: 64000
                example: f5-eesv_f5-eesv-licensing
                title: Container
                description: Specifies the container name.
              level:
                type: string
                maxLength: 64000
                enum:
                  - EMERGENCY
                  - ALERT
                  - CRITICAL
                  - ERROR
                  - WARNING
                  - NOTICE
                  - INFO
                  - DEBUG
                title: Log Level
                description: >-
                  Acceptable log levels "EMERGENCY", "ALERT", "CRITICAL",
                  "ERROR", "WARNING", "NOTICE", "INFO" and "DEBUG".
            required:
              - type
              - container
              - level
            additionalProperties: false
        servers:
          type: array
          default: []
          title: Servers
          description: >-
            Specifies the location of one or more remote syslog servers to send
            messages. The default value is none.
          items:
            type: object
            title: Service Logging Server
            description: Specifies the server that receives service log messages.
            properties:
              serverType:
                type: string
                maxLength: 64000
                enum:
                  - SyslogServer
                title: Server Type
                description: >-
                  Specifies the type of syslog server used for logging service
                  messages. Maximum length is 64,000 characters.
              id:
                example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
                title: Logging Server ID
                description: >-
                  A unique, typically generated, internal ID that specifies the
                  logging server ID, e.g., 70e6e498-59a9-4202-a59b-25cb179e2dd6.
                readOnly: true
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
              address:
                $ref: '#/components/schemas/IpAddress'
                title: IP Address
                description: >-
                  Specifies IP address to which log messages are sent. The
                  default value is none.
                example: 192.0.2.53
              port:
                example: 514
                title: Port
                description: >-
                  Specifies the port of the remote server to which syslog
                  messages are sent. The default value is 514.
                type: integer
                format: uint16
                minimum: 0
                maximum: 65535
              destinationServerType:
                type: string
                maxLength: 64000
                enum:
                  - syslog
                readOnly: true
                example: syslog
                default: syslog
                title: Destination Server Type
                description: >-
                  Specifies the remote log destination server type. The default
                  value is syslog.
            required:
              - serverType
            additionalProperties: false
      additionalProperties: false
    ServiceLoggingServer:
      type: object
      title: Service Logging Server
      description: Specifies the server that receives service log messages.
      properties:
        serverType:
          type: string
          maxLength: 64000
          enum:
            - SyslogServer
          title: Server Type
          description: >-
            Specifies the type of syslog server used for logging service
            messages. Maximum length is 64,000 characters.
        id:
          example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
          title: Logging Server ID
          description: >-
            A unique, typically generated, internal ID that specifies the
            logging server ID, e.g., 70e6e498-59a9-4202-a59b-25cb179e2dd6.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        address:
          $ref: '#/components/schemas/IpAddress'
          title: IP Address
          description: >-
            Specifies IP address to which log messages are sent. The default
            value is none.
          example: 192.0.2.53
        port:
          example: 514
          title: Port
          description: >-
            Specifies the port of the remote server to which syslog messages are
            sent. The default value is 514.
          type: integer
          format: uint16
          minimum: 0
          maximum: 65535
        destinationServerType:
          type: string
          maxLength: 64000
          enum:
            - syslog
          readOnly: true
          example: syslog
          default: syslog
          title: Destination Server Type
          description: >-
            Specifies the remote log destination server type. The default value
            is syslog.
      required:
        - serverType
      additionalProperties: false
    ServiceWaf:
      type: object
      title: Service WAF
      description: Specifies service WAF properties.
      properties:
        id:
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: WAF Global Config ID
          description: Specifies the ID for the WAF global configuration.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        filename:
          type: string
          maxLength: 64000
          example: waf-settings.json
          title: File Name
          description: >-
            Specifies the FCDN logical name for the WAF settings file in a
            string of no more than 64,000 characters.
        wafSettings:
          type: object
          title: WAF Settings
          description: Specifies WAF global settings.
          properties:
            enforcerSettings:
              type: object
              title: Enforcer Settings
              description: Enforcer settings.
              properties:
                allowAutoRestart:
                  type: boolean
                  default: false
                  description: >-
                    Allow waf-enforcer container to auto restart when necessary
                    after changing enforcer setting
                  title: Allow Auto Restart
                maxRequestSize:
                  type: integer
                  minimum: 0
                  maximum: 10000000
                  example: 10000
                  title: Maximum Request Size
                  description: This value, in bytes, is used to detect a long request.
                maxLongRequestSize:
                  type: integer
                  minimum: 0
                  maximum: 30000000
                  example: 10000000
                  title: Maximum Long Request Size
                  description: >-
                    This value, in bytes, is the max allowed size for a long
                    request.
                maxScanInLongRequest:
                  type: integer
                  minimum: 0
                  maximum: 2147483647
                  example: 10000
                  title: Maximum Scan In Long Request
                  description: >-
                    This many bytes to scan in a request that exceed max allowed
                    size in case of transparent policy.
                maxConcurrentLongRequests:
                  type: integer
                  minimum: 0
                  maximum: 2147483647
                  example: 10
                  title: Maximum Concurrent Long Requests
                  description: >-
                    Maximum number of concurrent long requests that the system
                    will handle.
            cookieProtection:
              type: object
              title: Cookie Protection
              description: >-
                Specifies cookie protection in a string of no more than 256
                characters.
              properties:
                seed:
                  type: string
                  maxLength: 256
                  example: '123456'
                  title: SEED
                  description: >-
                    Specifies the cookie protection SEED cipher in a string of
                    no more than 512 characters.
                digest:
                  type: string
                  maxLength: 512
                  title: Digest
                  description: >-
                    Specifies Base64 export encoding of legacy data in a string
                    of no more than 512 characters.
            attackSignatures:
              type: object
              title: Attack Signatures
              description: Attack signatures.
              properties:
                securityUpdateFile:
                  type: string
                  maxLength: 64000
                  example: asu.im
                  description: Specifies the FCDN logical name for the associated ASU file.
            threatCampaigns:
              type: object
              title: Threat Campaigns
              description: Specifies threat campaign properties.
              properties:
                securityUpdateFile:
                  type: string
                  maxLength: 64000
                  example: threat_campaigns.im
                  title: Threat Campaigns Update File
                  description: >-
                    Specifies the FCDN logical name for the threat campaigns
                    update file.
            botSignatures:
              type: object
              title: Bot Signatures
              description: Bot signatures.
              properties:
                securityUpdateFile:
                  type: string
                  maxLength: 64000
                  example: bot_signaures.im
                  title: Bot Signatures Update File
                  description: >-
                    Specifies the FCDN logical name for the bot signatures
                    update file.
      additionalProperties: false
    SessionId:
      type: string
      maxLength: 16
      pattern: '[0-9a-fA-F]{8}'
      example: 8a72314b
      title: Session ID
      description: Session ID.
    SessionVariables:
      type: object
      title: Access Session Variables
      description: Access session variables.
      properties:
        session.user.sessionid:
          type: string
          maxLength: 16
          pattern: '[0-9a-fA-F]{8}'
          example: 8a72314b
          title: Session ID
          description: Session ID.
      additionalProperties:
        type: string
    Settings:
      title: FAST Settings
      type: object
      description: Current config for FAST.
      properties:
        deletedTemplateSets:
          type: array
          description: Template Sets that have been deleted.
          items:
            type: string
          example: []
        enableIpam:
          type: boolean
          description: Enable IPAM for Official F5 FAST Templates (Experimental/Beta).
          example: false
        ipamProviders:
          type: array
          description: IPAM Providers configuration (Experimental/Beta).
          items:
            oneOf:
              - $ref: '#/components/schemas/IpamInfoblox'
              - $ref: '#/components/schemas/IpamGeneric'
          example: []
        disableDeclarationCache:
          type: boolean
          description: Do not cache AS3 declarations.
          example: false
      additionalProperties: false
    SizeAuto:
      type: string
      description: type=size unit=auto
      enum:
        - auto
      maxLength: 4
    SizePercent:
      type: string
      description: type=size unit=percent
      pattern: ^(0|[1-9][0-9]?|100)%$
      maxLength: 4
    SizePixel:
      type: string
      description: type=size unit=pixel
      pattern: ^(0|[1-9][0-9]*)(px)?$
      maxLength: 16
    SshPublicKeyContent:
      type: string
      maxLength: 64000
      format: sshPublicKeyContent
      pattern: >-
        ^(ssh-rsa |ecdsa-sha2-nistp256 |ecdsa-sha2-nistp384 |ecdsa-sha2-nistp521
        |ssh-ed25519 )[0-9A-Za-z+/]+[=]{0,2}( .*)?$
      description: >-
        SSH authorized public key format. Authorized public key is used to
        configure access credentials and grant SSH access.
      title: SSH Public Key Content
    Sso:
      oneOf:
        - $ref: '#/components/schemas/KerberosSso'
    SsoHeader:
      type: object
      title: Header Name and Value Pair Send with SSO
      description: The header name-value pairs to send with the SSO method.
      properties:
        headerName:
          type: string
          maxLength: 256
          title: HTTP Header Name
          description: The HTTP header name.
        headerValue:
          type: string
          maxLength: 256
          title: HTTP Header Value
          description: The HTTP header value.
      additionalProperties: false
    Stack:
      oneOf:
        - $ref: '#/components/schemas/HttpRevProxy'
        - $ref: '#/components/schemas/HttpAdvancedProxy'
        - $ref: '#/components/schemas/HttpSimpleProxy'
        - $ref: '#/components/schemas/TcpRevProxy'
        - $ref: '#/components/schemas/TcpAdvancedProxy'
        - $ref: '#/components/schemas/Fastl4RevProxy'
        - $ref: '#/components/schemas/UdpRevProxy'
      discriminator:
        propertyName: stackType
    StackPolicy:
      oneOf:
        - $ref: '#/components/schemas/PerSessionAccessStackPolicy'
        - $ref: '#/components/schemas/PerRequestAccessStackPolicy'
        - $ref: '#/components/schemas/WafStackPolicy'
    String:
      type: string
      maxLength: 1024
    StringDefinition:
      title: FAST String Definition
      type: string
      description: A generic definition for a string.
      maxLength: 64000
    System:
      type: object
      title: System
      description: Specifies the system properties.
      required:
        - name
      properties:
        id:
          example: 70e6e498-59a9-4202-a59b-25cb179e2dd6
          title: System ID
          description: Specifies the device ID as a string of no more than 192 characters.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default System
          title: Name
          description: >-
            Specifies the device name as a string of no more than 192
            characters.
        description:
          type: string
          maxLength: 256
          example: Administrator's device.
          title: Description
          description: Specifies the device's description.
        hostname:
          type: string
          maxLength: 64000
          example: example.example.com
          title: Hostname
          description: Specifies the hostname of the device.
        managementIps:
          type: array
          title: Management IP Address List
          description: The host management IP address(es) in IPv4 and/or IPv6 format.
          maxItems: 2
          uniqueItems: true
          items:
            $ref: '#/components/schemas/IpPrefix'
          example: '[2001:db8:245:245::53/76, 192.168.2.53/24]'
        defaultRoute:
          $ref: '#/components/schemas/IpAddress'
          example: 192.0.2.53
          title: Default Route
          description: The default route for connections to use.
        dataplaneDebug:
          title: Dataplane Debug
          description: Specifies the dataplane debug setup configuration.
          readOnly: true
          type: object
          properties:
            state:
              type: string
              maxLength: 64000
              title: State
              description: >-
                Specifies the dataplane setup state using a value of either UP
                or DOWN.
              example: UP
              enum:
                - UP
                - DOWN
            sshPublicKey:
              example: >-
                ssh-rsa
                AAAAB3NzaC1yc2EAAAADAQABAAACAQCp22SrDzRw104aCGc8cSIP9Nzx37c19kgXylPQsClMWKVSoA21KH4oHX/mq1IcYMyTeyELBVHkUcTnF/fRd9ofvIqSmYUER6FxmkIg/oWGPySZQSbMq+6Y95WxaWeQhYppZBWhVfHmweIe0yU0V4pIhh160Ms6GtMiCIy/lb4lUHf2DncfC3X0ppkdMUfNw129EhRYggYs1snFj4Mxg7hhoQNHQD1yPbKYHPTkcitT9G+rN0fewA7hbC2gzEfbmTDZWlZyB57ECLW2CW7ybyEilBNtZhG7Mhd14ccvsf8Oh4Lem/DBsJIn0XZ7yhc/AqusUsnXCqpFuwqsPu2EmK9K8lK3oOOAMZPiRl4gl/ZXjlk62EGnDHxMNSRPRgCGCY3oxDb4Sxiomrphx1k5PxlXOCKM790E2Iln72L+93Q2UbFk+mAScim5CBMMeqeYqSYbhkWiaKL+h2QpAFCHfchZdEC1bxWEkPf9tpRh0vYEIapkz1lsW2C5gaXfG9xu7rLwVK9hVsJtf74QYGxhNDuv7we36vesSTGSItEjchh1Im4L5dUodczZKvGUJN4PhVwjHTQNToi6nX4j+vBiPeHZj83u3F5Mt36G6BzpSgP1RsYOV9+soyb/b9hPtKcxrjcsiGJ6CfllsrxfPAtrPjHVbA6UCpq2FoEOeVBB6Ops6w==
                RSA 4096 bit Keys
              title: Public SSH Key
              description: >-
                Specifies the authorized public key to use to configure access
                credentials and grant SSH access.
              type: string
              maxLength: 64000
              format: sshPublicKeyContent
              pattern: >-
                ^(ssh-rsa |ecdsa-sha2-nistp256 |ecdsa-sha2-nistp384
                |ecdsa-sha2-nistp521 |ssh-ed25519 )[0-9A-Za-z+/]+[=]{0,2}( .*)?$
            allowedIps:
              type: array
              title: Allowed IP Addresses
              description: >-
                Specifies the IP addresses of remote connections allowed to use
                SSH to communicate with this device.
              uniqueItems: true
              items:
                $ref: '#/components/schemas/IpPrefix'
              example: '[2001:db8:245:245::53/76, 192.168.2.53/24]'
            username:
              type: string
              maxLength: 64000
              title: Username
              description: >-
                Specifies the SSH login username. Maximum length is 64,000
                characters. The default is debuguser.
              default: debuguser
              readOnly: true
            port:
              type: integer
              title: Port
              description: Specifies the SSH port. The default is 2222.
              default: 2222
              readOnly: true
              minimum: 0
              maximum: 65535
          required:
            - state
          additionalProperties: false
        manifest:
          title: Manifest
          description: The manifest for the device.
          type: object
          properties:
            product:
              type: object
              title: Product
              description: Reports the version information about the overall product.
              properties:
                name:
                  type: string
                  maxLength: 192
                  title: Name
                  description: Specifies the name of the software release.
                version:
                  type: string
                  maxLength: 64000
                  title: Version
                  description: Specifies the software version.
                buildDateTime:
                  type: string
                  maxLength: 64000
                  title: Build Date Time
                  description: >-
                    Specifies the date and time of the software build running on
                    the device.
          additionalProperties: false
        timezone:
          type: string
          maxLength: 64000
          default: America/Los_Angeles
          example: America/Los_Angeles
          title: Timezone
          description: >-
            The time zone for the device. The default value is
            America/Los_Angeles.
        ntpServers:
          title: NTP servers
          description: Specifies the NTP servers.
          type: object
          properties:
            servers:
              type: array
              default: []
              title: Servers
              description: Specifies the NTP servers in the format of an array.
              items:
                $ref: '#/components/schemas/Host'
              example:
                - 0.ro.pool.ntp.org
                - 1.ro.pool.ntp.org
          additionalProperties: false
        hostDns:
          title: Host DNS
          description: The DNS server for the host to use.
          type: object
          properties:
            servers:
              type: array
              default: []
              title: Servers
              description: Specifies the host DNS servers in the format of an array.
              items:
                $ref: '#/components/schemas/IpAddress'
              example: '[2001:db8:245:245::53, 192.0.2.53]'
          additionalProperties: false
        hostNetwork:
          title: Host Network
          description: Represents the host network.
          type: object
          properties:
            networkProxy:
              type: object
              title: Network Proxy
              description: >-
                Specifies the network proxy in a string of no more than 192
                characters.
              properties:
                name:
                  type: string
                  maxLength: 192
                  example: Default Host Network.
                  title: Name
                  description: Specifies the name for the default network proxy.
                address:
                  $ref: '#/components/schemas/IpAddress'
                  example: 2001:db8:245:24345
                  title: IP Address
                  description: Specifies an IPv4 or IPv6 address for the host network.
                ports:
                  example: 80
                  title: Port
                  description: Specifies a port number for the host network.
                  type: integer
                  format: uint16
                  minimum: 0
                  maximum: 65535
                username:
                  type: string
                  maxLength: 64000
                  example: admin
                  title: Username
                  description: >-
                    Specifies a username to use for logging on to the network
                    proxy.
                password:
                  writeOnly: true
                  type: string
                  maxLength: 64000
                  format: password
                  example: p123456
                  title: Password
                  description: >-
                    Specifies a password to use for logging on to the network
                    proxy.
            defaultGateway:
              $ref: '#/components/schemas/IpAddress'
              example: 2001:db8:245:245::1
              title: Default Gateway
              description: Specifies the default gateway.
          additionalProperties: false
        logs:
          title: System Log Files
          description: Endpoint to interact with system log files.
          type: object
        cores:
          title: System Core Files
          description: Endpoint to interact with system core dump files.
          type: object
        deviceCertificate:
          title: Device Certificate
          description: The certificate installed on the device.
          type: object
          properties:
            cert:
              type: string
              maxLength: 64000
              example: testCert
              title: Certificate Name
              description: Specifies the certificate name.
            key:
              type: string
              maxLength: 64000
              example: testKey
              title: Key Name
              description: Specifies the key name for the certificate.
          additionalProperties: false
        machineID:
          type: string
          example: 432e5acd53a04eba9848fb645943db4b
          pattern: '[0-9a-fA-F]{32}'
          title: Machine ID
          description: Presents the machine ID.
        interfaces:
          type: array
          items:
            type: object
            title: Interface
            description: Interface.
            properties:
              id:
                title: Interface ID
                description: Interface ID.
                readOnly: true
                type: string
                format: uuid
                pattern: >-
                  [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
              name:
                type: string
                maxLength: 192
                example: mgmt
                readOnly: true
                title: Interface Name
                description: Interface name. e.g., mgmt, 1.1, 1.2 ...
              data:
                type: boolean
                default: true
                example: false
                title: Data Interface
                description: >-
                  Specifies whether this is a data interface (true) or a
                  management interface (false). The default is true.
              deviceId:
                type: string
                example: pci:0000:03:00.0
                readOnly: true
                title: Device Interface ID
                description: >-
                  Presents the PCI or pseudo interface ID of type PCI, tap, or
                  vbus.
              nic:
                type: string
                maxLength: 64000
                example: eth0
                title: NIC Name
                description: Specifies the name of NIC.
                readOnly: true
              macAddress:
                title: MAC Address
                description: Represents the MAC address for the associated interface.
                type: string
                maxLength: 17
                pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$
              lldpState:
                type: string
                maxLength: 64000
                title: LLDP State
                description: Reports the LLDP state.
              lldpAttributeList:
                type: array
                title: LLDP Attribute List
                description: Provides a list of LLDP attributes.
                items:
                  type: string
                  maxLength: 64000
              flowControl:
                type: string
                maxLength: 64000
                title: Flow Control
                description: Specifies flow control properties.
              forwardingMode:
                type: string
                maxLength: 64000
                title: Forwarding Mode
                description: Specifies the forwarding mode.
              sFlowPollingInterval:
                type: string
                maxLength: 64000
                title: SFlow Polling Interval
                description: Specifies the SFlow polling interval.
            required:
              - name
              - deviceId
            additionalProperties: false
          title: Network Interfaces
          description: Specifies the network interfaces.
        remoteSyslogServers:
          type: array
          title: Remote Syslog Server List
          description: Lists the remote syslog servers.
          default: []
          items:
            type: object
            title: Remote Syslog Server
            description: >-
              Properties of the remote syslog server in a string of no more than
              192 characters..
            properties:
              name:
                type: string
                maxLength: 192
              host:
                $ref: '#/components/schemas/Host'
              remotePort:
                description: >
                  A 16-bit port number used by a transport protocol such as TCP
                  or UDP.
                title: Port
                type: integer
                format: uint16
                minimum: 0
                maximum: 65535
          example:
            - name: syslogServer1
              host: 172.28.31.40
              remotePort: 514
            - name: syslogServer2
              host: 172.28.31.37
              remotePort: 51400
        platformType:
          type: string
          maxLength: 16
          enum:
            - ve
            - velos
          title: Platform
          description: Specifies the current platform.
          readOnly: true
      additionalProperties: false
    SystemCores:
      type: object
      title: System Core Files
      description: Enables the retrieval of core files from the given system
    SystemDataplaneDebug:
      type: object
      title: System Dataplane
      description: Specifies the dataplane debug configuration.
      properties:
        state:
          type: string
          maxLength: 64000
          title: State
          description: >-
            Specifies the dataplane setup state using a value of either UP or
            DOWN.
          example: UP
          enum:
            - UP
            - DOWN
        sshPublicKey:
          example: >-
            ssh-rsa
            AAAAB3NzaC1yc2EAAAADAQABAAACAQCp22SrDzRw104aCGc8cSIP9Nzx37c19kgXylPQsClMWKVSoA21KH4oHX/mq1IcYMyTeyELBVHkUcTnF/fRd9ofvIqSmYUER6FxmkIg/oWGPySZQSbMq+6Y95WxaWeQhYppZBWhVfHmweIe0yU0V4pIhh160Ms6GtMiCIy/lb4lUHf2DncfC3X0ppkdMUfNw129EhRYggYs1snFj4Mxg7hhoQNHQD1yPbKYHPTkcitT9G+rN0fewA7hbC2gzEfbmTDZWlZyB57ECLW2CW7ybyEilBNtZhG7Mhd14ccvsf8Oh4Lem/DBsJIn0XZ7yhc/AqusUsnXCqpFuwqsPu2EmK9K8lK3oOOAMZPiRl4gl/ZXjlk62EGnDHxMNSRPRgCGCY3oxDb4Sxiomrphx1k5PxlXOCKM790E2Iln72L+93Q2UbFk+mAScim5CBMMeqeYqSYbhkWiaKL+h2QpAFCHfchZdEC1bxWEkPf9tpRh0vYEIapkz1lsW2C5gaXfG9xu7rLwVK9hVsJtf74QYGxhNDuv7we36vesSTGSItEjchh1Im4L5dUodczZKvGUJN4PhVwjHTQNToi6nX4j+vBiPeHZj83u3F5Mt36G6BzpSgP1RsYOV9+soyb/b9hPtKcxrjcsiGJ6CfllsrxfPAtrPjHVbA6UCpq2FoEOeVBB6Ops6w==
            RSA 4096 bit Keys
          title: Public SSH Key
          description: >-
            Specifies the authorized public key to use to configure access
            credentials and grant SSH access.
          type: string
          maxLength: 64000
          format: sshPublicKeyContent
          pattern: >-
            ^(ssh-rsa |ecdsa-sha2-nistp256 |ecdsa-sha2-nistp384
            |ecdsa-sha2-nistp521 |ssh-ed25519 )[0-9A-Za-z+/]+[=]{0,2}( .*)?$
        allowedIps:
          type: array
          title: Allowed IP Addresses
          description: >-
            Specifies the IP addresses of remote connections allowed to use SSH
            to communicate with this device.
          uniqueItems: true
          items:
            $ref: '#/components/schemas/IpPrefix'
          example: '[2001:db8:245:245::53/76, 192.168.2.53/24]'
        username:
          type: string
          maxLength: 64000
          title: Username
          description: >-
            Specifies the SSH login username. Maximum length is 64,000
            characters. The default is debuguser.
          default: debuguser
          readOnly: true
        port:
          type: integer
          title: Port
          description: Specifies the SSH port. The default is 2222.
          default: 2222
          readOnly: true
          minimum: 0
          maximum: 65535
      required:
        - state
      additionalProperties: false
    SystemDeviceCertificate:
      type: object
      title: System Device Certificate
      description: Represents system device certificate properties.
      properties:
        cert:
          type: string
          maxLength: 64000
          example: testCert
          title: Certificate Name
          description: Specifies the certificate name.
        key:
          type: string
          maxLength: 64000
          example: testKey
          title: Key Name
          description: Specifies the key name for the certificate.
      additionalProperties: false
    SystemHostDns:
      type: object
      title: System Host DNS
      description: Specifies system host DNS properties.
      properties:
        servers:
          type: array
          default: []
          title: Servers
          description: Specifies the host DNS servers in the format of an array.
          items:
            $ref: '#/components/schemas/IpAddress'
          example: '[2001:db8:245:245::53, 192.0.2.53]'
      additionalProperties: false
    SystemHostNetwork:
      type: object
      title: System Host Network
      description: Specifies host network properties.
      properties:
        networkProxy:
          type: object
          title: Network Proxy
          description: >-
            Specifies the network proxy in a string of no more than 192
            characters.
          properties:
            name:
              type: string
              maxLength: 192
              example: Default Host Network.
              title: Name
              description: Specifies the name for the default network proxy.
            address:
              $ref: '#/components/schemas/IpAddress'
              example: 2001:db8:245:24345
              title: IP Address
              description: Specifies an IPv4 or IPv6 address for the host network.
            ports:
              example: 80
              title: Port
              description: Specifies a port number for the host network.
              type: integer
              format: uint16
              minimum: 0
              maximum: 65535
            username:
              type: string
              maxLength: 64000
              example: admin
              title: Username
              description: Specifies a username to use for logging on to the network proxy.
            password:
              writeOnly: true
              type: string
              maxLength: 64000
              format: password
              example: p123456
              title: Password
              description: Specifies a password to use for logging on to the network proxy.
        defaultGateway:
          $ref: '#/components/schemas/IpAddress'
          example: 2001:db8:245:245::1
          title: Default Gateway
          description: Specifies the default gateway.
      additionalProperties: false
    SystemLogs:
      type: object
      title: System Log Files
      description: Enables the retrieval of log files from the given system
    SystemNtpServers:
      type: object
      title: NTP Servers
      description: Specifies the NTP server definitions.
      properties:
        servers:
          type: array
          default: []
          title: Servers
          description: Specifies the NTP servers in the format of an array.
          items:
            $ref: '#/components/schemas/Host'
          example:
            - 0.ro.pool.ntp.org
            - 1.ro.pool.ntp.org
      additionalProperties: false
    SystemReady:
      type: object
      title: System Readiness
      description: Displays a system readiness indicator.
      properties:
        id:
          readOnly: true
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: System Ready ID
          description: >-
            The system ready ID, either 1 (indicating ready) or 0 (indicating
            not ready).
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        ready:
          type: boolean
          title: Ready
          description: Indicates whether the device is ready to receive a configuration.
        servicesNotReady:
          type: array
          title: Not Ready List
          description: Lists the services that are not ready.
          items:
            type: string
      additionalProperties: false
    TLSVersions:
      type: object
      title: TLS Versions
      description: TLS versions.
      default: {}
      properties:
        id:
          readOnly: true
          title: TLS Version ID
          description: TLS version ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        enableTLS1.3:
          type: boolean
          default: true
          title: Enable TLS 1.3
          description: Specifies whether TLS 1.3 is enabled. The default is true.
        enableTLS1.2:
          type: boolean
          default: true
          title: Enable TLS 1.2
          description: Specifies whether TLS 1.2 is enabled. The default is true.
        enableTLS1.1:
          type: boolean
          default: false
          title: Enable TLS 1.1
          description: Specifies whether TLS 1.1 is enabled. The default is false.
      additionalProperties: false
    Task:
      title: FAST Task
      type: object
      description: Task.
      required:
        - id
        - name
        - parameters
        - code
        - message
        - tenant
        - application
      properties:
        _links:
          title: FAST Links Definition
          type: object
          description: An object containing link references.
          properties:
            self:
              type: string
              title: Self-link
              description: Self-link to endpoint
              example: /mgmt/shared/fast/applications
              maxLength: 64000
            task:
              title: Self Task-Link
              type: string
              description: Self-link to task endpoint
              example: /mgmt/shared/fast/tasks/12345
              maxLength: 64000
          additionalProperties: false
        id:
          type: string
          description: The Task ID of this Task.
          example: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
          maxLength: 64000
        name:
          type: string
          description: Name must be valid Template in the system.
          example: examples/simple_udp_defaults
          maxLength: 192
        parameters:
          title: FAST Parameters Definition
          type: object
          description: Object must conform to specified template's schema.
          example:
            tenant: foo
            application: bar
            virtualAddress: 192.0.2.11
        code:
          type: integer
          description: The current status code of the Task.
          minimum: 200
          maximum: 599
          example: 200
        message:
          type: string
          description: Any messages (such as "success" or "in progress") for the Task.
          example: success
          maxLength: 64000
        tenant:
          type: string
          description: Tenant associated with the Task.
          example: tenant
          maxLength: 64000
        application:
          type: string
          description: Application associated with the Task.
          example: app
          maxLength: 64000
        timestamp:
          type: string
          description: >-
            Timestamp of when the job was submitted or updated for in progress
            jobs.
          format: date-time
          maxLength: 64000
      example:
        id: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
        name: examples/simple_udp_defaults
        parameters: {}
        code: 200
        message: success
        tenant: tenant
        application: app
        timestamp: '2019-08-24T14:15:22Z'
        _links:
          self: /mgmt/shared/fast/tasks
      additionalProperties: false
    TaskList:
      title: FAST Task List
      type: array
      description: Task List.
      items:
        title: FAST Task
        type: object
        description: Task.
        required:
          - id
          - name
          - parameters
          - code
          - message
          - tenant
          - application
        properties:
          _links:
            title: FAST Links Definition
            type: object
            description: An object containing link references.
            properties:
              self:
                type: string
                title: Self-link
                description: Self-link to endpoint
                example: /mgmt/shared/fast/applications
                maxLength: 64000
              task:
                title: Self Task-Link
                type: string
                description: Self-link to task endpoint
                example: /mgmt/shared/fast/tasks/12345
                maxLength: 64000
            additionalProperties: false
          id:
            type: string
            description: The Task ID of this Task.
            example: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
            maxLength: 64000
          name:
            type: string
            description: Name must be valid Template in the system.
            example: examples/simple_udp_defaults
            maxLength: 192
          parameters:
            title: FAST Parameters Definition
            type: object
            description: Object must conform to specified template's schema.
            example:
              tenant: foo
              application: bar
              virtualAddress: 192.0.2.11
          code:
            type: integer
            description: The current status code of the Task.
            minimum: 200
            maximum: 599
            example: 200
          message:
            type: string
            description: Any messages (such as "success" or "in progress") for the Task.
            example: success
            maxLength: 64000
          tenant:
            type: string
            description: Tenant associated with the Task.
            example: tenant
            maxLength: 64000
          application:
            type: string
            description: Application associated with the Task.
            example: app
            maxLength: 64000
          timestamp:
            type: string
            description: >-
              Timestamp of when the job was submitted or updated for in progress
              jobs.
            format: date-time
            maxLength: 64000
        example:
          id: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
          name: examples/simple_udp_defaults
          parameters: {}
          code: 200
          message: success
          tenant: tenant
          application: app
          timestamp: '2019-08-24T14:15:22Z'
          _links:
            self: /mgmt/shared/fast/tasks
        additionalProperties: false
      example:
        - id: ff70c2c0-af21-44c8-8fec-18e2d82eabf0
          name: examples/simple_udp_defaults
          parameters: {}
          code: 200
          message: success
          tenant: tenant
          application: app
          timestamp: '2019-08-24T14:15:22Z'
          _links:
            self: /mgmt/shared/fast/tasks
        - id: 301ee9ed-e73e-4108-a9a2-3104509d7880
          name: examples/simple_udp_defaults
          parameters: {}
          code: 0
          message: in progress
          tenant: tenant
          application: app
          timestamp: '2019-08-24T14:15:22Z'
          _links:
            self: /mgmt/shared/fast/tasks
        - id: 7908d0b0-c4cc-41ed-a7e0-9d2d376a3c7b
          name: examples/simple_udp_defaults
          parameters: {}
          code: 202
          message: in progress
          tenant: tenant
          application: app
          timestamp: '2019-08-24T14:15:22Z'
          _links:
            self: /mgmt/shared/fast/tasks
        - id: 21697cbe-56b9-4d50-bd54-fd84f8c056de
          name: examples/simple_udp_defaults
          parameters: {}
          code: 422
          message: declaration is invalid
          tenant: tenant
          application: app
          timestamp: '2019-08-24T14:15:22Z'
          _links:
            self: /mgmt/shared/fast/tasks
    TaskResponseDefinition:
      type: object
      title: Task Response Definition
      description: Task response definition.
      properties:
        id:
          type: string
          title: ID
          description: Task ID
          maxLength: 64000
        results:
          type: array
          title: Result List
          description: Task Results.
          items:
            type: object
            title: Result Definition
            description: Result definition.
            properties:
              code:
                title: Code
                description: Result Code
                type: integer
                minimum: 100
                maximum: 600
              message:
                type: string
                title: Message
                description: Message.
                maxLength: 64000
              host:
                type: string
                title: Host
                description: Host.
                maxLength: 64000
              tenant:
                type: string
                title: Tenant
                description: Tenant.
                maxLength: 64000
              runTime:
                type: integer
                title: Runtime
                description: Runtime.
                minimum: 10
                maximum: 300000
            additionalProperties: false
        declaration:
          type: object
          title: Declaration Definition
          description: >-
            See additional documentation for information on the AS3 service
            definition.
      additionalProperties: false
    TcpAdvancedProxy:
      type: object
      title: TCP Advanced Proxy
      description: TCP advanced proxy configuration.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - TcpAdvancedProxy
          title: Stack Type
          description: >-
            A string of no more than 64,000 characters that specifies the type
            of stack, e.g., TCP advanced-proxy-related properties.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: Stack ID
          description: >-
            A unique, typically generated, internal ID that represents the
            stack, e.g., 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Stack for TCP advanced-proxy-related properties
          title: Stack Name
          description: >-
            A string of no more than 192 characters that represents the name of
            the stack that stores the TCP advanced proxy connections, e.g.,
            Default Stack.
        description:
          type: string
          maxLength: 256
          default: ''
          example: Netop's TCP Advanced Proxy.
          title: Description
          description: >-
            A string of no more than 256 characters that describes what this
            stack does in the context of TCP advanced proxy.
        enabled:
          type: boolean
          default: true
          title: Enable New Connections
          description: >-
            Controls whether the proxy accepts new connections. The default is
            enabled. When disabled, the proxy does not accept new connections.
        clientSide:
          type: object
          title: Client-Side Parameters
          description: Parameters for handling client-side connections.
          properties:
            l4ClientSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Client Side
              description: >-
                A string of 1 to 192 characters that represents an L4
                client-side object (soft reference).
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: >-
                Criteria the proxy uses for handling client-side TCP
                connections.
            tls:
              oneOf:
                - $ref: '#/components/schemas/ClientSideTlsDefault'
                - $ref: '#/components/schemas/ClientSideTlsMulti'
              title: TLS
              description: Specifies the TLS version for client-side connection handling.
            persistence:
              oneOf:
                - $ref: '#/components/schemas/PersistenceDestAddr'
                - $ref: '#/components/schemas/PersistenceSourceAddr'
                - $ref: '#/components/schemas/PersistenceSsl'
                - $ref: '#/components/schemas/PersistenceUniversal'
              title: Virtual Server Persistence
              description: Defines how to determine persistence for this virtual server.
        serverSide:
          type: object
          title: Server-Side Parameters
          description: Configures server-side parameters for virtual server persistence.
          properties:
            monitors:
              type: object
              nullable: true
              title: Monitors
              description: Defines monitors for TCP advanced proxy traffic.
              properties:
                http:
                  title: HTTP
                  description: >-
                    Verifies the HTTP service by attempting to receive specific
                    content from a web page.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                icmp:
                  title: ICMP
                  description: >-
                    Monitors the health of the Internet Control Message Protocol
                    (ICMP) service running on a network.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                inband:
                  title: Inband
                  description: >-
                    Passively monitors a configured pool member to determine its
                    health status.
                  type: object
                  nullable: true
                  properties:
                    failures:
                      title: Failures
                      description: >-
                        The number of failed attempts before marking a pool
                        member down.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    failureInterval:
                      title: Failure Interval
                      description: The interval, in seconds, in which failures are counted.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    responseTime:
                      title: Response Time
                      description: >-
                        The interval, in seconds, in which a pool member must
                        respond with data.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    retryTime:
                      title: Retry Time
                      description: >-
                        The wait time, in seconds, before retrying whether a
                        pool member is up.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                tcp:
                  title: TCP
                  description: >-
                    Checks the health of servers by performing a TCP handshake
                    with the server and then promptly closing the connection.
                    The handshake allows the monitor to see if the port is
                    listening and allowing new connections.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: ''
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                  additionalProperties: false
                https:
                  title: HTTPS
                  description: >-
                    Checks the status of HTTPS traffic by attempting to receive
                    specific content from a web page protected by SSL security.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                http2:
                  title: HTTP/2
                  description: >-
                    Verifies the HTTP/2 service by attempting to receive
                    specific content from a web page.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
            l4ServerSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Server Side
              description: >-
                A string of 1 to 192 characters that represents an L4
                server-side object (soft reference)..
            loadBalancing:
              example: round-robin
              title: Load Balancing
              description: >-
                Configures the load balancing mode. Options are round robin,
                least connections, predictive, weighted round robin, ratio least
                connections, ratio session, and fastest. The default is round
                robin.
              type: string
              maxLength: 64000
              enum:
                - round-robin
                - least-connections
                - predictive
                - weighted-round-robin
                - ratio-least-connections
                - ratio-session
                - fastest
              default: round-robin
            ignorePersistedWeight:
              type: boolean
              default: false
              title: Ignore Persisted Weight
              description: >-
                Does not count the weight of persisted connections on pool
                members when making load balancing decisions.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: Defines server-side TCP connections.
            tls:
              oneOf:
                - $ref: '#/components/schemas/ServerSideTlsDefault'
                - $ref: '#/components/schemas/ServerSideTlsServerAuthentication'
              title: TLS
              description: Specifies the TLS version for server-side connection handling.
        policies:
          type: array
          default: []
          title: Policies
          description: Policies for the stack associated with server-side connections.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: iRules
          description: Lists the iRules to run in the context of TCP advanced proxy.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Packet Mirroring
          description: >-
            Controls whether packet mirroring is enabled for this proxy. The
            default is disabled, meaning packets are not mirrored.
        analytics:
          type: object
          title: TCP Analytics
          description: TCP analytics collection settings.
          properties:
            tcp:
              title: TCP Analytics Collection Settings
              description: >-
                Settings for TCP analytics collection. Defines which TCP
                analytics data to collect for this stack. Reducing the amount of
                analytics data collected can improve system performance.
              type: object
              properties:
                id:
                  readOnly: true
                  title: Analytics Settings ID
                  description: The ID number for TCP analytics settings.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                collectCity:
                  type: boolean
                  default: false
                  title: Collect City
                  description: Specifies, when true, that city name should be collected.
                collectContinent:
                  type: boolean
                  default: true
                  title: Collect Continent
                  description: >-
                    Specifies, when true, that continent name should be
                    collected.
                collectCountry:
                  type: boolean
                  default: true
                  title: Collect Country
                  description: Specifies, when true, that country name should be collected.
                collectNexthop:
                  type: boolean
                  default: false
                  title: Collect Next Hop Address
                  description: >-
                    Specifies, when true, that next hop address should be
                    collected.
                collectPostCode:
                  type: boolean
                  default: false
                  title: Collect Post Code
                  description: Specifies, when true, that post code should be collected.
                collectRegion:
                  type: boolean
                  default: false
                  title: Collect Region
                  description: Specifies, when true, that region should be collected.
                collectRemoteHostIp:
                  type: boolean
                  default: false
                  title: Collect Remote Host IP
                  description: >-
                    Specifies, when true, that IP address of remote host should
                    be collected.
                collectRemoteHostSubnet:
                  type: boolean
                  default: true
                  title: Collect Remote Host Subnet
                  description: >-
                    Specifies, when true, that subnet of remote host should be
                    collected.
                collectedByClientSide:
                  type: boolean
                  default: true
                  title: Collect Client Side
                  description: >-
                    Specifies, when true, that analytics data on client side
                    should be collected.
                collectedByServerSide:
                  type: boolean
                  default: false
                  title: Collect Server Side
                  description: >-
                    Specifies, when true, that analytics data on server side
                    should be collected.
                description:
                  type: string
                  maxLength: 256
                  title: Description
                  description: >-
                    Description of TCP settings. The maximum length is 256
                    characters.
              additionalProperties: false
      required:
        - name
        - stackType
      additionalProperties: false
    TcpDefault:
      type: object
      title: TCP Default
      description: TCP default.
      properties:
        id:
          readOnly: true
          title: TCP ID
          description: Id for tcp.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        idleTimeout:
          title: Idle Timeout
          description: >-
            Specifies the number of seconds that a connection is idle before the
            connection is eligible for deletion. The default value is 300
            seconds.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
      additionalProperties: false
    TcpLan:
      type: object
      title: TCP LAN
      description: TCP LAN.
      properties:
        id:
          readOnly: true
          title: TCP LAN ID
          description: Id for tcp.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        idleTimeout:
          title: Idle Timeout
          description: >-
            Specifies the number of seconds that a connection is idle before the
            connection is eligible for deletion. The default value is 300
            seconds.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        template:
          title: Template
          description: Template type for tcp.
          type: string
          maxLength: 64000
          enum:
            - TCP_LAN_TEMPLATE
      required:
        - template
      additionalProperties: false
    TcpMobile:
      type: object
      title: TCP Mobile
      description: TCP mobile.
      properties:
        id:
          readOnly: true
          title: TCP Mobile ID
          description: Id for tcp.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        idleTimeout:
          title: Idle Timeout
          description: >-
            Specifies the number of seconds that a connection is idle before the
            connection is eligible for deletion. The default value is 300
            seconds.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        template:
          title: Template
          description: Template type for tcp.
          type: string
          maxLength: 64000
          enum:
            - TCP_MOBILE_TEMPLATE
      required:
        - template
      additionalProperties: false
    TcpModern:
      type: object
      title: TCP Modern
      description: TCP modern.
      properties:
        id:
          readOnly: true
          title: TCP Modern ID
          description: Id for tcp.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        idleTimeout:
          title: Idle Timeout
          description: >-
            Specifies the number of seconds that a connection is idle before the
            connection is eligible for deletion. The default value is 300
            seconds.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        template:
          title: Template
          description: Template type for tcp.
          type: string
          maxLength: 64000
          enum:
            - TCP_MODERN_TEMPLATE
      required:
        - template
      additionalProperties: false
    TcpRevProxy:
      type: object
      title: TCP Reverse Proxy
      description: TCP Rev Proxy.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - TcpRevProxy
          title: Stack Type
          description: Stack type.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: Stack ID
          description: ID for stack.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Stack
          title: Stack Name
          description: Name for stack.
        description:
          type: string
          maxLength: 256
          default: ''
          example: Olivia's TCP Reverse Proxy.
          title: Description
          description: Description for stack.
        enabled:
          type: boolean
          default: true
          title: Enabled
          description: >-
            If set to false, the proxy will not accept new connections. Defaults
            to true.
        clientSide:
          type: object
          title: Client Side Parameters
          description: Client side parameters.
          properties:
            l4ClientSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Client Side
              description: A soft reference, by name, to an L4 Clientside object.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: TCP for client side.
            tls:
              oneOf:
                - $ref: '#/components/schemas/ClientSideTlsDefault'
              title: TLS
              description: TLS for client side.
            persistence:
              oneOf:
                - $ref: '#/components/schemas/PersistenceDestAddr'
                - $ref: '#/components/schemas/PersistenceSourceAddr'
                - $ref: '#/components/schemas/PersistenceSsl'
                - $ref: '#/components/schemas/PersistenceUniversal'
              title: Virtual Server Persistence
              description: Virtual server persistence configuration.
        serverSide:
          type: object
          title: Server Side Parameters
          description: Server side parameters.
          properties:
            monitors:
              type: object
              nullable: true
              title: Monitors
              description: Monitors.
              properties:
                http:
                  title: HTTP
                  description: HTTP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                icmp:
                  title: ICMP
                  description: ICMP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                inband:
                  title: Inband
                  description: INBAND monitor.
                  type: object
                  nullable: true
                  properties:
                    failures:
                      title: Failures
                      description: >-
                        The number of failed attempts before marking a pool
                        member down.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    failureInterval:
                      title: Failure Interval
                      description: The interval, in seconds, in which failures are counted.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    responseTime:
                      title: Response Time
                      description: >-
                        The interval, in seconds, in which a pool member must
                        respond with data.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    retryTime:
                      title: Retry Time
                      description: >-
                        The wait time, in seconds, before retrying whether a
                        pool member is up.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
                tcp:
                  title: TCP
                  description: TCP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: ''
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                  additionalProperties: false
                https:
                  title: HTTPS
                  description: HTTPS monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
                http2:
                  title: HTTP2
                  description: HTTP2 monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    sendString:
                      title: Send String
                      description: Text string to send to the target.
                      type: string
                      maxLength: 64000
                      default: GET / HTTP/1.1
                    receiveString:
                      title: Receive String
                      description: >-
                        The regular expression, when matched, indicated the
                        target is up.
                      type: string
                      maxLength: 64000
                      default: .*
                    receiveDisableString:
                      title: Receive Disable String
                      description: >-
                        The regular expression, when matched, disables the
                        target.
                      type: string
                      maxLength: 64000
                      default: ''
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    username:
                      title: User Name
                      description: The username for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                    password:
                      title: Password
                      description: The password for HTTP authentication.
                      type: string
                      maxLength: 64000
                      default: ''
                      writeOnly: true
                  additionalProperties: false
            l4ServerSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Server Side
              description: A soft reference, by name, to an L4 Serverside object.
            loadBalancing:
              example: round-robin
              title: Load Balancing
              description: Load balancing.
              type: string
              maxLength: 64000
              enum:
                - round-robin
                - least-connections
                - predictive
                - weighted-round-robin
                - ratio-least-connections
                - ratio-session
                - fastest
              default: round-robin
            ignorePersistedWeight:
              type: boolean
              default: false
              title: Ignore Persisted Weight
              description: >-
                Do not count the weight of persisted connections on pool members
                when making load balancing decisions.
            tcp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/TcpModern'
                - $ref: '#/components/schemas/TcpMobile'
                - $ref: '#/components/schemas/TcpLan'
                - $ref: '#/components/schemas/TcpWan'
                - $ref: '#/components/schemas/TcpDefault'
              title: TCP
              description: TCP for server side.
            tls:
              oneOf:
                - $ref: '#/components/schemas/ServerSideTlsDefault'
                - $ref: '#/components/schemas/ServerSideTlsServerAuthentication'
              title: TLS
              description: TLS for server side.
        policies:
          type: array
          default: []
          title: Policies
          description: Associate array of stack policies.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: iRules
          description: Specifies iRules for the associated stack.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Packet Mirroring
          description: >-
            If set to enabled, packet mirroring will be enabled for this proxy.
            Defaults to disabled.
        analytics:
          type: object
          title: Analytics Collection Settings
          description: >-
            TCP analytics collection settings. These settings define which TCP
            analytics data will be collected for this stack. Reducing amount of
            analytics data collected can improve system performance.
          properties:
            tcp:
              title: TCP
              description: >-
                Settings of TCP analytics collection. These settings define
                which TCP analytics data will be collected for this stack.
              type: object
              properties:
                id:
                  readOnly: true
                  title: Analytics Settings ID
                  description: The ID number for TCP analytics settings.
                  type: string
                  format: uuid
                  pattern: >-
                    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                  example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                collectCity:
                  type: boolean
                  default: false
                  title: Collect City
                  description: Specifies, when true, that city name should be collected.
                collectContinent:
                  type: boolean
                  default: true
                  title: Collect Continent
                  description: >-
                    Specifies, when true, that continent name should be
                    collected.
                collectCountry:
                  type: boolean
                  default: true
                  title: Collect Country
                  description: Specifies, when true, that country name should be collected.
                collectNexthop:
                  type: boolean
                  default: false
                  title: Collect Next Hop Address
                  description: >-
                    Specifies, when true, that next hop address should be
                    collected.
                collectPostCode:
                  type: boolean
                  default: false
                  title: Collect Post Code
                  description: Specifies, when true, that post code should be collected.
                collectRegion:
                  type: boolean
                  default: false
                  title: Collect Region
                  description: Specifies, when true, that region should be collected.
                collectRemoteHostIp:
                  type: boolean
                  default: false
                  title: Collect Remote Host IP
                  description: >-
                    Specifies, when true, that IP address of remote host should
                    be collected.
                collectRemoteHostSubnet:
                  type: boolean
                  default: true
                  title: Collect Remote Host Subnet
                  description: >-
                    Specifies, when true, that subnet of remote host should be
                    collected.
                collectedByClientSide:
                  type: boolean
                  default: true
                  title: Collect Client Side
                  description: >-
                    Specifies, when true, that analytics data on client side
                    should be collected.
                collectedByServerSide:
                  type: boolean
                  default: false
                  title: Collect Server Side
                  description: >-
                    Specifies, when true, that analytics data on server side
                    should be collected.
                description:
                  type: string
                  maxLength: 256
                  title: Description
                  description: >-
                    Description of TCP settings. The maximum length is 256
                    characters.
              additionalProperties: false
      required:
        - name
        - stackType
      additionalProperties: false
    TcpWan:
      type: object
      title: TCP WAN
      description: TCP WAN.
      properties:
        id:
          readOnly: true
          title: TCP WAN ID
          description: The ID for TCP WAN.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        idleTimeout:
          title: Idle Timeout
          description: >-
            Specifies the number of seconds that a connection is idle before the
            connection is eligible for deletion. The default value is 300
            seconds.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
        template:
          title: Template
          description: Template type for TCP settings.
          type: string
          maxLength: 64000
          enum:
            - TCP_WAN_TEMPLATE
      required:
        - template
      additionalProperties: false
    Template:
      title: FAST Template
      type: object
      description: >-
        An JSON-serialized, f5-fast-core Template object. All fields prefixed
        with an underscore should be treated as internal/private and only
        intended for Template.fromJson(). As such, they are not documented here.
      properties:
        title:
          type: string
          description: A 'pretty name' for the template
          example: Simple UDP Application
          maxLength: 64000
        description:
          type: string
          description: Template description.
          maxLength: 256
          example: >-
            ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION **
            This template is an example of how one might build a simple UDP
            application with load balancing. It allows the user to provide a
            virtual IP address and port along with a list of UDP server
            addresses. The user-supplied values are inserted when the template
            is rendered, yielding an AS3 declaration suitable for submission to
            BIG-IP.
        definitions:
          title: FAST Parameters Definition
          type: object
          description: Object must conform to specified template's schema.
          example:
            tenant: foo
            application: bar
            virtualAddress: 192.0.2.11
        target:
          type: string
          description: >-
            A hint to Template consumers about the intended purpose of the
            Template
          default: as3
          example: as3
          maxLength: 64000
        templateText:
          type: string
          description: A Mustache-templated string
          example: |
            {% raw %}
              {{! NOTE: ignore raw/endraw markers }}
              { 'class': 'ADC', 'schemaVersion': '3.0.0', '{{tenant_name}}': { 'class': 'Tenant', '{{application_name}}': { 'class': 'Application', 'template': 'udp', 'serviceMain': { 'class': 'Service_UDP', 'virtualAddresses': [ '{{virtual_address}}' ], 'virtualPort': {{virtual_port:types:port}}, 'pool': '{{application_name}}_Pool1' }, '{{application_name}}_Pool1': { 'class': 'Pool', 'monitors': [ 'icmp' ], 'members': [ { 'serverAddresses': {{server_addresses::array}}, 'servicePort': {{service_port:types:port}} } ] } } } }
            {% endraw %}
          maxLength: 64000
        defaultParameters:
          title: FAST Parameters Definition
          type: object
          description: Object must conform to specified template's schema.
          example:
            tenant: foo
            application: bar
            virtualAddress: 192.0.2.11
        sourceType:
          type: string
          description: >-
            A hint on where templateText originated from (e.g., 'MST' for
            loading via Template.loadMst())
          example: YAML
          maxLength: 64000
        sourceText:
          type: string
          description: The raw text of the source the Template class parsed
          example: |
            {% raw %}
              {{! NOTE: ignore raw/endraw markers }}
              {{! ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION ** This template is an example of how one might build a simple UDP application with load balancing. It allows the user to provide a virtual IP address and port along with a list of UDP server addresses. The user-supplied values are inserted when the template is rendered, yielding an AS3 declaration suitable for submission to BIG-IP. }}
              { 'class': 'ADC', 'schemaVersion': '3.0.0', '{{tenant_name}}': { 'class': 'Tenant', '{{application_name}}': { 'class': 'Application', 'template': 'udp', 'serviceMain': { 'class': 'Service_UDP', 'virtualPort': {{virtual_port::integer}}, 'virtualAddresses': [ '{{virtual_address}}' ], 'pool': '{{application_name}}_Pool1' }, '{{application_name}}_Pool1': { 'class': 'Pool', 'monitors': [ 'icmp' ], 'members': [ { 'servicePort': {{server_port::integer}}, 'serverAddresses': {{server_addresses::array}} } ] } } } }
            {% endraw %}
          maxLength: 64000
        sourceHash:
          type: string
          description: >-
            A sha256 hash of the sourceText (useful for determining if a
            Template has changed)
          example: a52a2f6cd3d03f7cdec09248fd59fc75b30fa14fa067a137628e7e6ee0b43b4f
          maxLength: 64000
        contentType:
          type: string
          description: A MIME type for the intended output of Template.render()
          default: text/plain
          maxLength: 64000
        httpForward:
          description: >-
            Information for forwarding the rendered result to an HTTP endpoint.
            Either a URL string or an Axios config object
          oneOf:
            - $ref: '#/components/schemas/StringDefinition'
            - $ref: '#/components/schemas/ObjectDefinition'
          nullable: true
      additionalProperties: false
    TemplateList:
      title: FAST Templates
      type: array
      description: A list of template objects.
      items:
        type: object
        properties:
          name:
            type: string
            description: Name of the template.
            maxLength: 192
          hash:
            type: string
            description: The sha256 of the template source text.
            maxLength: 64000
          appsList:
            type: array
            description: A list of applications using the template.
            items:
              title: FAST Application Definition
              type: object
              description: Application Definition.
              required:
                - name
                - parameters
              properties:
                name:
                  type: string
                  description: Must be valid Template in the system.
                  example: examples/simple_udp_defaults
                  maxLength: 192
                parameters:
                  title: FAST Parameters Definition
                  type: object
                  description: Object must conform to specified template's schema.
                  example:
                    tenant: foo
                    application: bar
                    virtualAddress: 192.0.2.11
                allowOverwrite:
                  type: boolean
                  description: >-
                    Do not error if an Application with the same name already
                    exists in the tenant.
                  default: true
              example:
                name: examples/simple_udp_defaults
                parameters: {}
                allowOverwrite: true
              additionalProperties: false
          title:
            type: string
            description: A "pretty name" for the Template
            example: Simple UDP Application
          description:
            type: string
            description: Template description
            example: >-
              ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION
              ** This Template is an example of how one might build a simple UDP
              Application with load balancing. It allows the user to provide a
              virtual IP address and port along with a list of UDP server
              addresses. The user-supplied values are inserted when the Template
              is rendered, yielding an AS3 declaration suitable for submission
              to BIG-IP.
    TemplateNameList:
      title: FAST Template Names
      type: array
      description: A list of template names.
      items:
        type: string
      example:
        - example/httpTemplate
        - example/httpsTemplate
    TemplateSet:
      title: FAST Template Set
      type: object
      description: Template Set.
      properties:
        name:
          type: string
          description: Name of the Template Set.
          example: examples
          maxLength: 192
        hash:
          type: string
          description: A sha256 hash of the Template hashes.
          example: b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715
          maxLength: 64000
        supported:
          type: boolean
          description: The Template Set is officially supported by F5.
          example: false
        templates:
          title: FAST Templates
          type: array
          description: A list of template objects.
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the template.
                maxLength: 192
              hash:
                type: string
                description: The sha256 of the template source text.
                maxLength: 64000
              appsList:
                type: array
                description: A list of applications using the template.
                items:
                  title: FAST Application Definition
                  type: object
                  description: Application Definition.
                  required:
                    - name
                    - parameters
                  properties:
                    name:
                      type: string
                      description: Must be valid Template in the system.
                      example: examples/simple_udp_defaults
                      maxLength: 192
                    parameters:
                      title: FAST Parameters Definition
                      type: object
                      description: Object must conform to specified template's schema.
                      example:
                        tenant: foo
                        application: bar
                        virtualAddress: 192.0.2.11
                    allowOverwrite:
                      type: boolean
                      description: >-
                        Do not error if an Application with the same name
                        already exists in the tenant.
                      default: true
                  example:
                    name: examples/simple_udp_defaults
                    parameters: {}
                    allowOverwrite: true
                  additionalProperties: false
              title:
                type: string
                description: A "pretty name" for the Template
                example: Simple UDP Application
              description:
                type: string
                description: Template description
                example: >-
                  ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN
                  PRODUCTION ** This Template is an example of how one might
                  build a simple UDP Application with load balancing. It allows
                  the user to provide a virtual IP address and port along with a
                  list of UDP server addresses. The user-supplied values are
                  inserted when the Template is rendered, yielding an AS3
                  declaration suitable for submission to BIG-IP.
        schemas:
          type: array
          description: A list of user supplied schema.
          items:
            type: object
            title: Schema
            description: A schema object.
            properties:
              name:
                type: string
                description: Schema name.
                maxLength: 192
              hash:
                type: string
                description: A sha256 hash of the schema.
                maxLength: 64000
          example:
            - name: examples/types
              hash: 0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c
        dataFiles:
          type: array
          description: A list of data files associated with the Template Set.
          items:
            title: Data File
            type: object
            description: A data file object.
            properties:
              name:
                type: string
                description: data file name.
                maxLength: 192
              hash:
                type: string
                description: A sha256 hash of the data file.
                maxLength: 64000
            example:
              - name: testSet/test
                hash: >-
                  0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c
        enabled:
          type: boolean
          description: Template Set is installed and ready to use
          example: true
      additionalProperties: false
    TemplateSetList:
      title: FAST Template Set List
      type: array
      description: Template Set List.
      items:
        title: FAST Template Set
        type: object
        description: Template Set.
        properties:
          name:
            type: string
            description: Name of the Template Set.
            example: examples
            maxLength: 192
          hash:
            type: string
            description: A sha256 hash of the Template hashes.
            example: b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715
            maxLength: 64000
          supported:
            type: boolean
            description: The Template Set is officially supported by F5.
            example: false
          templates:
            title: FAST Templates
            type: array
            description: A list of template objects.
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the template.
                  maxLength: 192
                hash:
                  type: string
                  description: The sha256 of the template source text.
                  maxLength: 64000
                appsList:
                  type: array
                  description: A list of applications using the template.
                  items:
                    title: FAST Application Definition
                    type: object
                    description: Application Definition.
                    required:
                      - name
                      - parameters
                    properties:
                      name:
                        type: string
                        description: Must be valid Template in the system.
                        example: examples/simple_udp_defaults
                        maxLength: 192
                      parameters:
                        title: FAST Parameters Definition
                        type: object
                        description: Object must conform to specified template's schema.
                        example:
                          tenant: foo
                          application: bar
                          virtualAddress: 192.0.2.11
                      allowOverwrite:
                        type: boolean
                        description: >-
                          Do not error if an Application with the same name
                          already exists in the tenant.
                        default: true
                    example:
                      name: examples/simple_udp_defaults
                      parameters: {}
                      allowOverwrite: true
                    additionalProperties: false
                title:
                  type: string
                  description: A "pretty name" for the Template
                  example: Simple UDP Application
                description:
                  type: string
                  description: Template description
                  example: >-
                    ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN
                    PRODUCTION ** This Template is an example of how one might
                    build a simple UDP Application with load balancing. It
                    allows the user to provide a virtual IP address and port
                    along with a list of UDP server addresses. The user-supplied
                    values are inserted when the Template is rendered, yielding
                    an AS3 declaration suitable for submission to BIG-IP.
          schemas:
            type: array
            description: A list of user supplied schema.
            items:
              type: object
              title: Schema
              description: A schema object.
              properties:
                name:
                  type: string
                  description: Schema name.
                  maxLength: 192
                hash:
                  type: string
                  description: A sha256 hash of the schema.
                  maxLength: 64000
            example:
              - name: examples/types
                hash: >-
                  0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c
          dataFiles:
            type: array
            description: A list of data files associated with the Template Set.
            items:
              title: Data File
              type: object
              description: A data file object.
              properties:
                name:
                  type: string
                  description: data file name.
                  maxLength: 192
                hash:
                  type: string
                  description: A sha256 hash of the data file.
                  maxLength: 64000
              example:
                - name: testSet/test
                  hash: >-
                    0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c
          enabled:
            type: boolean
            description: Template Set is installed and ready to use
            example: true
        additionalProperties: false
    TenantPathSchema:
      type: string
      title: Tenant Path Schema
      description: Tenant path schema.
      maxLength: 64000
      pattern: .*
    UdpDefault:
      type: object
      title: UDP Default
      description: UDP default.
      properties:
        id:
          readOnly: true
          title: UDP Default ID
          description: Id for udp.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        datagramLoadBalancing:
          title: Datagram Load Balancing
          description: >-
            Specifies the system load balances UDP traffic packet-by-packet and
            does not treat UDP packets from the same source and port as part of
            a connection. The default value is disabled.
          type: boolean
          default: false
        idleTimeout:
          title: Idle Timeout
          description: >-
            Specifies the number of seconds that a connection is idle before the
            connection is eligible for deletion. The default value is 60
            seconds.
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
      additionalProperties: false
    UdpRevProxy:
      type: object
      title: UDP Reverse Proxy
      description: UDP reverse proxy.
      properties:
        stackType:
          type: string
          maxLength: 64000
          enum:
            - UdpRevProxy
          title: Stack type
          description: Stack Type.
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: Stack ID
          description: ID for stack.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Stack
          title: Stack Name
          description: The name of the stack. Maximum length is 192 characters.
        description:
          type: string
          maxLength: 256
          default: ''
          title: Description
          example: UDP Proxy to manage Domain Name System (DNS) Application.
          description: Description of the stack. Maximum length is 192 characters.
        enabled:
          type: boolean
          default: true
          title: Enabled
          description: >-
            Specifies whether the proxy accepts new connections. If set to
            false, the proxy does not accept new connections. The default value
            is true.
        clientSide:
          type: object
          title: Client-Side Parameters
          description: Client-side parameters.
          properties:
            l4ClientSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Client Side
              description: A soft reference, by name, to an L4 client-side object.
            udp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/UdpDefault'
              title: UDP
              description: UDP for client side.
            persistence:
              oneOf:
                - $ref: '#/components/schemas/PersistenceUniversal'
              title: Virtual Server Persistence
              description: Virtual server persistence configuration.
        serverSide:
          type: object
          title: Server-Side Parameters
          description: Server-side parameters.
          properties:
            monitors:
              type: object
              nullable: true
              title: Monitors
              description: Monitors.
              properties:
                icmp:
                  title: ICMP
                  description: ICMP monitor.
                  type: object
                  nullable: true
                  properties:
                    id:
                      title: Monitor ID
                      description: ID for the object.
                      readOnly: true
                      type: string
                      format: uuid
                      pattern: >-
                        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
                      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
                    interval:
                      title: Interval
                      description: Specifies, in seconds, the monitor check frequency.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                    timeout:
                      title: Timeout
                      description: >-
                        Specifies, in seconds, the time in which the target must
                        respond.
                      type: integer
                      format: uint32
                      minimum: 0
                      maximum: 4294967295
                  additionalProperties: false
            l4ServerSide:
              type: string
              minLength: 1
              maxLength: 192
              title: L4 Server Side
              description: A soft reference, by name, to an L4 server-side object.
            loadBalancing:
              example: round-robin
              title: Load Balancing
              description: Load balancing.
              type: string
              maxLength: 64000
              enum:
                - round-robin
                - least-connections
                - predictive
                - weighted-round-robin
                - ratio-least-connections
                - ratio-session
                - fastest
              default: round-robin
            ignorePersistedWeight:
              type: boolean
              default: false
              title: Ignore Persisted Weight
              description: >-
                Specifies whether to count the weight of persisted connections
                on pool members when making load balancing decisions. The
                default value is false.
            udp:
              default: {}
              oneOf:
                - $ref: '#/components/schemas/UdpDefault'
              title: UDP
              description: UDP for server side.
        policies:
          type: array
          default: []
          title: Policies
          description: Array of associated stack policies.
          items:
            $ref: '#/components/schemas/StackPolicy'
        irules:
          type: array
          title: iRules
          description: Specifies iRules associated with the proxy.
          items:
            type: object
            title: IRule
            description: IRule.
            properties:
              description:
                type: string
                maxLength: 256
                title: Description
                description: Description for iRule.
              priority:
                type: integer
                default: 500
                title: Priority
                description: Priority for iRule.
                minimum: 0
                maximum: 1000
              rule:
                type: string
                title: Rule
                description: Rule for iRule.
                maxLength: 64000
            additionalProperties: false
        mirroring:
          type: string
          maxLength: 64000
          enum:
            - disabled
            - enabled
          default: disabled
          title: Packet Mirroring
          description: >-
            If set to enabled, packet mirroring will be enabled for this proxy.
            Defaults to disabled.
      required:
        - name
        - stackType
      additionalProperties: false
    Uint16:
      type: integer
      format: uint16
      minimum: 0
      maximum: 65535
      description: |
        An unsigned 16-bit integer.
      title: Integer
    Uint32:
      type: integer
      format: uint32
      minimum: 0
      maximum: 4294967295
      description: |
        An unsigned 32-bit integer.
      title: Integer
    Uint64:
      type: integer
      format: uint64
      minimum: 0
      maximum: 18446744073709552000
      description: |
        An unsigned 64-bit integer.
      title: Integer
    UpdateFilesMetadata:
      title: Update Files Metadata
      description: >-
        Specifies properties needed to update file metadata in a PUT operation:
        Description of the file metadata (maximum length, 256 characters),
        Filename of the metadata file (maximum length, 64000 characters), and
        Passphrase that secures the metadata file (maximum length, 1000
        characters).
      type: object
      properties:
        description:
          type: string
          maxLength: 256
          title: Description
        fileName:
          type: string
          maxLength: 64000
          format: binary
          title: File Name
        passphrase:
          type: string
          maxLength: 1000
          title: Passphrase
      additionalProperties: false
    UpdateUser:
      title: Update User
      description: The user properties that can be updated by PUT operations.
      type: object
      properties:
        password:
          title: Password
          description: >-
            The password for the associated username. Important: Do not use the
            example provided as the password in production environments.
          writeOnly: true
          type: string
          maxLength: 64000
          format: password
          example: p12345678
          minLength: 8
        forcePasswordReset:
          type: boolean
          default: true
          title: Force Password Reset
        role:
          title: Role
          description: Role for the user account that uses RBAC-based authorization.
          type: string
          enum:
            - administrator
            - resource-administrator
            - as3-user
            - user-manager
            - manager
            - certificate-manager
            - application-owner
            - network-operator
            - application-editor
            - no-access
          example: no-access
        status:
          title: Status
          description: >-
            Specifies whether this user is allowed access. Options are enabled
            (indicating that access is allowed) and disabled (indicating that it
            is not). The default value is enabled.
          type: string
          maxLength: 8
          enum:
            - enabled
            - disabled
          default: enabled
      minProperties: 1
      additionalProperties: false
    UpgradeStats:
      title: Upgrade event statistics response
      description: Upgrade event statistics response.
      type: object
      properties:
        systemId:
          type: string
          format: uuid
          title: System ID
          description: System ID.
          maxLength: 192
        jobId:
          type: string
          format: uuid
          title: Job ID
          description: Job ID.
          maxLength: 192
        releaseName:
          type: string
          title: Release Name
          description: Release Name.
          maxLength: 192
        versionDetails:
          title: Version details of release
          description: Version details of release.
          type: object
          properties:
            from:
              type: string
              title: Upgrade from version
              description: Upgrade from version.
              maxLength: 192
            to:
              type: string
              title: Upgrade to version
              description: Upgrade to version.
              maxLength: 192
        diskUsage:
          title: Change in disk usage
          description: Change in disk usage.
          type: string
          maxLength: 192
        startTime:
          type: string
          title: Upgrade start time
          description: Upgrade start time.
          maxLength: 192
        endTime:
          type: string
          title: Upgrade end time
          description: Upgrade end time.
          maxLength: 192
        upgraded:
          title: Details of upgraded containers
          description: Details of upgraded containers.
          type: object
          properties:
            count:
              title: Upgraded containers count
              description: Upgraded containers count.
              type: integer
              minimum: 0
              maximum: 100
            containerDetails:
              title: Upgraded containers detail
              description: Upgraded containers detail.
              type: array
              items:
                title: Details of a container
                description: Details of a container.
                type: object
                properties:
                  name:
                    title: Container Name
                    type: string
                    description: Container Name.
                    maxLength: 192
                  metadataUpdated:
                    title: Flag indicating if container config was changed
                    type: boolean
                    description: Flag indicating if container config was changed
                  versionDetails:
                    title: Container image version detail
                    description: Container image version detail.
                    type: object
                    properties:
                      from:
                        type: string
                        title: Old image version
                        description: Old image version.
                        maxLength: 192
                      to:
                        type: string
                        title: New image version
                        description: New image version.
                        maxLength: 192
        added:
          title: Details of added containers in release
          description: Details of added containers in release.
          type: object
          properties:
            count:
              title: Added containers count
              description: Added containers count.
              type: integer
              minimum: 0
              maximum: 100
            containerDetails:
              title: Details of a container
              description: Details of a container.
              type: array
              items:
                title: Details of added containers
                description: Details of added containers.
                type: object
                properties:
                  name:
                    title: Container name
                    type: string
                    description: Container name.
                    maxLength: 192
        deleted:
          title: Details of deleted containers in release
          description: Details of deleted containers in release.
          type: object
          properties:
            count:
              title: Deleted containers count
              description: Deleted containers count.
              type: integer
              minimum: 0
              maximum: 100
            containerDetails:
              title: Details of a container
              description: Details of a container.
              type: array
              items:
                title: Details of a container
                description: Details of a container.
                type: object
                properties:
                  name:
                    title: Container name
                    type: string
                    description: Container name.
                    maxLength: 192
        timingDetail:
          title: Details of time taken for upgraded containers
          description: Details of time taken for upgraded containers.
          type: array
          items:
            title: Details of time taken for upgraded containers
            description: Details of time taken for upgraded containers.
            type: object
            properties:
              name:
                title: Container name
                type: string
                description: Container name.
                maxLength: 192
              duration:
                title: Time taken to upgrade container
                type: string
                description: Time taken to upgrade container.
                maxLength: 192
        errorMsg:
          title: Error occured during upgrade
          description: Error occured during upgrade.
          type: string
          maxLength: 64000
      additionalProperties: false
    Uri:
      type: string
      maxLength: 4096
      format: uri
      pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
      description: >-
        An ASCII-encoded Uniform Resource Identifier (URI) as defined in RFC
        3986.
      title: Uniform Resource Identifier
    User:
      title: User Properties
      description: >-
        The User fields. All the fields needed to be compared with the internal
        API-Engine representation.
      type: object
      properties:
        id:
          title: User ID
          description: A readonly ID that identifies the user account.
          readOnly: true
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        username:
          title: User Name
          description: >-
            The name of the user associated with the account. The maximum length
            is 64,000 characters.
          type: string
          maxLength: 64000
          example: admin
        password:
          title: Password
          description: >-
            The password for the associated username. Important: Do not use the
            example provided as the password in production environments.
          writeOnly: true
          type: string
          maxLength: 64000
          format: password
          example: p12345678
          minLength: 8
        role:
          title: Role
          description: Role for the user account that uses RBAC-based authorization.
          type: string
          enum:
            - administrator
            - resource-administrator
            - as3-user
            - user-manager
            - manager
            - certificate-manager
            - application-owner
            - network-operator
            - application-editor
            - no-access
          example: no-access
        forcePasswordReset:
          title: Force Password Reset
          description: >-
            Forces users to change their password when first logging on. The
            default value is true.
          type: boolean
          default: true
        status:
          title: Status
          description: >-
            Specifies whether this user is allowed access. Options are enabled
            (indicating that access is allowed) and disabled (indicating that it
            is not). The default value is enabled.
          type: string
          maxLength: 8
          enum:
            - enabled
            - disabled
          default: enabled
      additionalProperties: false
    UserSelfPassword:
      title: Change Password
      description: >-
        Provides settings for updating a user password. New Password and Current
        Password are required values for changing a password.
      type: object
      properties:
        newPassword:
          title: New Password
          description: >-
            Specifies the new password for the associated user account. Cannot
            be the same as Current Password. The maximum length is 64,000
            characters. Important: Do not use the example provided as the
            password in production environments.
          type: string
          maxLength: 64000
          format: password
          example: p12345678
          minLength: 8
        currentPassword:
          title: Current Password
          description: >-
            Specifies the current password for the associated user account.
            Cannot be the same as New Password. The maximum length is 64,000
            characters. Important: Do not use the example provided as the
            password in production environments.
          type: string
          maxLength: 64000
          format: password
          example: p12345678
      required:
        - newPassword
        - currentPassword
      additionalProperties: false
    Uuid:
      type: string
      format: uuid
      pattern: >-
        [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
      description: >
        A Universally Unique IDentifier in the string representation defined in
        RFC 4122.  The canonical representation uses lowercase characters.
      title: UUID
      example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
    VariableAssignment:
      description: Defines a single Variable Assign action.
      type: object
      properties:
        varname:
          description: Variable name.
          type: string
        expression:
          description: Tcl expression to use to obtain the value.
          type: string
        secure:
          description: Defines if the value is saved in encrypted form.
          type: boolean
          default: false
        append:
          description: Defines if the value should be appended to existing variable value.
          type: boolean
          default: false
        separator:
          description: >-
            A string which is used to separate appended value from existing
            variable value.
          type: string
      required:
        - varname
        - expression
      additionalProperties: false
    VariableAssignments:
      description: Defines Variable Assignment action objects for an Access configuration.
      type: array
      items:
        description: Defines a single Variable Assign action.
        type: object
        properties:
          varname:
            description: Variable name.
            type: string
          expression:
            description: Tcl expression to use to obtain the value.
            type: string
          secure:
            description: Defines if the value is saved in encrypted form.
            type: boolean
            default: false
          append:
            description: >-
              Defines if the value should be appended to existing variable
              value.
            type: boolean
            default: false
          separator:
            description: >-
              A string which is used to separate appended value from existing
              variable value.
            type: string
        required:
          - varname
          - expression
        additionalProperties: false
      example:
        - varname: session.sso.token.last.username
          expression: mcget {session.logon.last.username}
        - varname: session.sso.token.last.password
          expression: mcget {session.logon.last.password}
    VerifyHealthcheck:
      type: object
      title: Verify Health
      description: Indicator for whether a device must be healthy before taking an action.
      properties:
        verifyHealth:
          type: boolean
          default: true
          title: VerifyHealth
          description: >-
            Indicator for whether a device must be healthy before taking an
            action.
      additionalProperties: false
    WafPolicy:
      type: object
      title: WAF Policy
      description: Settings for the WAF policy.
      properties:
        id:
          example: 3b997ff6-3c96-41d3-a9ec-ecb1a69017d2
          title: WAF Policy ID
          description: WAF policy ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        policyType:
          type: string
          maxLength: 64000
          title: Policy Type
          description: Policy type.
          enum:
            - Waf
        name:
          type: string
          maxLength: 192
          example: example_com_policy
          title: Policy Name
          description: Specifies the WAF policy name. The maximum length is 192 characters.
        filename:
          type: string
          maxLength: 64000
          example: file:///example_com_policy.json
          title: Declarative Policy File
          description: Path to WAF declarative policy file.
      required:
        - name
        - filename
      additionalProperties: false
    WafStackPolicy:
      type: object
      title: WAF Policy Reference
      description: WAF Policy Reference.
      properties:
        wafPolicy:
          type: string
          maxLength: 64000
          example: example_com_policy
          title: WAF Policy Name
          description: WAF policy name.
      required:
        - wafPolicy
      additionalProperties: false
    hal.CollectionKeys:
      type: object
      properties:
        count:
          type: integer
        total:
          type: integer
    hal.links.Plural:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: string
            prev:
              type: string
            next:
              type: string
            first:
              type: string
            last:
              type: string
    hal.Applications:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Applications'
    hal.embedded.Applications:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            applications:
              type: array
              items:
                $ref: '#/components/schemas/hal.Application'
    hal.Application:
      allOf:
        - $ref: '#/components/schemas/hal.BasicApplication'
        - $ref: '#/components/schemas/hal.AdvApplication'
        - $ref: '#/components/schemas/hal.links.Application'
    hal.BasicApplication:
      type: object
      required:
        - name
      title: Application
      description: Application.
      properties:
        id:
          readOnly: true
          example: 1197f750-1f00-4733-8bb9-def089c7c7e5
          title: Application ID
          description: Application ID.
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
        name:
          type: string
          maxLength: 192
          example: Default Application
          title: Name
          description: Application name.
        description:
          type: string
          maxLength: 256
          default: an application
          nullable: true
          example: Netop's HTTP Application.
          title: Description
          description: >-
            Describes the application. The default value is 'an application'.
            The maximum length is 256 characters.
        domainName:
          title: Domain Name
          description: >-
            The name of the trusted domain that contains all of the user account
            information.
          example: netops.example.com
          type: string
          minLength: 1
          maxLength: 253
          pattern: '[a-zA-Z_]+([a-zA-Z0-9\-\._]*)'
      additionalProperties: false
    hal.AdvApplication:
      properties:
        stacks:
          items:
            $ref: '#/components/schemas/hal.Stack'
          type: array
      type: object
    hal.links.Application:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: string
            stacks:
              type: string
    hal.Stacks:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Stacks'
    hal.embedded.Stacks:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            stacks:
              type: array
              items:
                $ref: '#/components/schemas/hal.Stack'
    hal.HttpRevProxy:
      allOf:
        - $ref: '#/components/schemas/HttpRevProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.links.Singular:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: string
    hal.HttpAdvancedProxy:
      allOf:
        - $ref: '#/components/schemas/HttpAdvancedProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.HttpSimpleProxy:
      allOf:
        - $ref: '#/components/schemas/HttpSimpleProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.TcpRevProxy:
      allOf:
        - $ref: '#/components/schemas/TcpRevProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.TcpAdvancedProxy:
      allOf:
        - $ref: '#/components/schemas/TcpAdvancedProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Fastl4RevProxy:
      allOf:
        - $ref: '#/components/schemas/Fastl4RevProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.UdpRevProxy:
      allOf:
        - $ref: '#/components/schemas/UdpRevProxy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Stack:
      oneOf:
        - $ref: '#/components/schemas/hal.HttpRevProxy'
        - $ref: '#/components/schemas/hal.HttpAdvancedProxy'
        - $ref: '#/components/schemas/hal.HttpSimpleProxy'
        - $ref: '#/components/schemas/hal.TcpRevProxy'
        - $ref: '#/components/schemas/hal.TcpAdvancedProxy'
        - $ref: '#/components/schemas/hal.Fastl4RevProxy'
        - $ref: '#/components/schemas/hal.UdpRevProxy'
      discriminator:
        propertyName: stackType
    hal.Jobs:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Jobs'
    hal.embedded.Jobs:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            jobs:
              type: array
              items:
                $ref: '#/components/schemas/hal.Job'
    hal.Job:
      allOf:
        - $ref: '#/components/schemas/Job'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L1Networks:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L1Networks'
    hal.embedded.L1Networks:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l1Networks:
              type: array
              items:
                $ref: '#/components/schemas/hal.L1Network'
    hal.L1Network:
      allOf:
        - $ref: '#/components/schemas/L1Network'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L1Vlans:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L1Vlans'
    hal.embedded.L1Vlans:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l1Vlans:
              type: array
              items:
                $ref: '#/components/schemas/hal.L1Vlan'
    hal.L1Vlan:
      allOf:
        - $ref: '#/components/schemas/L1Vlan'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L2Networks:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L2Networks'
    hal.embedded.L2Networks:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l2Networks:
              type: array
              items:
                $ref: '#/components/schemas/hal.L2Network'
    hal.L2Network:
      allOf:
        - $ref: '#/components/schemas/L2Network'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L2Forwards:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L2Forwards'
    hal.embedded.L2Forwards:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l2Forwards:
              type: array
              items:
                $ref: '#/components/schemas/hal.L2Forward'
    hal.L2Forward:
      allOf:
        - $ref: '#/components/schemas/L2Forward'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L3Networks:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L3Networks'
    hal.embedded.L3Networks:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l3Networks:
              type: array
              items:
                $ref: '#/components/schemas/hal.L3Network'
    hal.L3Network:
      allOf:
        - $ref: '#/components/schemas/L3Network'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L3Forwards:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L3Forwards'
    hal.embedded.L3Forwards:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l3Forwards:
              type: array
              items:
                $ref: '#/components/schemas/hal.L3Forward'
    hal.L3Forward:
      allOf:
        - $ref: '#/components/schemas/L3Forward'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L4Serversides:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L4Serversides'
    hal.embedded.L4Serversides:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l4Serversides:
              type: array
              items:
                $ref: '#/components/schemas/hal.L4Serverside'
    hal.L4Serverside:
      allOf:
        - $ref: '#/components/schemas/hal.BasicL4Serverside'
        - $ref: '#/components/schemas/hal.AdvL4Serverside'
        - $ref: '#/components/schemas/hal.links.L4Serverside'
    hal.BasicL4Serverside:
      type: object
      title: L4 Serverside
      description: L4 Serverside.
      properties:
        id:
          title: ID
          description: L4 serverside ID.
          readOnly: true
          type: string
          format: uuid
          pattern: >-
            [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        name:
          type: string
          minLength: 1
          maxLength: 192
          title: Name
          description: L4 serverside name. e.g., tcp-serverside, udp-serverside ...
          example: oliviasL4Serverside
        l3Networks:
          type: array
          title: L3 Network List
          description: An array of soft references, by name, to L3 networks.
          example:
            - oliviasL3Network
          items:
            type: string
            title: L3 Network
            description: Soft references to L3 network.
            maxLength: 64
        snat:
          oneOf:
            - $ref: '#/components/schemas/L4SnatNone'
            - $ref: '#/components/schemas/L4SnatAutomap'
            - $ref: '#/components/schemas/L4SnatPool'
          description: >-
            A SNAT configuration specifying a valid snatType (AUTOMAP, NONE,
            POOL) and additional fields as required.
          title: SNAT Configuration
          example: >-
            snat: { "snatType": "POOL", "addresses": ["10.10.0.1", "10.10.0.3"]
            }
          discriminator:
            propertyName: snatType
      required:
        - name
      additionalProperties: false
    hal.AdvL4Serverside:
      properties:
        endpoints:
          items:
            $ref: '#/components/schemas/hal.L4Endpoint'
          type: array
      type: object
    hal.links.L4Serverside:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: string
            endpoints:
              type: string
    hal.L4Endpoints:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L4Endpoints'
    hal.embedded.L4Endpoints:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l4Endpoints:
              type: array
              items:
                $ref: '#/components/schemas/hal.L4Endpoint'
    hal.L4BasicEndpoint:
      allOf:
        - $ref: '#/components/schemas/L4BasicEndpoint'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.L4Endpoint:
      oneOf:
        - $ref: '#/components/schemas/hal.L4BasicEndpoint'
      discriminator:
        propertyName: endpointType
    hal.L4Clientsides:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.L4Clientsides'
    hal.embedded.L4Clientsides:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            l4Clientsides:
              type: array
              items:
                $ref: '#/components/schemas/hal.L4Clientside'
    hal.L4Clientside:
      allOf:
        - $ref: '#/components/schemas/L4Clientside'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.WafPolicies:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.WafPolicies'
    hal.embedded.WafPolicies:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            wafPolicies:
              type: array
              items:
                $ref: '#/components/schemas/hal.WafPolicy'
    hal.WafPolicy:
      allOf:
        - $ref: '#/components/schemas/WafPolicy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.AccessPolicies:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.AccessPolicies'
    hal.embedded.AccessPolicies:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            accessPolicies:
              type: array
              items:
                $ref: '#/components/schemas/hal.AccessPolicy'
    hal.PerSessionAccessPolicy:
      allOf:
        - $ref: '#/components/schemas/PerSessionAccessPolicy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.PerRequestAccessPolicy:
      allOf:
        - $ref: '#/components/schemas/PerRequestAccessPolicy'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.AccessPolicy:
      oneOf:
        - $ref: '#/components/schemas/hal.PerSessionAccessPolicy'
        - $ref: '#/components/schemas/hal.PerRequestAccessPolicy'
    hal.Services:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Services'
    hal.embedded.Services:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            services:
              type: array
              items:
                $ref: '#/components/schemas/hal.Service'
    hal.Service:
      allOf:
        - $ref: '#/components/schemas/Service'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.ServiceAccess:
      allOf:
        - $ref: '#/components/schemas/ServiceAccess'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.ServiceLogging:
      allOf:
        - $ref: '#/components/schemas/ServiceLogging'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Cluster:
      allOf:
        - $ref: '#/components/schemas/Cluster'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.ServiceWaf:
      allOf:
        - $ref: '#/components/schemas/ServiceWaf'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.ClusterNodeHealths:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.ClusterNodeHealths'
    hal.embedded.ClusterNodeHealths:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            clusterNodeHealths:
              type: array
              items:
                $ref: '#/components/schemas/hal.ClusterNodeHealth'
    hal.ClusterNodeHealth:
      allOf:
        - $ref: '#/components/schemas/ClusterNodeHealth'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.SystemReady:
      allOf:
        - $ref: '#/components/schemas/SystemReady'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Systems:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Systems'
    hal.embedded.Systems:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            systems:
              type: array
              items:
                $ref: '#/components/schemas/hal.System'
    hal.System:
      allOf:
        - $ref: '#/components/schemas/System'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Manifest:
      allOf:
        - $ref: '#/components/schemas/Manifest'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.SystemDeviceCertificate:
      allOf:
        - $ref: '#/components/schemas/SystemDeviceCertificate'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.SystemHostDns:
      allOf:
        - $ref: '#/components/schemas/SystemHostDns'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.SystemHostNetwork:
      allOf:
        - $ref: '#/components/schemas/SystemHostNetwork'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.SystemDataplaneDebug:
      allOf:
        - $ref: '#/components/schemas/SystemDataplaneDebug'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Interfaces:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Interfaces'
    hal.embedded.Interfaces:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            interfaces:
              type: array
              items:
                $ref: '#/components/schemas/hal.Interface'
    hal.Interface:
      allOf:
        - $ref: '#/components/schemas/Interface'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Ihealth:
      allOf:
        - $ref: '#/components/schemas/Ihealth'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.FilesMetadatas:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.FilesMetadatas'
    hal.embedded.FilesMetadatas:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            filesMetadatas:
              type: array
              items:
                $ref: '#/components/schemas/hal.FilesMetadata'
    hal.FilesMetadata:
      allOf:
        - $ref: '#/components/schemas/FilesMetadata'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.AccessToken:
      allOf:
        - $ref: '#/components/schemas/AccessToken'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.AccessSessions:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.AccessSessions'
    hal.embedded.AccessSessions:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            accessSessions:
              type: array
              items:
                $ref: '#/components/schemas/hal.AccessSession'
    hal.AccessSession:
      allOf:
        - $ref: '#/components/schemas/AccessSession'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.SessionVariables:
      allOf:
        - $ref: '#/components/schemas/SessionVariables'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.MetricsSystem:
      allOf:
        - $ref: '#/components/schemas/MetricsSystem'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.Users:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.Users'
    hal.embedded.Users:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/hal.User'
    hal.User:
      allOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.UpgradeStatses:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.UpgradeStatses'
    hal.embedded.UpgradeStatses:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            upgradeStatses:
              type: array
              items:
                $ref: '#/components/schemas/hal.UpgradeStats'
    hal.UpgradeStats:
      allOf:
        - $ref: '#/components/schemas/UpgradeStats'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.InstanceDetailsResponseDefinitions:
      allOf:
        - $ref: '#/components/schemas/hal.CollectionKeys'
        - $ref: '#/components/schemas/hal.links.Plural'
        - $ref: '#/components/schemas/hal.embedded.InstanceDetailsResponseDefinitions'
    hal.embedded.InstanceDetailsResponseDefinitions:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            instanceDetailsResponseDefinitions:
              type: array
              items:
                $ref: '#/components/schemas/hal.InstanceDetailsResponseDefinition'
    hal.InstanceDetailsResponseDefinition:
      allOf:
        - $ref: '#/components/schemas/InstanceDetailsResponseDefinition'
        - $ref: '#/components/schemas/hal.links.Singular'
    hal.HealthResponseDefinition:
      allOf:
        - $ref: '#/components/schemas/HealthResponseDefinition'
        - $ref: '#/components/schemas/hal.links.Singular'
security:
  - bearerAuth: []
