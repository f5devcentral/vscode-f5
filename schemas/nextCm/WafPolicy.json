{
    "allOf": [
        {
            "description": "Defines WAF policy data without declaration.",
            "properties": {
                "application_language": {
                    "description": "The character encoding for the web application. The character encoding determines how the policy processes the character sets. The default is Auto detect.",
                    "example": "utf-8",
                    "type": "string"
                },
                "applications": null,
                "created_by": {
                    "description": "User ID or application name which created the policy/template.",
                    "type": "string"
                },
                "created_time": {
                    "description": "Time the policy/template was created.",
                    "format": "date-time",
                    "type": "string"
                },
                "enforcement_mode": {
                    "description": "How BIG-IP MA processes a request that triggers a security policy violation.\n- **Blocking:** When the enforcement mode is set to blocking, any triggered violation is blocked (configured for blocking).\n- **Transparent:** When the enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.",
                    "enum": [
                        "blocking",
                        "transparent"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "UUID of WAF template/policy.",
                    "format": "uuid",
                    "type": "string"
                },
                "is_default_template": {
                    "description": "Defined whether template is the default template.",
                    "type": "boolean"
                },
                "last_deployed": {
                    "description": "Last time the policy was deployed.",
                    "format": "date-time",
                    "type": "string"
                },
                "last_modified": {
                    "description": "Last time the policy/template was modified.",
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "description": "WAF template/policy name.",
                    "example": "entity_name",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags for marking policies.",
                    "items": {
                        "example": "tag1",
                        "type": "string"
                    },
                    "type": "array"
                },
                "template_name": {
                    "description": "The name of the template upon which the policy is based.",
                    "example": "Advanced-Protection",
                    "type": "string"
                }
            },
            "type": "object"
        },
        {
            "properties": {
                "declaration": {
                    "properties": {
                        "policy": {
                            "properties": {
                                "antivirus": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "inspectHttpUploads": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "app-protection": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "applicationLanguage": {
                                    "description": "The character encoding for the web application. The character encoding determines how the policy processes the character sets. The default is Auto detect.",
                                    "enum": [
                                        "auto-detect",
                                        "big5",
                                        "euc-jp",
                                        "euc-kr",
                                        "gb18030",
                                        "gb2312",
                                        "gbk",
                                        "iso-8859-1",
                                        "iso-8859-10",
                                        "iso-8859-13",
                                        "iso-8859-15",
                                        "iso-8859-16",
                                        "iso-8859-2",
                                        "iso-8859-3",
                                        "iso-8859-4",
                                        "iso-8859-5",
                                        "iso-8859-6",
                                        "iso-8859-7",
                                        "iso-8859-8",
                                        "iso-8859-9",
                                        "koi8-r",
                                        "shift_jis",
                                        "utf-8",
                                        "windows-1250",
                                        "windows-1251",
                                        "windows-1252",
                                        "windows-1253",
                                        "windows-1255",
                                        "windows-1256",
                                        "windows-1257",
                                        "windows-874"
                                    ],
                                    "type": "string"
                                },
                                "behavioral-enforcement": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "behavioralEnforcementViolations": {
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "enableBehavioralEnforcement": {
                                                    "type": "boolean"
                                                },
                                                "enableBlockingCveSignatures": {
                                                    "type": "boolean"
                                                },
                                                "enableBlockingHighAccuracySignatures": {
                                                    "type": "boolean"
                                                },
                                                "enableBlockingLikelyMaliciousTransactions": {
                                                    "type": "boolean"
                                                },
                                                "enableBlockingSuspiciousTransactions": {
                                                    "type": "boolean"
                                                },
                                                "enableBlockingViolations": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "blocking-settings": {
                                    "description": "This section defines policy block/alarm/learn behaviors.",
                                    "properties": {
                                        "evasions": {
                                            "oneOf": [
                                                {
                                                    "items": {
                                                        "description": "This section defines behavior of 'Evasion technique detected' (VIOL_EVASION) violation sub-violations.\nUser can control which sub-violations are enabled (alarmed/blocked) and/or learned.\nBehavior of sub-violations depends on the block/alarm/learn settings of 'Evasion technique detected' violation,\ndefined in /policy/blocking-settings/violations section:\n - If learn is disabled in violation - no learning will be done for sub-violations\n - If both alarm and block are disabled - enable flag becomes irrelevant, since there will be no block/alarm for all sub-violations",
                                                        "properties": {
                                                            "description": {
                                                                "description": "Human-readable name of sub-violation.",
                                                                "enum": [
                                                                    "%u decoding",
                                                                    "Apache whitespace",
                                                                    "Bad unescape",
                                                                    "Bare byte decoding",
                                                                    "Directory traversals",
                                                                    "IIS Unicode codepoints",
                                                                    "IIS backslashes",
                                                                    "Multiple decoding",
                                                                    "Multiple slashes",
                                                                    "Semicolon path parameters",
                                                                    "Trailing dot",
                                                                    "Trailing slash"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "Defines if sub-violation is enforced - alarmed or blocked, according to the 'Evasion technique detected' (VIOL_EVASION) violation blocking settings.",
                                                                "type": "boolean"
                                                            },
                                                            "learn": {
                                                                "description": "Defines if sub-violation is learned. Sub-violations are learned only when learn is enabled for the 'Evasion technique detected' (VIOL_EVASION) violation.",
                                                                "type": "boolean"
                                                            },
                                                            "maxDecodingPasses": {
                                                                "description": "Defines how many times the system decodes URI and parameter values before the request is considered an evasion.\nRelevant only for the 'Multiple decoding' sub-violation.",
                                                                "maximum": 5,
                                                                "minimum": 2,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "description"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                null
                                            ]
                                        },
                                        "http-protocols": {
                                            "oneOf": [
                                                {
                                                    "items": {
                                                        "description": "This section defines behavior of 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation sub-violations.\nUser can control which sub-violations are enabled (alarmed/blocked) and/or learned.\nBehavior of sub-violations depends on the block/alarm/learn settings of 'HTTP protocol compliance failed' violation,\ndefined in /policy/blocking-settings/violations section:\n - If learn is disabled in violation - no learning will be done for sub-violations\n - If both alarm and block are disabled - enable flag becomes irrelevant, since there will be no block/alarm for all sub-violations",
                                                        "properties": {
                                                            "description": {
                                                                "description": "Human-readable name of sub-violation",
                                                                "enum": [
                                                                    "Bad HTTP version",
                                                                    "Bad host header value",
                                                                    "Bad multipart parameters parsing",
                                                                    "Bad multipart/form-data request parsing",
                                                                    "Body in GET or HEAD requests",
                                                                    "CRLF characters before request start",
                                                                    "Check maximum number of cookies",
                                                                    "Check maximum number of headers",
                                                                    "Check maximum number of parameters",
                                                                    "Chunked request with Content-Length header",
                                                                    "Content length should be a positive number",
                                                                    "Header name with no header value",
                                                                    "High ASCII characters in headers",
                                                                    "Host header contains IP address",
                                                                    "Multiple host headers",
                                                                    "No Host header in HTTP/1.1 request",
                                                                    "Null in request",
                                                                    "POST request with Content-Length: 0",
                                                                    "Several Content-Length headers",
                                                                    "Unescaped space in URL",
                                                                    "Unparsable request content"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "Defines if sub-violation is enforced - alarmed or blocked, according to the 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation blocking settings",
                                                                "type": "boolean"
                                                            },
                                                            "learn": {
                                                                "description": "Defines if sub-violation is learned. Sub-violations is learned only when learn is enabled for the 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation",
                                                                "type": "boolean"
                                                            },
                                                            "maxCookies": {
                                                                "maximum": 100,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "maxHeaders": {
                                                                "description": "Defines maximum allowed number of headers in request.\nRelevant only for the 'Check maximum number of headers' sub-violation",
                                                                "maximum": 150,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "maxParams": {
                                                                "description": "Defines maximum allowed number of parameters in request.\nRelevant only for the 'Check maximum number of parameters' sub-violation",
                                                                "maximum": 5000,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "description"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                null
                                            ]
                                        },
                                        "violations": {
                                            "oneOf": [
                                                {
                                                    "items": {
                                                        "properties": {
                                                            "alarm": {
                                                                "type": "boolean"
                                                            },
                                                            "block": {
                                                                "type": "boolean"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "learn": {
                                                                "type": "boolean"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                null
                                            ]
                                        },
                                        "web-services-securities": {
                                            "oneOf": [
                                                {
                                                    "items": {
                                                        "properties": {
                                                            "description": {
                                                                "enum": [
                                                                    "Certificate Error",
                                                                    "Certificate Expired",
                                                                    "Decryption Error",
                                                                    "Encryption Error",
                                                                    "Expired Timestamp",
                                                                    "Internal Error",
                                                                    "Invalid Timestamp",
                                                                    "Malformed Error",
                                                                    "Missing Timestamp",
                                                                    "Signing Error",
                                                                    "Timestamp expiration is too far in the future",
                                                                    "UnSigned Timestamp",
                                                                    "Verification Error"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "learn": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "description"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                null
                                            ]
                                        }
                                    },
                                    "type": "object"
                                },
                                "bot-defense": {
                                    "description": "This section defines the properties of the bot defense feature.",
                                    "properties": {
                                        "mitigations": {
                                            "description": "This section defines the mitigation to each class or signature.",
                                            "properties": {
                                                "anomalies": {
                                                    "oneOf": [
                                                        {
                                                            "items": {
                                                                "properties": {
                                                                    "$action": {
                                                                        "enum": [
                                                                            "delete"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "action": {
                                                                        "enum": [
                                                                            "alarm",
                                                                            "block",
                                                                            "default",
                                                                            "detect",
                                                                            "ignore"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "scoreThreshold": {
                                                                        "oneOf": [
                                                                            {
                                                                                "maximum": 150,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            },
                                                                            {
                                                                                "enum": [
                                                                                    "default"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            {
                                                                                "pattern": "\\d+$",
                                                                                "type": "string"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        null
                                                    ]
                                                },
                                                "browsers": {
                                                    "oneOf": [
                                                        {
                                                            "items": {
                                                                "properties": {
                                                                    "$action": {
                                                                        "enum": [
                                                                            "delete"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "action": {
                                                                        "enum": [
                                                                            "alarm",
                                                                            "block",
                                                                            "detect"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "maxVersion": {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "minVersion": {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        null
                                                    ]
                                                },
                                                "classes": {
                                                    "oneOf": [
                                                        {
                                                            "items": {
                                                                "description": "List of classes and their actions.",
                                                                "properties": {
                                                                    "action": {
                                                                        "description": "The action we set for this class.\n\n- **ignore**: The system will not detect or report bots from this class.\n- **detect**: The system will detect and report the bot, but violation won't be reported.\n- **alarm**: The system will detect and report requests made by bots from this class as illegal, but will not block them.\n- **block**: The system will detect and report requests made by bots from this class as illegal, and block them.",
                                                                        "enum": [
                                                                            "alarm",
                                                                            "block",
                                                                            "detect",
                                                                            "ignore"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The class we set the action to.",
                                                                        "enum": [
                                                                            "browser",
                                                                            "malicious-bot",
                                                                            "suspicious-browser",
                                                                            "trusted-bot",
                                                                            "unknown",
                                                                            "untrusted-bot"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        null
                                                    ]
                                                },
                                                "signatures": {
                                                    "oneOf": [
                                                        {
                                                            "items": {
                                                                "description": "List of signatures and their actions.\nIf a signature is not in the list - its action will be taken according to the class it belongs to.",
                                                                "properties": {
                                                                    "$action": {
                                                                        "enum": [
                                                                            "delete"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "action": {
                                                                        "description": "The action we set for this signature.\n\n- **ignore**: The system will not detect or report this signature.\n- **detect**: The system will detect and report the signature, but violation won't be reported.\n- **alarm**: The system will detect and report requests made by those specific bots as illegal, but will not block them.\n- **block**: The system will detect and report requests made by those specific bots as illegal, and will block them.",
                                                                        "enum": [
                                                                            "alarm",
                                                                            "block",
                                                                            "detect",
                                                                            "ignore"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the signature we want to change action for.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        null
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "settings": {
                                            "oneOf": [
                                                {
                                                    "description": "This section contains all bot defense settings.",
                                                    "properties": {
                                                        "caseSensitiveHttpHeaders": {
                                                            "description": "If *false* the system will not check header name with case sensitivity for both relevant anomalies: Invalid HTTP Headers, Suspicious HTTP Headers.",
                                                            "type": "boolean"
                                                        },
                                                        "isEnabled": {
                                                            "description": "If *true* the system detects bots.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                null
                                            ]
                                        }
                                    },
                                    "type": "object"
                                },
                                "browser-definitions": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "isUserDefined": {
                                                        "type": "boolean"
                                                    },
                                                    "matchRegex": {
                                                        "type": "string"
                                                    },
                                                    "matchString": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "brute-force-attack-preventions": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "Defines configuration for Brute Force Protection feature.\nThere is default configuration (one with bruteForceProtectionForAllLoginPages flag and without url) that applies to all configured login URLs unless there exists another brute force configuration for a specific login page.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "bruteForceProtectionForAllLoginPages": {
                                                        "description": "When enabled, enables Brute Force Protection for all configured login URLs.\nWhen disabled, only brute force configurations for specific login pages are applied in case they exist.",
                                                        "type": "boolean"
                                                    },
                                                    "captchaBypassCriteria": {
                                                        "description": "Specifies configuration for CAPTCHA Bypass Mitigation.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.",
                                                                "enum": [
                                                                    "alarm-and-blocking-page",
                                                                    "alarm-and-drop",
                                                                    "alarm-and-honeypot-page"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "When enabled, the system counts successful CAPTCHA challenges with failed logins from IP Address / Device ID.",
                                                                "type": "boolean"
                                                            },
                                                            "threshold": {
                                                                "description": "After configured threshold (number of successful CAPTCHA challenges with failed logins from IP Address / Device ID) defined action will be applied for the next login attempt",
                                                                "maximum": 100,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "clientSideIntegrityBypassCriteria": {
                                                        "description": "Specifies configuration for Client Side Integrity Bypass Mitigation.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.",
                                                                "enum": [
                                                                    "alarm-and-captcha"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "When enabled, the system counts successful challenges with failed logins from IP Address / Device ID / Username.\nLegitimate users who have disabled JavaScripting on their browsers for security reasons will fail a client side integrity challenge.",
                                                                "type": "boolean"
                                                            },
                                                            "threshold": {
                                                                "description": "After configured threshold (number of successful challenges with failed logins from IP Address / Device ID / Username) defined action will be applied for the next login attempt",
                                                                "maximum": 100,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "detectionCriteria": {
                                                        "description": "Specifies configuration for detecting distributed brute force attacks.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action that is applied when one of the defined thresholds (credentialsStuffingMatchesReached, failedLoginAttemptsRateReached) is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.\n- **alarm-and-client-side-integrity-captcha**: The system sends a Client Side Integrity challenge upon the first failed login attempt from a source and a CAPTCHA challenge upon second and all subsequent failed login attempts. A login attempt is logged if client successfully passes the challenge. This enforcement action should be chosen if CAPTCHA is considered intrusive. Benign users who mistype their password will likely get only the Client Side Integrity challenge, while an attacker will eventually get the CAPTCHA challenge.",
                                                                "enum": [
                                                                    "alarm",
                                                                    "alarm-and-captcha",
                                                                    "alarm-and-client-side-integrity",
                                                                    "alarm-and-client-side-integrity-captcha"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "credentialsStuffingMatchesReached": {
                                                                "description": "After configured threshold (number of detected login attempts that match known leaked credentials library) defined action will be applied for the next login attempt.",
                                                                "maximum": 10000,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "detectCredentialsStuffingAttack": {
                                                                "description": "When enabled, the system detects login attempts that match known leaked credentials library.",
                                                                "type": "boolean"
                                                            },
                                                            "detectDistributedBruteForceAttack": {
                                                                "description": "When enabled, the system detects distributed brute force attacks.",
                                                                "type": "boolean"
                                                            },
                                                            "failedLoginAttemptsRateReached": {
                                                                "description": "After configured threshold (number of failed login attempts within measurementPeriod) defined action will be applied for the next login attempt.           ",
                                                                "maximum": 10000,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "leakedCredentialsCriteria": {
                                                        "description": "Specifies configuration for Leaked Credentials Detection.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action when leaked credentials detected.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.\n- **alarm-and-leaked-credentials-response-page**: The default response page warns the user that the username and password have been leaked and the password should be changed.",
                                                                "enum": [
                                                                    "alarm",
                                                                    "alarm-and-blocking-page",
                                                                    "alarm-and-honeypot-page",
                                                                    "alarm-and-leaked-credentials-response-page"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "When enabled, the system can match presented credentials to those in the credentials dictionary to detect leaked credentials.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "loginAttemptsFromTheSameDeviceId": {
                                                        "description": "Specifies configuration for detecting brute force attacks for Device ID.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.\n- **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.",
                                                                "enum": [
                                                                    "alarm",
                                                                    "alarm-and-blocking-page",
                                                                    "alarm-and-captcha",
                                                                    "alarm-and-client-side-integrity",
                                                                    "alarm-and-drop",
                                                                    "alarm-and-honeypot-page"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "When enabled, the system counts failed login attempts for Device ID.",
                                                                "type": "boolean"
                                                            },
                                                            "threshold": {
                                                                "description": "After configured threshold (number of failed login attempts for Device ID) defined action will be applied for the next login attempt.",
                                                                "maximum": 100,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "loginAttemptsFromTheSameIp": {
                                                        "description": "Specifies configuration for detecting brute force attacks from IP Address.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.\n- **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.",
                                                                "enum": [
                                                                    "alarm",
                                                                    "alarm-and-blocking-page",
                                                                    "alarm-and-captcha",
                                                                    "alarm-and-client-side-integrity",
                                                                    "alarm-and-drop",
                                                                    "alarm-and-honeypot-page"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "When enabled, the system counts failed login attempts from IP Address.",
                                                                "type": "boolean"
                                                            },
                                                            "threshold": {
                                                                "description": "After configured threshold (number of failed login attempts from IP Address) defined action will be applied for the next login attempt.",
                                                                "maximum": 1000,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "loginAttemptsFromTheSameUser": {
                                                        "description": "Specifies configuration for detecting brute force attacks for Username.",
                                                        "properties": {
                                                            "action": {
                                                                "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.",
                                                                "enum": [
                                                                    "alarm",
                                                                    "alarm-and-captcha",
                                                                    "alarm-and-client-side-integrity"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "description": "When enabled, the system counts failed login attempts for each Username.",
                                                                "type": "boolean"
                                                            },
                                                            "threshold": {
                                                                "description": "After configured threshold (number of failed login attempts for each Username) defined action will be applied for the next login attempt.",
                                                                "maximum": 100,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "measurementPeriod": {
                                                        "description": "Defines detection period (measured in minutes) for distributed brute force attacks.",
                                                        "maximum": 90000,
                                                        "minimum": 60,
                                                        "type": "integer"
                                                    },
                                                    "preventionDuration": {
                                                        "description": "Defines prevention period (measured in minutes) for distributed brute force attacks.",
                                                        "oneOf": [
                                                            {
                                                                "maximum": 90000,
                                                                "minimum": 60,
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "enum": [
                                                                    "90000"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            {
                                                                "pattern": "\\d+$",
                                                                "type": "string"
                                                            }
                                                        ]
                                                    },
                                                    "reEnableLoginAfter": {
                                                        "description": "Defines prevention period (measured in minutes) for source-based brute force attacks.",
                                                        "maximum": 90000,
                                                        "minimum": 60,
                                                        "type": "integer"
                                                    },
                                                    "sourceBasedProtectionDetectionPeriod": {
                                                        "description": "Defines detection period (measured in minutes) for source-based brute force attacks.",
                                                        "maximum": 90000,
                                                        "minimum": 60,
                                                        "type": "integer"
                                                    },
                                                    "url": null
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "caseInsensitive": {
                                    "description": "Specifies whether the security policy treats microservice URLs, file types, URLs, and parameters as case sensitive or not. When this setting is enabled, the system stores these security policy elements in lowercase in the security policy configuration.",
                                    "type": "boolean"
                                },
                                "character-sets": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "characterSet": {
                                                        "items": {
                                                            "properties": {
                                                                "isAllowed": {
                                                                    "type": "boolean"
                                                                },
                                                                "metachar": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "metachar"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "characterSetType": {
                                                        "enum": [
                                                            "gwt-content",
                                                            "header",
                                                            "json-content",
                                                            "parameter-name",
                                                            "parameter-value",
                                                            "plain-text-content",
                                                            "url",
                                                            "xml-content"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "characterSetType"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "cookie-settings": {
                                    "oneOf": [
                                        {
                                            "description": "The maximum length of a cookie header name and value that the system processes. The system calculates and enforces a cookie header length based on the sum of the length of the cookie header name and value.",
                                            "properties": {
                                                "maximumCookieHeaderLength": {
                                                    "description": "Maximum Cookie Header Length must be greater than 0 and less than 65536 bytes (64K). Note: if 0 or *any* are set, then no restriction on the cookie header length is applied.",
                                                    "oneOf": [
                                                        {
                                                            "maximum": 65536,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "cookies": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "This section defines Cookie entities for your policy.\nYou can specify the cookies that you want to allow, and the ones you want to enforce in a security policy:\n\n- **Allowed cookies**: The system allows these cookies and clients can change them.\n- **Enforced cookies**: The system enforces the cookies in the list (not allowing clients to change them) and allows clients to change all others.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "accessibleOnlyThroughTheHttpProtocol": {
                                                        "description": "Specifies, when true, that the system adds the HttpOnly attribute to the domain cookie's response header.\nThis is done to expose the cookie to only HTTP and HTTPS entities.\nThis prevents the cookie from being modified, or intercepted even if it is not modified,\nby unwanted third parties that run scripts on the web page.\n\n**Notes**:\n- The system does not validate that the cookie has not been modified or intercepted.\n- The feature covers all security policy cookies, both enforced and allowed, explicit and wildcard.",
                                                        "type": "boolean"
                                                    },
                                                    "attackSignaturesCheck": {
                                                        "description": "Specifies, when true, that you want attack signatures and threat campaigns to be detected on this cookie\nand possibly override the security policy settings of an attack signature or threat campaign specifically for this cookie.\nAfter you enable this setting, the system displays a list of attack signatures and threat campaigns.",
                                                        "type": "boolean"
                                                    },
                                                    "enforcementType": {
                                                        "description": "Specifies how the system treats this cookie.\n\n- **enforced**: Specifies that according to the security policy, this cookie may not be changed by the client.\n- **allowed**: Specifies that according to the security policy, this cookie may be changed by the client. The system ignores this cookie.",
                                                        "enum": [
                                                            "allow",
                                                            "enforce"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "insertSameSiteAttribute": {
                                                        "description": "The introduction of the SameSite http attribute (defined in [RFC6265bis](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00))\nallows you to declare if your cookie should be restricted to a first-party or same-site context.\nIntroducing the SameSite attribute on a cookie provides three different ways of controlling same-site vs. cross-site cookie sending:\n\n- **strict**: Cookie will only be sent in a first-party context. In user terms, the cookie will only be sent if the site for the cookie matches the site currently shown in the browser's URL bar.\n- **lax**: Cookies will be sent with top level navigation\n- **none-value**: Cookies will be sent in a third-party context.",
                                                        "enum": [
                                                            "lax",
                                                            "none",
                                                            "none-value",
                                                            "strict"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "isBase64": {
                                                        "description": "You can enable the security policy to check whether cookie values contain a Base64 encoded string.\nIf the value is indeed Base64 encoded, the system decodes this value and continues with its security checks.\nSpecifies, when true, that the security policy checks the cookie's value for Base64 encoding, and decodes the value.\n\n**Note**: This setting is only available if Cookie Type is set to Allowed.",
                                                        "type": "boolean"
                                                    },
                                                    "maskValueInLogs": {
                                                        "description": "Specifies, when true, that the cookie's value will be masked in the request log",
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "Specifies the cookie name as appearing in the http cookie header.\nThe cookie name length is limited to 500 characters.\n\nNames can be one of the following according to the *type* attribute:\n\n- **explicit**: Specifies that the cookie has a specific name and is not a wildcard entity. Type the name of a cookie exactly as you expect it to appear in the request.\n- **wildcard**: Specifies that any cookie that matches the listed wildcard expression should be treated according to the wildcard attributes. Type a wildcard expression that matches the expected cookie. For example, the wildcard expression cookie_12* of type Enforced specifies that the security policy should not allow modified domain cookies for all cookies which match cookie_12*.\n\nThe syntax for wildcard entities is based on shell-style wildcard characters.\nThe list below describes the wildcard characters that you can use so that the entity name can match multiple objects.\n\n- **\\***: Matches all characters\n- **?**: Matches any single character\n- **[abcde]**: Matches exactly one of the characters listed\n- **[!abcde]**: Matches any character not listed\n- **[a-e]**: Matches exactly one character in the range\n- **[!a-e]**: Matches any character not in the range\n\n**Note**: Wildcards do not match regular expressions. Do not use a regular expression as a wildcard.",
                                                        "type": "string"
                                                    },
                                                    "performStaging": {
                                                        "description": "If *true* then any violation associated to the respective cookie will not be enforced, and the request will not be considered illegal.",
                                                        "type": "boolean"
                                                    },
                                                    "securedOverHttpsConnection": {
                                                        "description": "Specifies, when true, that the system adds the Secure attribute to the domain cookie's response header.\nThis is done to ensure that the cookies are returned to the server only over SSL (by using the HTTPS protocol).\nThis prevents the cookie from being intercepted, but does not guarantee its integrity.\n\n**Notes**:\n- The system does not validate that the cookie was received over SSL.\n- The feature covers all security policy cookies, both enforced and allowed, explicit and wildcard.",
                                                        "type": "boolean"
                                                    },
                                                    "signatureOverrides": {
                                                        "description": "Array of signature overrides.\nSpecifies attack signatures whose security policy settings are overridden for this cookie,\nand which action the security policy takes when it discovers a request for this cookie that matches these attack signatures.",
                                                        "items": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Specifies, when true, that the overridden signature is enforced",
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "description": "The signature name which, along with the signature tag, identifies the signature.",
                                                                    "type": "string"
                                                                },
                                                                "signatureId": {
                                                                    "description": "The signature ID which identifies the signature.",
                                                                    "type": "integer"
                                                                },
                                                                "tag": {
                                                                    "description": "The signature tag which, along with the signature name, identifies the signature.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "description": "Determines the type of the **name** attribute.\nOnly when setting the type to wildcard will the special wildcard characters in the name be interpreted as such.",
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "wildcardOrder": {
                                                        "description": "Specifies the order index for wildcard cookies matching.\nWildcard cookies with lower wildcard order will get checked for a match prior to cookies with higher wildcard order.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "csrf-protection": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "expirationTimeInSeconds": {
                                                    "oneOf": [
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "disabled"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "sslOnly": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "csrf-urls": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "enforcementAction": {
                                                        "enum": [
                                                            "none",
                                                            "verify-csrf-token",
                                                            "verify-origin"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "method": {
                                                        "enum": [
                                                            "GET",
                                                            "POST",
                                                            "any"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "parametersList": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "requiredParameters": {
                                                        "enum": [
                                                            "at-least-one",
                                                            "from-parameters-list",
                                                            "ignore"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    },
                                                    "wildcardOrder": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "data-guard": {
                                    "oneOf": [
                                        {
                                            "description": "Data Guard feature can prevent responses from exposing sensitive information by masking the data.",
                                            "properties": {
                                                "creditCardNumbers": {
                                                    "description": "If *true* the system considers credit card numbers as sensitive data.",
                                                    "type": "boolean"
                                                },
                                                "customPatterns": {
                                                    "description": "If *true* the system recognizes customized patterns as sensitive data.",
                                                    "type": "boolean"
                                                },
                                                "customPatternsList": {
                                                    "description": "List of PCRE regular expressions that specify the sensitive data patterns.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "enabled": {
                                                    "description": "If *true* the system protects sensitive data.",
                                                    "type": "boolean"
                                                },
                                                "enforcementMode": {
                                                    "description": "Specifies the URLs for which the system enforces data guard protection.\n\n- **ignore-urls-in-list**: Specifies that the system enforces data guard protection for all URLs except for those URLs in the Enforcement Mode list.\n- **enforce-urls-in-list**: Specifies that the system enforces data guard protection only for those URLs in the Enforcement Mode list",
                                                    "enum": [
                                                        "enforce-urls-in-list",
                                                        "ignore-urls-in-list"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enforcementUrls": {
                                                    "description": "List of URLS to be enforced based on enforcement mode of data guard protection.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "exceptionPatterns": {
                                                    "description": "If *true* the system recognizes exception patterns as not being sensitive data.",
                                                    "type": "boolean"
                                                },
                                                "exceptionPatternsList": {
                                                    "description": "List of PCRE regular expressions that specify the data patterns that are not recognized as sensitive data.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "fileContentDetection": {
                                                    "description": "If *true* the system checks responses for file content.",
                                                    "type": "boolean"
                                                },
                                                "fileContentDetectionFormats": {
                                                    "description": "File content types that the system considers to be sensitive data. Available file content types:\n      - MS Office 2007 or later\n      - MS Office 97-2003 document\n      - PDF - Adobe Portable Document Format\n      - Mach-O - Mach object file format - used in Mac OS X\n      - PE - Portable Executable for Windows\n      - ELF - binary file format for Unix",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "enum": [
                                                                    "ELF - binary file format for Unix",
                                                                    "MS Office 2007 or later",
                                                                    "MS Office 97-2003 document",
                                                                    "Mach-O - Mach object file format - used in Mac OS X",
                                                                    "PDF - Adobe Portable Document Format",
                                                                    "PE - Portable Executable for Windows"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "lastCcnDigitsToExpose": {
                                                    "description": "Specifies the number of last digits in credit card numbers that are exposed.",
                                                    "maximum": 20,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "lastSsnDigitsToExpose": {
                                                    "description": "Specifies the number of last digits in U.S Social Security numbers that are exposed.",
                                                    "maximum": 20,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "maskData": {
                                                    "description": "If *true* the system intercepts the returned responses to mask sensitive data.",
                                                    "type": "boolean"
                                                },
                                                "usSocialSecurityNumbers": {
                                                    "description": "If *true* the system considers U.S Social Security numbers as sensitive data.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "enabled"
                                            ],
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "database-protection": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "databaseProtectionEnabled": {
                                                    "type": "boolean"
                                                },
                                                "userSource": {
                                                    "enum": [
                                                        "apm",
                                                        "login-pages"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "deception-response-pages": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "responseBody": {
                                                        "type": "string"
                                                    },
                                                    "responseHeaders": {
                                                        "type": "string"
                                                    },
                                                    "responseStatusCode": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "responseStatusCode"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "deception-settings": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "enableCustomResponses": {
                                                    "type": "boolean"
                                                },
                                                "enableResponsePageByAttackType": {
                                                    "type": "boolean"
                                                },
                                                "responseStatusCodes": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "serverTechnologyName": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "description": {
                                    "description": "Specifies the description of the policy.",
                                    "type": "string"
                                },
                                "disabled-action-items": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "cookie-staging",
                                                            "default-parameter",
                                                            "filetype-staging",
                                                            "modified-policy",
                                                            "parameter-staging",
                                                            "policy-validation",
                                                            "scanner-vulnerabilities",
                                                            "signature-staging",
                                                            "threat-campaign-staging",
                                                            "transparent-policy",
                                                            "url-staging",
                                                            "websocket-url-staging"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "disallowed-geolocations": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "Specifies a list of countries that may not access the web application.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "countryCode": {
                                                        "description": "Specifies the ISO country code of the selected country.",
                                                        "type": "string"
                                                    },
                                                    "countryName": {
                                                        "description": "Specifies the name of the country.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "countryName"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "dos-protection": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "enablePassiveMode": {
                                    "description": "Passive Mode allows the policy to be associated with a Performance L4 Virtual Server (using a FastL4 profile). With FastL4, traffic is analyzed but is not modified in any way.",
                                    "type": "boolean"
                                },
                                "enforcementMode": {
                                    "description": "How the system processes a request that triggers a security policy violation.\n- **Blocking:** When the enforcement mode is set to blocking, traffic is blocked if it causes a violation (configured for blocking).\n- **Transparent:** When the enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.",
                                    "enum": [
                                        "blocking",
                                        "transparent"
                                    ],
                                    "type": "string"
                                },
                                "filetypes": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "File types are categorization of the URLs in the request by the extension appearing past the last dot at the end of the URL. For example, the file type of /index.php\nis \"php\". Other well known file types are html, aspx, png, jpeg and many more. A special case is the \"empty\" file type called \"no-ext\" meaning, no extension in which the URL has no dot at its last segment as in /foo_no_dot\n\nFile types usually imply the expected content type in the response. For example, html and php return HTML content, while jpeg, png and gif return images, each in its respective format. File types also imply the server technology deployed for rendering the page. For example, php (PHP), aspx (ASP) and many others.\n\nThe security policy uses file types for several purposes:\n1. Ability to define which file types are allowed and which are disallowed. By including the pure wildcard \"\\*\" file type and a list of disallowed file types you have a file type denylist.\nBy having a list of explicit file type *without* the pure wildcard \"\\*\" you have a file type allowlist.\n2. Each file type implies maximum *length restrictions* for the requests of that file type. The checked lengths are per the URL, Query String, total request length, and payload (POST data).\n3. Each file type determines whether to detect *response signatures* for requests of that file type. Typically, one would never check signatures for image file types.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "allowed": {
                                                        "description": "Determines whether the file type is allowed or disallowed. In either of these cases the VIOL_FILETYPE violation is issued (if enabled) for an incoming request-\n1. No allowed file type matched the file type of the request.\n2. The file type of the request matched a disallowed file type.",
                                                        "type": "boolean"
                                                    },
                                                    "checkPostDataLength": {
                                                        "description": "Determines whether to enforce maximum length restriction for the body, a.k.a. \"POST data\" part of the requests that match the respective file type. The maximum length is determined by *postDataLength* attribute.\nAlthough named \"POST data\", this applies to any content type and not restricted to POST requests, e.g. PUT requests are also checked.\nThis attribute is relevant only to *allowed* file types.",
                                                        "type": "boolean"
                                                    },
                                                    "checkQueryStringLength": {
                                                        "description": "Determines whether to enforce maximum length restriction for the query string of the requests that match the respective file type. The maximum length is determined by *queryStringLength* attribute.\nThis attribute is relevant only to *allowed* file types.",
                                                        "type": "boolean"
                                                    },
                                                    "checkRequestLength": {
                                                        "description": "Determines whether to enforce maximum length restriction for the total length of requests that match the respective file type. The maximum length is determined by *requestLength* attribute.\nThis attribute is relevant only to *allowed* file types.",
                                                        "type": "boolean"
                                                    },
                                                    "checkUrlLength": {
                                                        "description": "Determines whether to enforce maximum length restriction for the URL of the requests that match the respective file type. The URL does *not* include the query string, past the &. The maximum length is determined by *urlLength* attribute.\nThis attribute is relevant only to *allowed* file types.",
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "Specifies the file type name as appearing in the URL extension. Names can be one of the following according to the *type* attribute:\n\n- **Explicit** - Specifies that the name is the literal file extension to which the file type refers. The *type* attribute has to be \"explicit\".\n- **No Extension** - Specifies the empty file type, lacking file extension. For this the reserved string **no_ext** should be used. The *type* attribute has to be \"explicit\".\n- **Wildcard** - Specifies that any file extension that matches the wildcard expression is matched to this file type in the policy. The *type* attribute has to be \"wildcard\".\n\nThe syntax for wildcard entities is based on shell-style wildcard characters. The list below describes the wildcard characters that you can use so that the entity name can match multiple objects.\n\n- **\\***: Matches all characters\n- **?**: Matches any single character\n- **[abcde]**: Matches exactly one of the characters listed\n- **[!abcde]**: Matches any character not listed\n- **[a-e]**: Matches exactly one character in the range\n- **[!a-e]**: Matches any character not in the range\n\n**Note**: Wildcards do not match regular expressions. Do not use a regular expression as a wildcard.",
                                                        "type": "string"
                                                    },
                                                    "performStaging": {
                                                        "description": "If *true* then any violation associated to the respective file type will not be enforced, and the request will not be considered illegal.",
                                                        "type": "boolean"
                                                    },
                                                    "postDataLength": {
                                                        "description": "The maximum length in bytes of the body (POST data) of the request matching the file type. Enforced only if checkPostDataLength is set to *true*.\nIf the value is exceeded then VIOL_POST_DATA_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "queryStringLength": {
                                                        "description": "The maximum length in bytes of the query string of the request matching the file type. Enforced only if checkQueryStringLength is set to *true*.\nIf the value is exceeded then VIOL_QUERY_STRING_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "requestLength": {
                                                        "description": "The maximum total length in bytes of the request matching the file type. Enforced only if checkRequestLength is set to *true*.\nIf the value is exceeded then VIOL_REQUEST_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "responseCheck": {
                                                        "description": "Determines whether the responses to requests that match the respective file types are inspected for attack signature detection.\nThis attribute is relevant only to *allowed* file types.",
                                                        "type": "boolean"
                                                    },
                                                    "type": {
                                                        "description": "Determines the type of the **name** attribute. Only when setting the type to wildcard will the special wildcard characters in the name be interpreted as such.",
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "urlLength": {
                                                        "description": "The maximum length in bytes of the URL of the request matching the file type, excluding the query string. Enforced only if checkUrlLength is set to *true*.\nIf the value is exceeded then VIOL_URL_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "wildcardOrder": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "fullPath": {
                                    "description": "The full name of the policy including partition.",
                                    "type": "string"
                                },
                                "general": {
                                    "oneOf": [
                                        {
                                            "description": "This section includes several advanced policy configuration settings.",
                                            "properties": {
                                                "allowedResponseCodes": {
                                                    "description": "You can specify which responses a security policy permits.\nBy default, the system accepts all response codes from 100 to 399 as valid responses.\nResponse codes from 400 to 599 are considered invalid unless added to the Allowed Response Status Codes list.\nBy default, 400, 401, 404, 407, 417, and 503 are on the list as allowed HTTP response status codes.",
                                                    "items": {
                                                        "type": "integer"
                                                    },
                                                    "type": "array"
                                                },
                                                "customXffHeaders": {
                                                    "description": "If you require the system to trust a server further than one hop toward the client (the last proxy traversed), you can use the Custom XFF Headers setting to define a specific header that is inserted closer to, or at the client, that the system will trust.\nAdditionally, if you require the system to trust a proxy server that uses a different header name than the X-Forwarded-For header name, you can add the desired header name to the Custom XFF Headers setting.\nWhen adding a custom header, the X-Forwarded-For header is not trusted anymore. In case the X-Forwarded-For header is to be trusted along with other headers, you must add it to the custom headers list.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "dynamicSessionIdDescription": {
                                                    "description": "A description of user-defined regular expression that the security policy uses to recognize dynamic sessions in URLs.",
                                                    "type": "string"
                                                },
                                                "dynamicSessionIdInUrl": {
                                                    "description": "A user-defined regular expression that the security policy uses to recognize dynamic sessions in URLs.",
                                                    "type": "string"
                                                },
                                                "enableEventCorrelation": {
                                                    "description": "This feature designed to provide an aggregated view of security events in the Configuration utility.\nWhen two or more illegal requests are sent to the web application within a short period of time, the system correlates them as a security event.\nFor example, the system aggregates requests into a single event if a single user causes multiple violations over time.\nWhen enabled, Event Correlation Reporting logs are collected.",
                                                    "type": "boolean"
                                                },
                                                "enforcementReadinessPeriod": {
                                                    "description": "For each security policy, you can configure the number of days used as the enforcement readiness period, also called staging.\nSecurity policy entities and attack signatures remain in staging for this period of time before the system suggests that you enforce them.\nStaging allows you to test security policy entities and attack signatures for false positives without enforcing them.\nThe default value of 7 days works for most situations so you typically do not need to change it.",
                                                    "maximum": 999,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "maskCreditCardNumbersInRequest": {
                                                    "description": "When enabled, the security policy masks credit card numbers that appear in any part of requests. The system does not mask the information in the actual requests, but rather in various logs:\n* Credit card numbers appearing in entity names are masked in the requests of the Requests log.\n* Credit card numbers appearing in entity values are masked wherever requests can be viewed: the Requests log, violation details within that log, manual learning, and reports.\nThis setting is enabled by default, and exists in addition to masking parameters defined as containing sensitive information.",
                                                    "type": "boolean"
                                                },
                                                "pathParameterHandling": {
                                                    "description": "A URI path parameter is the part of a path segment that occurs after its name. You can configure how a security policy handles path parameters that are attached to path segments in URIs.\nYou can enforce different levels of security based on your needs:\n\n- **as-parameter**: The system normalizes and enforces path parameters. For each path parameter, the system removes it from URLs as part of the normalization process, finds a corresponding parameter in the security policy (first at the matching URL level, and if not found, then at the Global level), and enforces it according to its attributes like any other parameters.\n- **as-url**: The system does not normalize nor enforce path parameters. Path parameters are considered an integral part of the URL.\n- **ignore**: The system removes path parameters from URLs as part of the normalization process, but does not enforce them.",
                                                    "enum": [
                                                        "as-parameters",
                                                        "as-url",
                                                        "ignore"
                                                    ],
                                                    "type": "string"
                                                },
                                                "triggerAsmIruleEvent": {
                                                    "description": "When enabled, the system activates ASM iRule events. When disabled, the system does not activate ASM iRule events. Enable this option if you have written iRules that process ASM iRule events, and assigned them to a specific virtual server. The default setting is disabled.\n\n- **disabled**: Leave this option disabled if you either have not written any ASM iRules.\n- **enabled-normal**: The system invokes the event ASM_REQUEST_DONE after the system completes processing each request, regardless of whether the request triggered violations. This gives you the opportunity, using iRules, to configure the system to perform actions after ASM handles requests whether they trigger, or do not trigger, violations.\n- **enabled-compatibility**: The system invokes the event ASM_REQUEST_VIOLATION after the system completes processing each request that triggered a violation. This gives you the opportunity, using iRules, to configure the system to perform actions after ASM handles requests only that trigger violations.",
                                                    "enum": [
                                                        "disabled",
                                                        "enabled-compatibility",
                                                        "enabled-normal"
                                                    ],
                                                    "type": "string"
                                                },
                                                "trustXff": {
                                                    "description": "When enabled, the system has confidence in an XFF (X-Forwarded-For) header in the request. When disabled, that the system does not have confidence in an XFF header in the request. The default setting is disabled.\n\nSelect this option if the system is deployed behind an internal or other trusted proxy. Then, the system uses the IP address that initiated the connection to the proxy instead of the internal proxy's IP address.\n\nLeave this option disabled if you think the HTTP header may be spoofed, or crafted, by a malicious client. With this setting disabled, if the system is deployed behind an internal proxy, the system uses the internal proxy's IP address instead of the client's IP address.",
                                                    "type": "boolean"
                                                },
                                                "useDynamicSessionIdInUrl": {
                                                    "description": "How the security policy processes URLs that use dynamic sessions. When disabled the security policy does not enforce dynamic sessions in URLs.\nWhen enabled the system will use a default or user-defined pattern for recognizing dynamic sessions in URLs.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "graphql-profiles": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "attackSignaturesCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "defenseAttributes": {
                                                        "properties": {
                                                            "allowIntrospectionQueries": {
                                                                "type": "boolean"
                                                            },
                                                            "maximumBatchedQueries": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumQueryCost": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumStructureDepth": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumTotalLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumValueLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "tolerateParsingWarnings": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "hasIdlFiles": {
                                                        "type": "boolean"
                                                    },
                                                    "idlFiles": {
                                                        "items": {
                                                            "properties": {
                                                                "idlFile": null,
                                                                "isPrimary": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "idlFile"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "metacharElementCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "metacharOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "isAllowed": {
                                                                    "type": "boolean"
                                                                },
                                                                "metachar": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "metachar"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "responseEnforcement": {
                                                        "properties": {
                                                            "blockDisallowedPatterns": {
                                                                "type": "boolean"
                                                            },
                                                            "disallowedPatterns": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "sensitiveData": {
                                                        "items": {
                                                            "properties": {
                                                                "parameterName": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "parameterName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "signatureOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "signatureId": {
                                                                    "type": "integer"
                                                                },
                                                                "tag": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "grpc-profiles": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "associateUrls": {
                                                        "type": "boolean"
                                                    },
                                                    "attackSignaturesCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "decodeStringValuesAsBase64": {
                                                        "enum": [
                                                            "disabled",
                                                            "enabled"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "defenseAttributes": {
                                                        "properties": {
                                                            "allowUnknownFields": {
                                                                "type": "boolean"
                                                            },
                                                            "maximumDataLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "hasIdlFiles": {
                                                        "type": "boolean"
                                                    },
                                                    "idlFiles": {
                                                        "items": {
                                                            "properties": {
                                                                "idlFile": null,
                                                                "importUrl": {
                                                                    "type": "string"
                                                                },
                                                                "isPrimary": {
                                                                    "type": "boolean"
                                                                },
                                                                "primaryIdlFileName": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "idlFile"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "metacharElementCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "signatureOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "signatureId": {
                                                                    "type": "integer"
                                                                },
                                                                "tag": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "gwt-profiles": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "attackSignaturesCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "defenseAttributes": {
                                                        "properties": {
                                                            "maximumTotalLengthOfGWTData": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumValueLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "tolerateGWTParsingWarnings": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "metacharElementCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "metacharOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "isAllowed": {
                                                                    "type": "boolean"
                                                                },
                                                                "metachar": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "metachar"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "signatureOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "signatureId": {
                                                                    "type": "integer"
                                                                },
                                                                "tag": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "header-settings": {
                                    "oneOf": [
                                        {
                                            "description": "The maximum length of an HTTP header name and value that the system processes. The system calculates and enforces the HTTP header length based on the sum of the length of the HTTP header name and value.",
                                            "properties": {
                                                "maximumHttpHeaderLength": {
                                                    "description": "Maximum HTTP Header Length must be greater than 0 and less than 65536 bytes (64K). Note: if 0 or *any* are set, then no restriction on the HTTP header length is applied.",
                                                    "oneOf": [
                                                        {
                                                            "maximum": 65536,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "headers": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "This section defines Header entities for your policy.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "allowRepeatedOccurrences": {
                                                        "type": "boolean"
                                                    },
                                                    "base64Decoding": {
                                                        "type": "boolean"
                                                    },
                                                    "checkSignatures": {
                                                        "type": "boolean"
                                                    },
                                                    "htmlNormalization": {
                                                        "type": "boolean"
                                                    },
                                                    "mandatory": {
                                                        "type": "boolean"
                                                    },
                                                    "maskValueInLogs": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "Specifies the HTTP header name.\nThe header name length is limited to 254 characters.\n\nNames can be one of the following according to the *type* attribute:\n\n- **explicit**: Specifies that the header has a specific name and is not a wildcard entity. The name of the header exactly as you expect it to appear in the request.\n- **wildcard**: Specifies that any header that matches the listed wildcard expression should be treated according to the wildcard attributes.\n\nThe syntax for wildcard entities is based on shell-style wildcard characters.\nThe list below describes the wildcard characters that you can use so that the entity name can match multiple objects.\n\n- **\\***: Matches all characters\n- **?**: Matches any single character\n- **[abcde]**: Matches exactly one of the characters listed\n- **[!abcde]**: Matches any character not listed\n- **[a-e]**: Matches exactly one character in the range\n- **[!a-e]**: Matches any character not in the range\n\n**Note**: Wildcards do not match regular expressions. Do not use a regular expression as a wildcard.",
                                                        "type": "string"
                                                    },
                                                    "normalizationViolations": {
                                                        "type": "boolean"
                                                    },
                                                    "percentDecoding": {
                                                        "type": "boolean"
                                                    },
                                                    "signatureOverrides": {
                                                        "description": "Array of signature overrides.\nSpecifies attack signatures whose security policy settings are overridden for this header,\nand which action the security policy takes when it discovers a request for this header that matches these attack signatures.",
                                                        "items": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Specifies, when true, that the overridden signature is enforced",
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "description": "The signature name which, along with the signature tag, identifies the signature.",
                                                                    "type": "string"
                                                                },
                                                                "signatureId": {
                                                                    "description": "The signature ID which identifies the signature.",
                                                                    "type": "integer"
                                                                },
                                                                "tag": {
                                                                    "description": "The signature tag which, along with the signature name, identifies the signature.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "description": "Determines the type of the **name** attribute.\nOnly when setting the type to wildcard will the special wildcard characters in the name be interpreted as such.",
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "urlNormalization": {
                                                        "type": "boolean"
                                                    },
                                                    "wildcardOrder": {
                                                        "description": "Specifies the order index for wildcard header matching.\nWildcard headers with lower wildcard order will get checked for a match prior to headers with higher wildcard order.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "host-names": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "includeSubdomains": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "idl-files": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "required": [
                                                            "id"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "id",
                                                            "$ref"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "id",
                                                            "link"
                                                        ]
                                                    }
                                                ],
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "$ref": {
                                                        "format": "uri",
                                                        "type": "string"
                                                    },
                                                    "contents": {
                                                        "type": "string"
                                                    },
                                                    "fileName": {
                                                        "type": "string"
                                                    },
                                                    "isBase64": {
                                                        "type": "boolean"
                                                    },
                                                    "link": {
                                                        "format": "uri",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "ip-intelligence": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "ipIntelligenceCategories": {
                                                    "items": {
                                                        "properties": {
                                                            "alarm": {
                                                                "type": "boolean"
                                                            },
                                                            "block": {
                                                                "type": "boolean"
                                                            },
                                                            "category": {
                                                                "enum": [
                                                                    "Anonymous Proxy",
                                                                    "BotNets",
                                                                    "Cloud-based Services",
                                                                    "Denial of Service",
                                                                    "Infected Sources",
                                                                    "Mobile Threats",
                                                                    "Phishing Proxies",
                                                                    "Scanners",
                                                                    "Spam Sources",
                                                                    "Tor Proxies",
                                                                    "Web Attacks",
                                                                    "Windows Exploits"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "enum": [
                                                                    "The Anonymous Proxy category includes IP addresses that provide proxy and anonymizing services.",
                                                                    "The Botnets category includes Botnet C&C channels and an infected zombie machine controlled by a Bot master.",
                                                                    "The Cloud-based Services category includes IP addresses and networks that are used by cloud providers.",
                                                                    "The Denial of Services category includes DOS, DDOS, anomalous syn flood, and anomalous traffic detection.",
                                                                    "The Infected Sources category includes IP addresses currently known to be infected with malware, and IP addresses with an average low Reputation Index score. Enabling this category prevents access from sources identified to contact malware distribution points.",
                                                                    "The Mobile Threats category includes IP addresses of malicious and unwanted mobile applications.",
                                                                    "The Phishing Proxies category includes IP addresses hosting phishing sites, and other kind of fraud activities such as Ad Click Fraud and Gaming fraud.",
                                                                    "The Scanners category includes all reconnaissance, such as probes, host scan, domain scan, and password brute force.",
                                                                    "The Spam Sources category includes Tunneling Spam messages through proxy, anomalous SMTP activities, and Forum Spam activities.",
                                                                    "The Tor Proxies category includes IP addresses acting as exit nodes for the Tor Network. Exit nodes are the last point along the proxy chain and make a direct connection to the originatorâs intended destination.",
                                                                    "The Web Attacks category includes cross site scripting, iFrame injection, SQL injection, cross domain injection, and domain password brute force.",
                                                                    "The Windows Exploits category includes active IP address offering or distributing malware, shell code, rootkits, worms, and viruses."
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "category"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "json-profiles": {
                                    "oneOf": [
                                        {
                                            "items": null,
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "json-validation-files": {
                                    "oneOf": [
                                        {
                                            "items": null,
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "login-enforcement": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "authenticatedUrls": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "expirationTimePeriod": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 99999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "disabled"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "logoutUrls": {
                                                    "items": {
                                                        "properties": {
                                                            "requestContains": {
                                                                "type": "string"
                                                            },
                                                            "requestOmits": {
                                                                "type": "string"
                                                            },
                                                            "url": null
                                                        },
                                                        "required": [
                                                            "url"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "login-pages": {
                                    "oneOf": [
                                        {
                                            "items": null,
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "methods": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "actAsMethod": {
                                                        "enum": [
                                                            "GET",
                                                            "POST"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "microservices": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "enforcementMode": {
                                                        "enum": [
                                                            "blocking",
                                                            "policy-default",
                                                            "transparent"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "evasionOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "description": {
                                                                    "enum": [
                                                                        "%u decoding",
                                                                        "Apache whitespace",
                                                                        "Bad unescape",
                                                                        "Bare byte decoding",
                                                                        "Directory traversals",
                                                                        "IIS Unicode codepoints",
                                                                        "IIS backslashes",
                                                                        "Multiple decoding",
                                                                        "Multiple slashes",
                                                                        "Semicolon path parameters",
                                                                        "Trailing dot",
                                                                        "Trailing slash"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "learn": {
                                                                    "type": "boolean"
                                                                },
                                                                "maxDecodingPasses": {
                                                                    "maximum": 5,
                                                                    "minimum": 2,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostName": {
                                                        "type": "string"
                                                    },
                                                    "hostNameType": {
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "httpProtocolOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "description": {
                                                                    "enum": [
                                                                        "Bad HTTP version",
                                                                        "Bad host header value",
                                                                        "Bad multipart parameters parsing",
                                                                        "Bad multipart/form-data request parsing",
                                                                        "Body in GET or HEAD requests",
                                                                        "CRLF characters before request start",
                                                                        "Check maximum number of cookies",
                                                                        "Check maximum number of headers",
                                                                        "Check maximum number of parameters",
                                                                        "Chunked request with Content-Length header",
                                                                        "Content length should be a positive number",
                                                                        "Header name with no header value",
                                                                        "High ASCII characters in headers",
                                                                        "Host header contains IP address",
                                                                        "Multiple host headers",
                                                                        "No Host header in HTTP/1.1 request",
                                                                        "Null in request",
                                                                        "POST request with Content-Length: 0",
                                                                        "Several Content-Length headers",
                                                                        "Unescaped space in URL",
                                                                        "Unparsable request content"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "learn": {
                                                                    "type": "boolean"
                                                                },
                                                                "maxCookies": {
                                                                    "maximum": 100,
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                },
                                                                "maxHeaders": {
                                                                    "maximum": 150,
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                },
                                                                "maxParams": {
                                                                    "maximum": 5000,
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "urlName": {
                                                        "type": "string"
                                                    },
                                                    "urlType": {
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "violationOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "alarm": {
                                                                    "type": "boolean"
                                                                },
                                                                "block": {
                                                                    "type": "boolean"
                                                                },
                                                                "learn": {
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "wildcardOrder": {
                                                        "type": "integer"
                                                    },
                                                    "wildcardUrlIncludesSlash": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "urlName",
                                                    "hostName"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "name": {
                                    "description": "The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).",
                                    "type": "string"
                                },
                                "navigation-parameters": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "urlName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "urlName",
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "open-api-files": {
                                    "items": {
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "link": {
                                                        "format": "uri",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "link"
                                                ],
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "filename": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "filename"
                                                ],
                                                "type": "object"
                                            },
                                            null
                                        ]
                                    },
                                    "type": "array"
                                },
                                "parameters": {
                                    "oneOf": [
                                        {
                                            "items": null,
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "performStaging": {
                                    "description": "Determines staging handling for all applicable entities in the policy, such as signatures, URLs, parameters, and cookies. If disabled, all entities will be enforced and any violations triggered will be considered illegal.",
                                    "type": "boolean"
                                },
                                "plain-text-profiles": {
                                    "oneOf": [
                                        {
                                            "items": null,
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "autoApply": {
                                                    "properties": {
                                                        "applyAtAllTimes": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnAllDays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnFridays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnMondays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnSaturdays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnSundays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnThursdays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnTuesdays": {
                                                            "type": "boolean"
                                                        },
                                                        "applyOnWednesdays": {
                                                            "type": "boolean"
                                                        },
                                                        "endTime": {
                                                            "type": "string"
                                                        },
                                                        "frequency": {
                                                            "enum": [
                                                                "never",
                                                                "real-time",
                                                                "scheduled"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "startTime": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "enableFullPolicyInspection": {
                                                    "type": "boolean"
                                                },
                                                "enableTrustedTrafficSiteChangeTracking": {
                                                    "type": "boolean"
                                                },
                                                "enableUntrustedTrafficSiteChangeTracking": {
                                                    "type": "boolean"
                                                },
                                                "fullyAutomatic": {
                                                    "type": "boolean"
                                                },
                                                "inactiveEntityInactivityDurationInDays": {
                                                    "maximum": 999,
                                                    "minimum": 0.0001,
                                                    "type": "number"
                                                },
                                                "learnFromResponses": {
                                                    "type": "boolean"
                                                },
                                                "learnInactiveEntities": {
                                                    "type": "boolean"
                                                },
                                                "learnOnlyFromNonBotTraffic": {
                                                    "type": "boolean"
                                                },
                                                "learningMode": {
                                                    "enum": [
                                                        "automatic",
                                                        "disabled",
                                                        "manual"
                                                    ],
                                                    "type": "string"
                                                },
                                                "responseStatusCodes": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "trafficTighten": {
                                                    "properties": {
                                                        "maxModificationSuggestionScore": {
                                                            "maximum": 100,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "minDaysBetweenSamples": {
                                                            "maximum": 999,
                                                            "minimum": 0,
                                                            "type": "number"
                                                        },
                                                        "totalRequests": {
                                                            "maximum": 2147483647,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "trustAllIps": {
                                                    "type": "boolean"
                                                },
                                                "trustedTrafficLoosen": {
                                                    "properties": {
                                                        "differentSources": {
                                                            "maximum": 2147483647,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "maxDaysBetweenSamples": {
                                                            "maximum": 999,
                                                            "minimum": 0.0001,
                                                            "type": "number"
                                                        },
                                                        "minHoursBetweenSamples": {
                                                            "maximum": 9999,
                                                            "minimum": 0,
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "trustedTrafficSiteChangeTracking": {
                                                    "properties": {
                                                        "differentSources": {
                                                            "maximum": 2147483647,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "maxDaysBetweenSamples": {
                                                            "maximum": 999,
                                                            "minimum": 0.0001,
                                                            "type": "number"
                                                        },
                                                        "minMinutesBetweenSamples": {
                                                            "maximum": 99999,
                                                            "minimum": 0,
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "untrustedTrafficLoosen": {
                                                    "properties": {
                                                        "differentSources": {
                                                            "maximum": 2147483647,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "maxDaysBetweenSamples": {
                                                            "maximum": 999,
                                                            "minimum": 0.0001,
                                                            "type": "number"
                                                        },
                                                        "minHoursBetweenSamples": {
                                                            "maximum": 9999,
                                                            "minimum": 0,
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "untrustedTrafficSiteChangeTracking": {
                                                    "properties": {
                                                        "differentSources": {
                                                            "maximum": 2147483647,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "maxDaysBetweenSamples": {
                                                            "maximum": 999,
                                                            "minimum": 0.0001,
                                                            "type": "number"
                                                        },
                                                        "minMinutesBetweenSamples": {
                                                            "maximum": 99999,
                                                            "minimum": 0,
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-central-configuration": {
                                    "oneOf": [
                                        {
                                            "description": "Defines Policy Builder learning location and related configuration.",
                                            "properties": {
                                                "buildingMode": {
                                                    "description": "Specifies learning location.\n\n- **central**: Security policy learning is done centrally and managed via a BIG-IQ system. Centralized learning can be enabled from BIG-IQ only and, when enabled, all interim local policy learning will be lost. When learning is centralized, you cannot make local changes on your BIG-IP that will affect the security policy learning.\n- **local**: Security policy learning is done locally and managed on BIG-IP",
                                                    "enum": [
                                                        "central",
                                                        "local"
                                                    ],
                                                    "type": "string"
                                                },
                                                "centralPbAddresses": {
                                                    "description": "Specifies list of BIG-IQ machines that local Policy Builder is sending data to.",
                                                    "items": {
                                                        "properties": {
                                                            "hostName": {
                                                                "description": "Host name of BIG-IQ machine.",
                                                                "type": "string"
                                                            },
                                                            "ipAddress": {
                                                                "description": "IP address of BIG-IQ machine.",
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "description": "Order or BIG-IQ machine in the list.",
                                                                "type": "integer"
                                                            },
                                                            "port": {
                                                                "description": "Port that BIG-IQ machine is listening to.",
                                                                "maximum": 65535,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "verifyCertificate": {
                                                                "description": "If enabled - certificate should be verified when connecting to BIG-IQ machine",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "port",
                                                            "ipAddress"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "eventCorrelationMode": {
                                                    "description": "Specifies event correlation location.\n\n- **central**: Event correlation is done centrally and stored in a BIG-IQ system.\n- **local**: Event correlation is done locally and stored on BIG-IP.",
                                                    "enum": [
                                                        "central",
                                                        "local"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-cookie": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "collapseCookieOccurrences": {
                                                    "minimum": 2,
                                                    "type": "integer"
                                                },
                                                "collapseCookiesIntoOneEntity": {
                                                    "type": "boolean"
                                                },
                                                "enforceUnmodifiedCookies": {
                                                    "type": "boolean"
                                                },
                                                "learnExplicitCookies": {
                                                    "enum": [
                                                        "never",
                                                        "selective"
                                                    ],
                                                    "type": "string"
                                                },
                                                "maximumCookies": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-filetype": {
                                    "oneOf": [
                                        {
                                            "description": "Defines Policy Builder behavior for filetypes",
                                            "properties": {
                                                "learnExplicitFiletypes": {
                                                    "description": "Specifies under which circumstances the Policy Builder adds, or suggests you add, explicit file types to the security policy:\n\n- **compact**: Specifies that the system will create a list of the most commonly used file types (while enforcing all other file types with a wildcard rule), together with a pre-populated list of known disallowed file types. This option serves as a good balance between **selective** and **always**\n- **selective**: Specifies that when false positives occur (applicable only for the * wildcard), the system will add/suggest to add an explicit file type with relaxed settings that avoid the false positive. This option serves as a good balance between security, policy size, and ease of maintenance\n- **always**: Specifies you would like to create a comprehensive whitelist policy that includes ALL of the website file types. This option will form a large set of security policy entities, which will produce a granular object-level configuration and high security level, it may take more time to maintain such a policy\n- **never**: Specifies that when false positives occur the system will suggest to relax the settings of the wildcard file type",
                                                    "enum": [
                                                        "always",
                                                        "compact",
                                                        "never",
                                                        "selective"
                                                    ],
                                                    "type": "string"
                                                },
                                                "maximumFileTypes": {
                                                    "description": "Specifies approximately the largest number of file types that Policy Builder will learn",
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-header": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "maximumHosts": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "validHostNames": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-parameter": {
                                    "oneOf": [
                                        {
                                            "description": "Defines Policy Builder behavior for parameters",
                                            "properties": {
                                                "classifyParameters": {
                                                    "description": "When enabled, if the Policy Builder detects legitimate XML or JSON data to parameters configured in the security policy, the Policy Builder adds XML or JSON profiles to the security policy and configures their attributes according to the data it detects",
                                                    "type": "boolean"
                                                },
                                                "collapseParameterOccurrences": {
                                                    "description": "Defines how many common explicit parameters the Policy Builder must detect (the number of occurrences) before collapsing them to one wildcard parameter.\nThe minimum number of occurrences allowed is 2.",
                                                    "minimum": 2,
                                                    "type": "integer"
                                                },
                                                "collapseParametersIntoOneEntity": {
                                                    "description": "When enabled, the system collapses many common parameters into one wildcard parameter.",
                                                    "type": "boolean"
                                                },
                                                "dynamicParameters": {
                                                    "description": "Defines the conditions under which the Policy Builder adds dynamic parameters to the security policy\nTo enabled this functionality there are several prerequisites:\n  - learnExplicitParameters is **always** or **selective**\n  - learnExplicitUrls in policy-builder-url and/or learnExplicitFiletypes in policy-builder-filetype is **always** or **selective**\n  - learnFromResponses is enabled in policy-builder\n  - at least one of the allHiddenFields/formParameters/linkParameters is enabled",
                                                    "properties": {
                                                        "allHiddenFields": {
                                                            "description": "When enabled, the Policy Builder adds to the security policy all HIDDEN form input parameters, seen in responses, as dynamic content value parameters",
                                                            "type": "boolean"
                                                        },
                                                        "formParameters": {
                                                            "description": "When enabled, the Policy Builder adds parameters, found in forms, to the security policy as dynamic content value if a number of unique value sets are seen in responses for that parameter.\nUse uniqueValueSets to specify how many different value sets must be seen for that parameter in order for the Policy Builder to consider it dynamic content value.\nA value set is an aggregation of server-supplied value(s) of the parameter as seen in the web form, for example, all the values of a radio button or select boxes taken together are a value set.",
                                                            "type": "boolean"
                                                        },
                                                        "linkParameters": {
                                                            "description": "When enabled, the Policy Builder adds parameters, found in links, to the security policy as dynamic content value if a number of unique values are seen in responses for that parameter.\nUse the uniqueValueSets to specify how many different values must be seen for that parameter in order for the Policy Builder to consider it dynamic content value.",
                                                            "type": "boolean"
                                                        },
                                                        "uniqueValueSets": {
                                                            "description": "Specifies how many different values must be seen for that parameter in order for the Policy Builder to consider it dynamic content value",
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "learnExplicitParameters": {
                                                    "description": "Specifies under which circumstances the Policy Builder adds, or suggests you add, explicit parameters to the security policy:\n\n- **compact**: Specifies that the system will create a list of the most commonly used parameters, while enforcing all other parameters with a wildcard rule. This option serves as a good balance between **selective** and **always**\n- **selective**: Specifies that when false positives occur (applicable only for the * wildcard), the system will add/suggest to add an explicit parameter with relaxed settings that avoid the false positive. This option serves as a good balance between security, policy size, and ease of maintenance\n- **always**: Specifies you would like to create a comprehensive whitelist policy that includes ALL of the website parameters. This option will form a large set of security policy entities, which will produce a granular object-level configuration and high security level, it may take more time to maintain such a policy\n- **never**: Specifies that when false positives occur the system will suggest to relax the settings of the wildcard parameter",
                                                    "enum": [
                                                        "always",
                                                        "compact",
                                                        "never",
                                                        "selective"
                                                    ],
                                                    "type": "string"
                                                },
                                                "maximumParameters": {
                                                    "description": "Specifies approximately the largest number of parameters that Policy Builder will learn",
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "parameterLearningLevel": {
                                                    "description": "Defines how the Policy Builder determines on which level to add, or suggest you add, parameters to the security policy\n\n- **global**: The system creates learning suggestions based on the properties of entities that already exist in the security policy.\n              When manually learning a suggestion for a parameter violation, the resolve action suggested by the system is based on the parameter name and level of the parameter in the security policy that caused this violation.\n              When automatically building the security policy, the Policy Builder adds parameters on the Global level.\n- **url**: The system creates learning suggestions based on real traffic, and is not limited to the current properties of entities that exist in the security policy.\n           When manually learning a suggestion for a parameter violation, the resolve action suggested by the system is based on the actual parameter name and the URL or flow on which the violation was detected.\n           When automatically building the security policy, the Policy Builder adds parameters on the URL level.\n           In addition, if the actual URL does not exist in the security policy, the system adds the URL and file type (if it also does not exist) on which the violation was detected.",
                                                    "enum": [
                                                        "global",
                                                        "url"
                                                    ],
                                                    "type": "string"
                                                },
                                                "parametersIntegerValue": {
                                                    "description": "When enabled, the Policy Builder learns integer parameters (parameters with a Data Type of Integer).",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-redirection-protection": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "learnExplicitRedirectionDomains": {
                                                    "enum": [
                                                        "always",
                                                        "never"
                                                    ],
                                                    "type": "string"
                                                },
                                                "maximumRedirectionDomains": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-server-technologies": {
                                    "oneOf": [
                                        {
                                            "description": "Defines Policy Builder behavior for Server Technologies",
                                            "properties": {
                                                "enableServerTechnologiesDetection": {
                                                    "description": "When enabled, the Policy Builder suggests to add Server Technologies that have not yet been added to the policy.\nThe system learns server technologies from responses regardless of the learnFromResponses flag setting in the policy-builder endpoint.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-sessions-and-logins": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "learnLoginPage": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "policy-builder-url": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "classifyUrls": {
                                                    "type": "boolean"
                                                },
                                                "classifyWebsocketUrls": {
                                                    "type": "boolean"
                                                },
                                                "collapseUrlDepth": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "collapseUrlOccurrences": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "collapseUrlsIntoOneEntity": {
                                                    "type": "boolean"
                                                },
                                                "learnExplicitUrls": {
                                                    "enum": [
                                                        "always",
                                                        "compact",
                                                        "never",
                                                        "selective"
                                                    ],
                                                    "type": "string"
                                                },
                                                "learnExplicitWebsocketUrls": {
                                                    "enum": [
                                                        "always",
                                                        "never",
                                                        "selective"
                                                    ],
                                                    "type": "string"
                                                },
                                                "learnMethodsOnUrls": {
                                                    "type": "boolean"
                                                },
                                                "maximumUrls": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "maximumWebsocketUrls": {
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "wildcardUrlFiletypes": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "protocolIndependent": {
                                    "description": "When creating a security policy, you can determine whether a security policy differentiates between HTTP and HTTPS URLs.\nIf enabled, the security policy differentiates between HTTP and HTTPS URLs.\nIf disabled, the security policy configures URLs without specifying a specific protocol. This is useful for applications that behave the same for HTTP and HTTPS, and it keeps the security policy from including the same URL twice.",
                                    "type": "boolean"
                                },
                                "redirection-protection": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "redirectionDomains": {
                                                    "items": {
                                                        "properties": {
                                                            "domainName": {
                                                                "type": "string"
                                                            },
                                                            "includeSubdomains": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "enum": [
                                                                    "explicit",
                                                                    "wildcard"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "wildcardOrder": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "domainName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "redirectionProtectionEnabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "redirection-protection-domains": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "domainName": {
                                                        "type": "string"
                                                    },
                                                    "includeSubdomains": {
                                                        "type": "boolean"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "wildcardOrder": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "domainName"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "request-loggers": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "destination": {
                                                        "type": "string"
                                                    },
                                                    "escapingCharacters": {
                                                        "items": {
                                                            "properties": {
                                                                "from": {
                                                                    "type": "string"
                                                                },
                                                                "to": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "from"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "filter": {
                                                        "items": {
                                                            "properties": {
                                                                "field": {
                                                                    "enum": [
                                                                        "request_status"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "field"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "formatString": {
                                                        "type": "string"
                                                    },
                                                    "formatType": {
                                                        "enum": [
                                                            "arcsight",
                                                            "bigiq",
                                                            "default",
                                                            "grpc",
                                                            "splunk"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "maxEventsPerSecond": {
                                                        "type": "integer"
                                                    },
                                                    "maxMessageSize": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "protocol": {
                                                        "enum": [
                                                            "otlp",
                                                            "tcp",
                                                            "udp"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "timezone": {
                                                        "enum": [
                                                            "local",
                                                            "utc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "properties": {
                                                            "caFile": {
                                                                "type": "string"
                                                            },
                                                            "certFile": {
                                                                "type": "string"
                                                            },
                                                            "keyFile": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "response-pages": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "The Security Policy has a default blocking response page that it returns to the client when the client request, or the web server response, is blocked by the security policy. The system also has a login response page for login violations. You can change the way the system responds to blocked logins or blocked requests. All default response pages contain a variable, <%TS.request.ID()%>, that the system replaces with a support ID number when it issues the page.",
                                                "properties": {
                                                    "ajaxActionType": {
                                                        "description": "Which content, or URL, the system sends to the client as a response to an AJAX request that does not comply with the security policy.\n- **alert-popup**: The system opens a message as a popup screen. Type the message the system displays in the popup screen, or leave the default text.\n- **custom**: A response text that will replace the frame or page which generated the AJAX request. The system provides additional options where you can type the response body you prefer.\n- **redirect**: The system redirects the user to a specific web page instead of viewing a response page. Type the web page's full URL path, for example, http://www.redirectpage.com. ",
                                                        "enum": [
                                                            "alert-popup",
                                                            "custom",
                                                            "redirect"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ajaxCustomContent": {
                                                        "description": "Custom message typed by user as a response for blocked AJAX request.",
                                                        "type": "string"
                                                    },
                                                    "ajaxEnabled": {
                                                        "description": "When enabled, the system injects JavaScript code into responses. You must enable this toggle in order to configure an Application Security Manager AJAX response page which is returned when the system detects an AJAX request that does not comply with the security policy.",
                                                        "type": "boolean"
                                                    },
                                                    "ajaxPopupMessage": {
                                                        "description": "Default message provided by the system as a response for blocked AJAX request. Can be manipulated by user, but <%TS.request.ID()%> must be included in this message.",
                                                        "type": "string"
                                                    },
                                                    "ajaxRedirectUrl": {
                                                        "description": "The system redirects the user to a specific web page instead of viewing a response page. Type the web page's full URL path, for example, http://www.redirectpage.com. To redirect the blocking page to a URL with a support ID in the query string, type the URL and the support ID in the following format: http://www.example.com/blocking_page.php?support_id=<%TS.request.ID()%>. The system replaces <%TS.request.ID%> with the relevant support ID so that the blocked request is redirected to the URL with the relevant support ID.",
                                                        "type": "string"
                                                    },
                                                    "grpcStatusCode": {
                                                        "oneOf": [
                                                            {
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "enum": [
                                                                    "ABORTED",
                                                                    "ALREADY_EXISTS",
                                                                    "CANCELLED",
                                                                    "DATA_LOSS",
                                                                    "DEADLINE_EXCEEDED",
                                                                    "FAILED_PRECONDITION",
                                                                    "INTERNAL",
                                                                    "INVALID_ARGUMENT",
                                                                    "NOT_FOUND",
                                                                    "OK",
                                                                    "OUT_OF_RANGE",
                                                                    "PERMISSION_DENIED",
                                                                    "RESOURCE_EXHAUSTED",
                                                                    "UNAUTHENTICATED",
                                                                    "UNAVAILABLE",
                                                                    "UNIMPLEMENTED",
                                                                    "UNKNOWN"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            {
                                                                "pattern": "\\d+$",
                                                                "type": "string"
                                                            }
                                                        ]
                                                    },
                                                    "grpcStatusMessage": {
                                                        "type": "string"
                                                    },
                                                    "responseActionType": {
                                                        "description": "Which action the system takes, and which content the system sends to the client, as a response when the security policy blocks the client request.\n- **custom**: The system returns a response page with HTML code that the user defines.\n- **default**: The system returns the system-supplied response page in HTML. No further configuration is needed.\n- **erase-cookies**:  The system deletes all client side domain cookies. This is done in order to block web application users once, and not from the entire web application. The system displays this text in the response page. You cannot edit this text.\n- **redirect**: The system redirects the user to a specific web page instead of viewing a response page. The system provides an additional setting where you can indicate the redirect web page.\n- **soap-fault**:  Displays the system-supplied response written in SOAP fault message structure. Use this type when a SOAP request is blocked due to an XML related violation. You cannot edit this text.",
                                                        "enum": [
                                                            "custom",
                                                            "default",
                                                            "erase-cookies",
                                                            "redirect",
                                                            "soap-fault"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "responseContent": {
                                                        "description": "The content the system sends to the client in response to an illegal blocked request.",
                                                        "type": "string"
                                                    },
                                                    "responseHeader": {
                                                        "description": "The response headers that the system sends to the client as a response to an illegal blocked request.",
                                                        "type": "string"
                                                    },
                                                    "responsePageType": {
                                                        "description": "The different types of blocking response pages which are available from the system:\n- **ajax**: The system sends the AJAX Blocking Response Page when the security policy blocks an AJAX request that does not comply with the security policy.\n- **ajax-login**: The system sends the AJAX Login Page Response after the user sends an AJAX request that attempts to directly access a URL that is allowed to be accessed only after visiting a login page.\n- **captcha**: The system sends the CAPTCHA response page when the system suspects that a session is being run by a bot rather than a human, especially in the case of a brute force attack.\n- **captcha-fail**: The system sends the CAPTCHA fail response page to a failed CAPTCHA challenge.\n- **default**: The system sends the default response when the security policy blocks a client request.\n- **failed-login-honeypot**: The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation.\n- **failed-login-honeypot-ajax**: The Honeypot page is used for attacker deception sending AJAX request. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation.\n- **hijack**: The system sends the cookie hijacking response page when the system detects that an attacker tried to hijack the session.\n- **leaked-credentials**: The system sends the leaked credentials response when the system detects the use of stolen credentials.\n- **leaked-credentials-ajax**: The system sends the leaked credentials response following an AJAX request which includes usage of stolen credentials.\n- **mobile**: The system sends the mobile application response page when the system detects that a session is being run by a bot rather than a human.\n- **persistent-flow**: The system sends the login page response after the user violates one of the preconditions when requesting the target URL of a configured login page.\n- **xml**: The system sends the XML response page when the security policy blocks a client request that contains XML content that does not comply with the settings of an XML profile configured in the security policy.",
                                                        "enum": [
                                                            "ajax",
                                                            "ajax-login",
                                                            "captcha",
                                                            "captcha-fail",
                                                            "default",
                                                            "failed-login-honeypot",
                                                            "failed-login-honeypot-ajax",
                                                            "graphql",
                                                            "grpc",
                                                            "hijack",
                                                            "leaked-credentials",
                                                            "leaked-credentials-ajax",
                                                            "mobile",
                                                            "persistent-flow",
                                                            "xml"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "responseRedirectUrl": {
                                                        "description": "The particular URL to which the system redirects the user. To redirect the blocking page to a URL with a support ID in the query string, type the URL and the support ID in the following format: http://www.example.com/blocking_page.php?support_id=<%TS.request.ID()%>. The system replaces <%TS.request.ID%> with the relevant support ID so that the blocked request is redirected to the URL with the relevant support ID.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "responsePageType"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "sensitive-parameters": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "This section defines sensitive parameters.\nThe contents of these parameters are not visible in logs nor in the user interfaces.\nInstead of actual values a string of asterisks is shown for these parameters.\nUse these parameters to protect sensitive user input, such as a password or a credit card number, in a validated request.\nA parameter name of \"password\" is always defined as sensitive by default.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Name of a parameter whose values the system should consider sensitive.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "server-technologies": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "The server technology is a server-side application, framework, web server or operating system type that is configured in the policy in order to adapt the policy to the checks needed for the respective technology.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "serverTechnologyName": {
                                                        "description": "Specifies the name of the selected policy. For example, PHP will add attack signatures that cover known PHP vulnerabilities.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "session-tracking": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "blockAll": {
                                                    "properties": {
                                                        "checkDeviceIdThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkIpThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkPeriod": {
                                                            "type": "boolean"
                                                        },
                                                        "checkSessionThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkUsernameThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "deviceIdThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "ipThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "period": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "sessionThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "urlBlockingMode": {
                                                            "enum": [
                                                                "block-all-urls",
                                                                "block-authenticated-urls"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "usernameThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "delayBlocking": {
                                                    "properties": {
                                                        "checkDeviceIdThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkIpThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkSessionThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkUsernameThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "deviceIdThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "ipThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "period": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "sessionThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "usernameThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "violations": {
                                                            "items": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "logAllRequests": {
                                                    "properties": {
                                                        "checkDeviceIdThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkIpThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkSessionThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "checkUsernameThreshold": {
                                                            "type": "boolean"
                                                        },
                                                        "deviceIdThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "ipThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "period": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "sessionThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "usernameThreshold": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "sessionTrackingConfiguration": {
                                                    "properties": {
                                                        "detectUsernameFromLoginPages": {
                                                            "items": {
                                                                "properties": {
                                                                    "loginPage": null
                                                                },
                                                                "required": [
                                                                    "loginPage"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "enableSessionAwareness": {
                                                            "type": "boolean"
                                                        },
                                                        "enableTrackingSessionHijackingByDeviceId": {
                                                            "type": "boolean"
                                                        },
                                                        "userNameSource": {
                                                            "enum": [
                                                                "all-login-pages",
                                                                "apm",
                                                                "login-pages",
                                                                "none"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "violationDetectionActions": {
                                                    "properties": {
                                                        "trackViolationsAndPerformActions": {
                                                            "type": "boolean"
                                                        },
                                                        "violationDetectionPeriod": {
                                                            "maximum": 999999999,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "session-tracking-statuses": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "action": {
                                                        "enum": [
                                                            "block-all",
                                                            "delay-blocking",
                                                            "log-all"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "createdDatetime": {
                                                        "type": "string"
                                                    },
                                                    "expirationDatetime": {
                                                        "enum": [
                                                            "N/A"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "scope": {
                                                        "enum": [
                                                            "device",
                                                            "ip",
                                                            "session",
                                                            "user"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value",
                                                    "scope",
                                                    "action"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "signature-requirements": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "maxRevisionDatetime": {
                                                        "type": "string"
                                                    },
                                                    "minRevisionDatetime": {
                                                        "type": "string"
                                                    },
                                                    "tag": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "tag"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "signature-sets": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "Defines behavior when signatures found within a signature-set are detected in a request. Settings are culmulative, so if a signature is found in any set with block enabled, that signature will have block enabled.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "alarm": {
                                                        "description": "If enabled - when a signature from this signature set is detected in a request - the request is logged.",
                                                        "type": "boolean"
                                                    },
                                                    "block": {
                                                        "description": "If enabled - when a signature from this signature set is detected in a request (and the signature is not in staging and the policy is in blocking mode) - the request is blocked.",
                                                        "type": "boolean"
                                                    },
                                                    "learn": {
                                                        "description": "If enabled - when a signature from this signature set is detected in a request -the policy builder creates a learning suggestion to disable it.",
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "Signature set name.",
                                                        "type": "string"
                                                    },
                                                    "signatureSet": null
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "signature-settings": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "attackSignatureFalsePositiveMode": {
                                                    "enum": [
                                                        "detect",
                                                        "detect-and-allow",
                                                        "disabled"
                                                    ],
                                                    "type": "string"
                                                },
                                                "minimumAccuracyForAutoAddedSignatures": {
                                                    "enum": [
                                                        "high",
                                                        "low",
                                                        "medium"
                                                    ],
                                                    "type": "string"
                                                },
                                                "placeSignaturesInStaging": {
                                                    "type": "boolean"
                                                },
                                                "signatureStaging": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "signatures": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "This section defines the properties of a signature on the policy.",
                                                "properties": {
                                                    "alarm": {
                                                        "type": "boolean"
                                                    },
                                                    "block": {
                                                        "type": "boolean"
                                                    },
                                                    "enabled": {
                                                        "description": "Specifies, if true, that the signature is enabled on the security policy. When false, the signature is disable on the security policy.",
                                                        "type": "boolean"
                                                    },
                                                    "inPolicy": {
                                                        "enum": [
                                                            "0",
                                                            "1"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "isPriorRuleEnforced": {
                                                        "type": "boolean"
                                                    },
                                                    "learn": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "The signature name which, along with the signature tag, identifies the signature.",
                                                        "type": "string"
                                                    },
                                                    "performStaging": {
                                                        "description": "Specifies, if true, that the signature is in staging.\nThe system does not enforce signatures in staging. Instead, the system records the request information and keeps it for a period of time\n(the Enforcement Readiness Period whose default time period is 7 days).\nSpecifies, when false, that the staging feature is not in use, and that the system enforces the signatures' Learn/Alarm/Block settings immediately.\n(Blocking is performed only if the security policy's enforcement mode is Blocking.)",
                                                        "type": "boolean"
                                                    },
                                                    "signatureId": {
                                                        "description": "The signature ID which identifies the signature.",
                                                        "type": "string"
                                                    },
                                                    "tag": {
                                                        "description": "The signature tag which, along with the signature name, identifies the signature.       ",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "softwareVersion": {
                                    "type": "string"
                                },
                                "ssrf-hosts": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "action": {
                                                        "enum": [
                                                            "allow",
                                                            "disallow",
                                                            "resolve"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "wildcardOrder": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "host"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "template": {
                                    "description": "Specifies the template to populate the attributes of a new policy. The template is only used when creating the policy - a security policy is always created based on a user-defined or system-supplied template.\nUnlike parent policies, the templates do not affect the policy after it is created. If you modify a template, policies created from it in the past are not affected.",
                                    "properties": {
                                        "name": {
                                            "description": "Specifies the name of the template used for the policy creation.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "threat-campaign-settings": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "threatCampaignEnforcementReadinessPeriod": {
                                                    "maximum": 999,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "threatCampaignStaging": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        null
                                    ]
                                },
                                "threat-campaigns": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "This section defines the enforcement state for the threat campaigns in the security policy.",
                                                "properties": {
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "isEnabled": {
                                                        "description": "If enabled - threat campaign is enforced in the security policy.",
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "Name of the threat campaign.",
                                                        "type": "string"
                                                    },
                                                    "performStaging": {
                                                        "description": "If enabled - there will be only reporting (no blocking) for requests with a detected treat campaign.\nFor this feature to work, threatCampaignStaging should be enabled in threat-campaign-settings.\nAfter staging period (threatCampaignEnforcementReadinessPeriod in threat-campaign-settings), the system will suggest to enforce (disable staging) for the threat campaign.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "type": {
                                    "description": "The type of policy you want to create. The default policy type is Security.\n- **Parent:** A parent policy can be used as a basis for similar child policies. Parent policy settings can be inherited to its child policies. A parent policy cannot be applied to Virtual Servers. No traffic can flow through them. They are just models.\n- **Security:** A security policy can be created from a parent policy or as a stand-alone policy. Changes to a security policy do not affect other security policies. A security policy can be applied to a virtual server.",
                                    "enum": [
                                        "parent",
                                        "security"
                                    ],
                                    "type": "string"
                                },
                                "urls": {
                                    "oneOf": [
                                        {
                                            "items": null,
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "webhooks": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "body": {
                                                        "type": "string"
                                                    },
                                                    "contentType": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "triggerEvent": {
                                                        "enum": [
                                                            "apply-policy",
                                                            "apply-policy-failed",
                                                            "http-request-illegal",
                                                            "http-request-likely-malicious",
                                                            "http-request-needing-examination",
                                                            "incident-end",
                                                            "incident-start"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "websocket-urls": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "allowBinaryMessage": {
                                                        "type": "boolean"
                                                    },
                                                    "allowJsonMessage": {
                                                        "type": "boolean"
                                                    },
                                                    "allowTextMessage": {
                                                        "type": "boolean"
                                                    },
                                                    "binaryMessageMaxSize": {
                                                        "type": "integer"
                                                    },
                                                    "checkBinaryMessageMaxSize": {
                                                        "type": "boolean"
                                                    },
                                                    "checkMessageFrameMaxCount": {
                                                        "type": "boolean"
                                                    },
                                                    "checkMessageFrameMaxSize": {
                                                        "type": "boolean"
                                                    },
                                                    "checkPayload": {
                                                        "type": "boolean"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "html5CrossOriginRequestsEnforcement": {
                                                        "properties": {
                                                            "crossDomainAllowedOrigin": {
                                                                "items": {
                                                                    "properties": {
                                                                        "includeSubDomains": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "originName": {
                                                                            "type": "string"
                                                                        },
                                                                        "originPort": {
                                                                            "oneOf": [
                                                                                {
                                                                                    "maximum": 65535,
                                                                                    "minimum": 0,
                                                                                    "type": "integer"
                                                                                },
                                                                                {
                                                                                    "enum": [
                                                                                        "all"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                {
                                                                                    "pattern": "\\d+$",
                                                                                    "type": "string"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "originProtocol": {
                                                                            "enum": [
                                                                                "http",
                                                                                "http/https",
                                                                                "https"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "originProtocol",
                                                                        "originName",
                                                                        "originPort"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "enforcementMode": {
                                                                "enum": [
                                                                    "disabled",
                                                                    "enforce",
                                                                    "remove-all-headers"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "jsonProfile": null,
                                                    "messageFrameMaxCount": {
                                                        "type": "integer"
                                                    },
                                                    "messageFrameMaxSize": {
                                                        "type": "integer"
                                                    },
                                                    "metacharOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "isAllowed": {
                                                                    "type": "boolean"
                                                                },
                                                                "metachar": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "metachar"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "metacharsOnWebsocketUrlCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "performStaging": {
                                                        "type": "boolean"
                                                    },
                                                    "plainTextProfile": null,
                                                    "protocol": {
                                                        "enum": [
                                                            "ws",
                                                            "wss"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "explicit",
                                                            "wildcard"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "unsupportedExtensions": {
                                                        "enum": [
                                                            "block",
                                                            "ignore",
                                                            "remove"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "wildcardIncludesSlash": {
                                                        "type": "boolean"
                                                    },
                                                    "wildcardOrder": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "whitelist-ips": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "description": "An IP address exception is an IP address that you want the system to treat in a specific way for a security policy.\nFor example, you can specify IP addresses from which the system should always trust traffic, IP addresses for which you do not want the system to generate learning suggestions for the traffic, and IP addresses for which you want to exclude information from the logs.\nYou can use the IP address exception feature to create exceptions for IP addresses of internal tools that your company uses, such as penetration tools, manual or automatic scanners, or web scraping tools.\nYou can add an IP address exception and instruct the system how to handle traffic coming from that address.",
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "blockRequests": {
                                                        "description": "Specifies how the system responds to blocking requests sent from this IP address.\n- **Policy Default:** Specifies that the Policy Blocking Settings will be used for requests from this IP address.\n- **Never Block:** Specifies that the system does not block requests sent from this IP address, even if your security policy is configured to block all traffic.\n- **Always Block:** Specifies that the system blocks requests sent from this IP address on condition that IP is denylisted is set to Block under Policy Building Settings.",
                                                        "enum": [
                                                            "always",
                                                            "never",
                                                            "policy-default"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Specifies a brief description of the IP address.",
                                                        "type": "string"
                                                    },
                                                    "ignoreAnomalies": {
                                                        "description": "Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.\nSpecifies when disabled that the system does not consider traffic from this IP address as being any safer than traffic from any other IP address. The system performs brute force prevention to traffic from this IP address according to the configuration of the security policy.",
                                                        "type": "boolean"
                                                    },
                                                    "ignoreIpReputation": {
                                                        "description": "Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).\nSpecifies when disabled that the system does not consider traffic from this IP address as being any safer than traffic from any other IP address. Therefore, if the IP Intelligence feature is enabled, the system checks whether this IP address matches any IP addresses in the IP Intelligence database.",
                                                        "type": "boolean"
                                                    },
                                                    "ipAddress": {
                                                        "description": "Specifies the IP address that you want the system to trust.",
                                                        "type": "string"
                                                    },
                                                    "ipMask": {
                                                        "description": "Specifies the netmask of the exceptional IP address. This is an optional field.",
                                                        "type": "string"
                                                    },
                                                    "neverLearnRequests": {
                                                        "description": "Specifies when enabled that the system should not generate learning suggestions from traffic sent from this IP address.\nSpecifies when disabled that the system should generate learning suggestions from traffic sent from this IP address for violations with the Learn flag enabled on the Policy Building Settings.",
                                                        "type": "boolean"
                                                    },
                                                    "neverLogRequests": {
                                                        "description": "Specifies when enabled that the system does not log requests or responses sent from this IP address, even if the traffic is illegal, and even if your security policy is configured to log all traffic.",
                                                        "type": "boolean"
                                                    },
                                                    "trustedByPolicyBuilder": {
                                                        "description": "Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.\nThe Policy Builder automatically adds to the security policy the data logged from traffic sent from this IP address.\nSpecifies when disabled that the Policy Builder does not consider traffic from this IP address as being any different than traffic from any other IP address.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "ipMask",
                                                    "ipAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "xml-profiles": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "attachmentsInSoapMessages": {
                                                        "type": "boolean"
                                                    },
                                                    "attackSignaturesCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "defenseAttributes": {
                                                        "properties": {
                                                            "allowCDATA": {
                                                                "type": "boolean"
                                                            },
                                                            "allowDTDs": {
                                                                "type": "boolean"
                                                            },
                                                            "allowExternalReferences": {
                                                                "type": "boolean"
                                                            },
                                                            "allowProcessingInstructions": {
                                                                "type": "boolean"
                                                            },
                                                            "maximumAttributeValueLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumAttributesPerElement": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumChildrenPerElement": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumDocumentDepth": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumDocumentSize": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumElements": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumNSDeclarations": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumNameLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "maximumNamespaceLength": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 2147483647,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "any"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "tolerateCloseTagShorthand": {
                                                                "type": "boolean"
                                                            },
                                                            "tolerateLeadingWhiteSpace": {
                                                                "type": "boolean"
                                                            },
                                                            "tolerateNumericNames": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "enableWss": {
                                                        "type": "boolean"
                                                    },
                                                    "followSchemaLinks": {
                                                        "type": "boolean"
                                                    },
                                                    "inspectSoapAttachments": {
                                                        "type": "boolean"
                                                    },
                                                    "metacharAttributeCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "metacharElementCheck": {
                                                        "type": "boolean"
                                                    },
                                                    "metacharOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "isAllowed": {
                                                                    "type": "boolean"
                                                                },
                                                                "metachar": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "metachar"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "sensitiveData": {
                                                        "items": {
                                                            "properties": {
                                                                "namespace": {
                                                                    "type": "string"
                                                                },
                                                                "paramName": {
                                                                    "type": "string"
                                                                },
                                                                "paramType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "paramType",
                                                                "namespace",
                                                                "paramName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "signatureOverrides": {
                                                        "items": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "signatureId": {
                                                                    "type": "integer"
                                                                },
                                                                "tag": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "soapMethods": {
                                                        "items": {
                                                            "properties": {
                                                                "action": {
                                                                    "type": "string"
                                                                },
                                                                "isAllowed": {
                                                                    "type": "boolean"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "namespace": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "namespace",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "useXmlResponsePage": {
                                                        "type": "boolean"
                                                    },
                                                    "validationFiles": {
                                                        "items": {
                                                            "properties": {
                                                                "importUrl": {
                                                                    "type": "string"
                                                                },
                                                                "isPrimary": {
                                                                    "type": "boolean"
                                                                },
                                                                "xmlValidationFile": null
                                                            },
                                                            "required": [
                                                                "xmlValidationFile"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "validationSoapActionHeader": {
                                                        "type": "boolean"
                                                    },
                                                    "wssConfiguration": {
                                                        "properties": {
                                                            "addTimestamp": {
                                                                "type": "boolean"
                                                            },
                                                            "applyActionToDefinedRequestElements": {
                                                                "type": "boolean"
                                                            },
                                                            "applyActionToDefinedResponseElements": {
                                                                "type": "boolean"
                                                            },
                                                            "applyActionToEntireResponseBodyValue": {
                                                                "type": "boolean"
                                                            },
                                                            "clientCertificates": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "decryptAll": {
                                                                "type": "boolean"
                                                            },
                                                            "elements": {
                                                                "items": {
                                                                    "properties": {
                                                                        "applyTo": {
                                                                            "enum": [
                                                                                "request",
                                                                                "response"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "encryptedPart": {
                                                                            "enum": [
                                                                                "content",
                                                                                "element"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "xPathName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "xPathName",
                                                                        "applyTo"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "enableRequestRole": {
                                                                "type": "boolean"
                                                            },
                                                            "enableResponseRole": {
                                                                "type": "boolean"
                                                            },
                                                            "encryptionAlgorithm": {
                                                                "enum": [
                                                                    "aes128",
                                                                    "aes256",
                                                                    "tripledes"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "enforceTimestampInRequest": {
                                                                "type": "boolean"
                                                            },
                                                            "keyTransportAlgorithm": {
                                                                "enum": [
                                                                    "rsa-1_5",
                                                                    "rsa-oaep"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "maxTimestampInterval": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "namespaceMapping": {
                                                                "items": {
                                                                    "properties": {
                                                                        "namespace": {
                                                                            "type": "string"
                                                                        },
                                                                        "prefix": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "prefix"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "responseAction": {
                                                                "enum": [
                                                                    "encrypt",
                                                                    "encrypt-then-sign",
                                                                    "sign",
                                                                    "sign-then-encrypt"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "roles": {
                                                                "items": {
                                                                    "properties": {
                                                                        "applyTo": {
                                                                            "enum": [
                                                                                "request",
                                                                                "response"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "role": {
                                                                            "enum": [
                                                                                "next",
                                                                                "none",
                                                                                "ultimateReceiver"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "applyTo",
                                                                        "role"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "signatureAlgorithm": {
                                                                "enum": [
                                                                    "hmac-sha1",
                                                                    "rsa-sha1"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "soapBodyInRequestMustBeSignedAndVerified": {
                                                                "type": "boolean"
                                                            },
                                                            "verifyAll": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                },
                                "xml-validation-files": {
                                    "oneOf": [
                                        {
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "required": [
                                                            "id"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "id",
                                                            "$ref"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "id",
                                                            "link"
                                                        ]
                                                    }
                                                ],
                                                "properties": {
                                                    "$action": {
                                                        "enum": [
                                                            "delete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "$ref": {
                                                        "format": "uri",
                                                        "type": "string"
                                                    },
                                                    "contents": {
                                                        "type": "string"
                                                    },
                                                    "fileName": {
                                                        "type": "string"
                                                    },
                                                    "isBase64": {
                                                        "type": "boolean"
                                                    },
                                                    "link": {
                                                        "format": "uri",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        null
                                    ]
                                }
                            },
                            "required": [
                                "name",
                                "template"
                            ],
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "declaration"
            ],
            "type": "object"
        }
    ],
    "description": "Defines WAF policy data."
}