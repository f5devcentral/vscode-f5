{
    "components": {
        "responses": {
            "Forbidden": {
                "content": {
                    "application/json": {
                        "example": {
                            "message": "user not authorized",
                            "status": 403
                        },
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "Forbidden"
            },
            "InternalError": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "Internal Error"
            },
            "Unauthorized": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "Unauthorized"
            }
        },
        "schemas": {
            "AS3Status": {
                "enum": [
                    "green",
                    "yellow",
                    "red"
                ],
                "type": "string"
            },
            "AS3WorkflowVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "AS3error": {
                "properties": {
                    "code": {
                        "description": "Code representing the error",
                        "type": "integer"
                    },
                    "errors": {
                        "description": "Details about failures",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "Additional information about the error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AcceptRequestTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "support_id": {
                                "description": "WAF event support-id.",
                                "example": "0123456789",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines WAF accept-request task."
            },
            "AddIHealthConfigRequest": {
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "password"
                ],
                "type": "object"
            },
            "Alert": {
                "description": "Persists Alerts",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "string"
                    },
                    "help_link": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "level": {
                        "$ref": "#/components/schemas/AlertLevel"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notification_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/NotificationsView"
                        },
                        "type": "array"
                    },
                    "source": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "INACTIVE"
                        ],
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "type_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AlertIDList": {
                "description": "list of alert ids",
                "properties": {
                    "alerts": {
                        "description": "alert ids",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "alerts"
                ],
                "type": "object"
            },
            "AlertJsonFilterList": {
                "description": "list of alert json filters",
                "properties": {
                    "filters": {
                        "description": "json filters",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AlertLevel": {
                "description": "alert severity",
                "enum": [
                    "INFO",
                    "WARNING",
                    "SEVERE"
                ],
                "type": "string"
            },
            "AlertResponse": {
                "properties": {
                    "data": {
                        "type": "string"
                    }
                },
                "required": [
                    "data"
                ],
                "type": "object"
            },
            "AlertRule": {
                "description": "Persists Alert-rule data",
                "properties": {
                    "alert": {
                        "type": "string"
                    },
                    "annotations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "expr": {
                        "type": "string"
                    },
                    "for": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AlertRuleGroup": {
                "description": "Persists Alert-rule group data",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/components/schemas/AlertRule"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AlertRuleGroups": {
                "description": "Persists Alert-rule groups data",
                "properties": {
                    "id": {
                        "items": {
                            "$ref": "#/components/schemas/AlertRuleGroup"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AlertType": {
                "description": "Persists Alert-type data",
                "properties": {
                    "help_link": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "level": {
                        "$ref": "#/components/schemas/AlertLevel"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notification_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/NotificationsView"
                        },
                        "type": "array"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AlertVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "Annotations": {
                "description": "annotations",
                "properties": {
                    "description": {
                        "description": "alert description",
                        "type": "string"
                    },
                    "summary": {
                        "description": "alert summary",
                        "type": "string"
                    }
                },
                "required": [
                    "summary",
                    "description"
                ],
                "type": "object"
            },
            "ApmPolicy": {
                "$ref": "policy/apm-policy-schema.yaml#/components/schemas/Policy"
            },
            "ApmVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "Application": {
                "description": "Response data for deployed applications",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "last_updated": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "description": "Parameters in the template (FAST only)",
                        "type": "object"
                    },
                    "security_policies": {
                        "items": {
                            "$ref": "#/components/schemas/SecurityPolicy"
                        },
                        "type": "array"
                    },
                    "source": {
                        "$ref": "#/components/schemas/ApplicationType"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tenant_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationAlertsSummary": {
                "properties": {
                    "alert_level": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "impacted_applications": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "alert_level",
                    "count",
                    "impacted_applications"
                ],
                "type": "object"
            },
            "ApplicationBase": {
                "properties": {
                    "as3_preview": {
                        "example": "http://localhost/v1/sessions/1/applications/application_1/preview",
                        "format": "url",
                        "type": "string"
                    },
                    "as3_unsupported": {
                        "example": [
                            "ltm node /Common/1.2.3.4",
                            "net vlan /partition/vlan123"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "deployable_objects": {
                        "$ref": "#/components/schemas/DeployableObjects"
                    },
                    "description": {
                        "example": "Test application",
                        "type": "string"
                    },
                    "last_modified": {
                        "example": "2021-01-28T15:24:05.029102Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "example": "application_1",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AS3Status"
                    },
                    "tenant": {
                        "example": "tenant_1",
                        "type": "string"
                    },
                    "url": {
                        "example": "http://localhost/v1/sessions/1/applications/application_1",
                        "format": "url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApplicationBase"
                    },
                    {
                        "properties": {
                            "virtual_servers": {
                                "items": {
                                    "$ref": "#/components/schemas/VirtualServer"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ApplicationHealthSummary": {
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "percent": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "count",
                    "percent"
                ],
                "type": "object"
            },
            "ApplicationLanguagesList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/ApplicationLanguagesList"
            },
            "ApplicationSummary": {
                "properties": {
                    "health": {
                        "description": "Health of the application.",
                        "enum": [
                            "Critical",
                            "Moderate",
                            "Good",
                            "Unknown"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique id for the application",
                        "type": "string"
                    },
                    "lastUpdated": {
                        "description": "It denotes when was the application's properties were lastly updated.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location of the mBip where application is deployed.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the application",
                        "type": "string"
                    },
                    "policyEnforcementMode": {
                        "description": "The enforcement mode of WAF Security Policy that is attached to this application.",
                        "enum": [
                            "Blocking",
                            "Transparent",
                            "Mixed",
                            "No Policy"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "description": "Deployment status of the application.",
                        "enum": [
                            "Deployed",
                            "Draft"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the application.",
                        "enum": [
                            "AS3",
                            "FAST"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "health",
                    "status",
                    "location",
                    "policyEnforcementMode",
                    "lastUpdated"
                ],
                "type": "object"
            },
            "ApplicationSummaryResponse": {
                "properties": {
                    "applications-summary": {
                        "items": {
                            "$ref": "#/components/schemas/ApplicationSummary"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "applications-summary"
                ],
                "type": "object"
            },
            "ApplicationTask": {
                "example": {
                    "_links": {
                        "self": {
                            "href": "/applications/tasks/5b137e02-7455-4daf-993e-4553d2cb7e12"
                        }
                    },
                    "completed": "2022-05-19T15:19:31.946411-07:00",
                    "created": "2022-05-19T15:19:31.910914-07:00",
                    "createdApplicationID": "cde6d551-9cf1-4853-a21d-dd28cd754746",
                    "createdApplicationPath": "/applications/tenant66/app66",
                    "failureReason": "",
                    "id": "5b137e02-7455-4daf-993e-4553d2cb7e12",
                    "parameters": {
                        "application_name": "app66",
                        "server_addresses": [
                            "10.2.3.6"
                        ],
                        "service_port": 80,
                        "tenant_name": "tenant66",
                        "virtual_address": "100.20.4.8",
                        "virtual_port": 80
                    },
                    "result": {},
                    "state": "caDone",
                    "status": "completed",
                    "target": {
                        "address": "10.145.76.155"
                    },
                    "templateName": "set_name1/http_name1"
                },
                "type": "object"
            },
            "ApplicationType": {
                "enum": [
                    "Template",
                    "API"
                ],
                "type": "string"
            },
            "ApplicationsAlertsSummaryResponse": {
                "properties": {
                    "application_alerts_summary": {
                        "description": "Appication alerts summary",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationAlertsSummary"
                        },
                        "type": "array"
                    },
                    "total_alerts": {
                        "description": "Total number of alerts.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "total_applications": {
                        "description": "Total number of applications.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ApplicationsHealthResponse": {
                "properties": {
                    "applicationName": {
                        "description": "Name of the application",
                        "type": "string"
                    },
                    "bigIpId": {
                        "description": "Unique id for the BigIP",
                        "type": "string"
                    },
                    "description": {
                        "description": "Source Id of the application",
                        "type": "string"
                    },
                    "health": {
                        "description": "Health of the application",
                        "type": "string"
                    },
                    "lastUpdated": {
                        "description": "Last Updated date time",
                        "type": "string"
                    },
                    "objectName": {
                        "description": "Name of the Object",
                        "type": "string"
                    },
                    "objectType": {
                        "description": "Type of the Object",
                        "type": "string"
                    },
                    "parentObjectName": {
                        "description": "Name of the Parent of the Object",
                        "type": "string"
                    },
                    "parentObjectType": {
                        "description": "Name of the Parent Object",
                        "type": "string"
                    },
                    "sourceId": {
                        "description": "Source Id of the application",
                        "type": "string"
                    },
                    "tenantName": {
                        "description": "Name of the tenant",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationsHealthSummaryResponse": {
                "properties": {
                    "application_health_summary": {
                        "description": "Appication health summary",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationHealthSummary"
                        },
                        "type": "array"
                    },
                    "total_applications": {
                        "description": "Total number of applications.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AuditRecord": {
                "description": "A single Audit log record",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "details": {
                        "type": "object"
                    },
                    "duration_ms": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "feature": {
                        "type": "string"
                    },
                    "http_method": {
                        "type": "string"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "request": {
                        "type": "object"
                    },
                    "resource_id": {
                        "type": "string"
                    },
                    "result_code": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "source_addr": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "timestamp",
                    "source_addr",
                    "http_method",
                    "url",
                    "feature",
                    "endpoint"
                ],
                "type": "object"
            },
            "AuditRecords": {
                "description": "A collection of Audit log records",
                "items": {
                    "$ref": "#/components/schemas/AuditRecord"
                },
                "type": "array"
            },
            "AuthenticationRequest": {
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "username"
                ],
                "type": "object"
            },
            "AuthenticationResponse": {
                "properties": {
                    "expires": {
                        "description": "Expiration time for the authenticated request.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BadRequest": {
                "properties": {
                    "detail": {
                        "additionalProperties": true,
                        "example": {
                            "__all__": [
                                "Invalid request body"
                            ],
                            "field": [
                                "Invalid name"
                            ]
                        },
                        "items": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "status": {
                        "example": 400,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BasicPolicyData": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/BasicPolicyData"
            },
            "BatchBackupTaskSummary": {
                "allOf": [
                    {
                        "properties": {
                            "instance_id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "path": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "A BIG-IP Next instance ID and its associated backup task ID."
            },
            "BatchBackupTasksCreated": {
                "properties": {
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/BatchBackupTaskSummary"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BatchBackupTasksRequest": {
                "description": "Instance IDs of the BIG-IP Next instances to be backed up.",
                "properties": {
                    "instance_ids": {
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instance_ids"
                ],
                "type": "object"
            },
            "BigIpNextPatchDeclarationContent": {
                "description": "The patch definition makes use of the standard JSON Patch design.",
                "items": {
                    "description": "Patch declaration definition.",
                    "properties": {
                        "op": {
                            "description": "Specify patch operation.",
                            "maxLength": 64000,
                            "title": "Operation",
                            "type": "string"
                        },
                        "path": {
                            "description": "Path to execute the operation.",
                            "maxLength": 64000,
                            "title": "Path",
                            "type": "string"
                        },
                        "value": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/String"
                                },
                                {
                                    "$ref": "#/components/schemas/Int"
                                },
                                {
                                    "$ref": "#/components/schemas/Boolean"
                                },
                                {
                                    "$ref": "#/components/schemas/Number"
                                },
                                {
                                    "$ref": "#/components/schemas/Object"
                                }
                            ]
                        }
                    },
                    "title": "Declaration Definition",
                    "type": "object"
                },
                "title": "Patch Declaration content for BIGIP Next",
                "type": "array"
            },
            "Boolean": {
                "type": "boolean"
            },
            "CertData": {
                "description": "persists certificate information",
                "properties": {
                    "checksum": {
                        "description": "certificate checksum",
                        "type": "string"
                    },
                    "content": {
                        "description": "storage reference",
                        "type": "string"
                    },
                    "expiration_date_time": {
                        "description": "expiration date Time",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "certificate fingerprint",
                        "type": "string"
                    },
                    "is_bundle": {
                        "description": "is bundle",
                        "type": "boolean"
                    },
                    "public_key_curve_name": {
                        "description": "public key curve name",
                        "type": "string"
                    },
                    "public_key_size": {
                        "description": "certificate Key size",
                        "type": "number"
                    },
                    "public_key_type": {
                        "description": "public key type",
                        "type": "string"
                    },
                    "serial_number": {
                        "description": "serial number",
                        "type": "number"
                    },
                    "size": {
                        "description": "size of certificate content",
                        "type": "number"
                    },
                    "subject": {
                        "description": "subject details",
                        "type": "string"
                    },
                    "version": {
                        "description": "certificate version",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CertIDList": {
                "description": "list of ids to delete",
                "properties": {
                    "certificates": {
                        "description": "certificate ids",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ignore_device": {
                        "description": "delete even if it is deployed on a device (force delete)",
                        "type": "boolean"
                    }
                },
                "required": [
                    "certificates"
                ],
                "type": "object"
            },
            "CertificateRequest": {
                "properties": {
                    "administrator_email": {
                        "description": "administrator email",
                        "format": "email",
                        "type": "string"
                    },
                    "challenge_password": {
                        "description": "challenge password",
                        "type": "string"
                    },
                    "common_name": {
                        "description": "the common_name of the certificate cannot be empty",
                        "minLength": 1,
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "items": {
                            "maxLength": 2,
                            "minLength": 2,
                            "pattern": "^[A-Z]{2}$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "division": {
                        "description": "division",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "duration_in_days": {
                        "description": "duration in days",
                        "format": "int64",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "email": {
                        "description": "email",
                        "items": {
                            "format": "email",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "issuer": {
                        "description": "issuer details",
                        "enum": [
                            "Self",
                            "CA"
                        ],
                        "type": "string"
                    },
                    "key_curve_name": {
                        "description": "supported curve names for ECDSA",
                        "enum": [
                            "prime256v1",
                            "secp384r1",
                            "secp521r1"
                        ],
                        "type": "string"
                    },
                    "key_passphrase": {
                        "description": "key passphrase",
                        "pattern": "[^`$&()|\\\";'<>?]+",
                        "type": "string"
                    },
                    "key_size": {
                        "description": "supported key size for RSA",
                        "enum": [
                            2048,
                            3072,
                            4096,
                            8192
                        ],
                        "format": "int64",
                        "type": "integer"
                    },
                    "key_type": {
                        "description": "key type",
                        "enum": [
                            "RSA",
                            "ECDSA"
                        ],
                        "type": "string"
                    },
                    "locality": {
                        "description": "locality",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "the unique user-given name of the certificate. Certificate names cannot contain spaces or special characters. allowed characters are a-z, A-Z, 0-9, dot(.), dash (-) and underscore (_) starting with only a-z, A-Z.",
                        "pattern": "^[^\\d._-][\\w\\d._-]+$",
                        "type": "string"
                    },
                    "organization": {
                        "description": "organization",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "state": {
                        "description": "state/province",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "subject_alternative_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "issuer",
                    "common_name",
                    "key_type",
                    "duration_in_days"
                ],
                "type": "object"
            },
            "CertificateVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "Change": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "url": {
                        "example": "http://localhost/v1/sessions/{session_id}/changes/{change_id}",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "message",
                    "url"
                ],
                "type": "object"
            },
            "ChangePasswordRequest": {
                "description": "Change password request body.",
                "properties": {
                    "new_password": {
                        "description": "New password",
                        "minLength": 1,
                        "type": "string"
                    },
                    "temp_password": {
                        "description": "Temporary password",
                        "minLength": 1,
                        "type": "string"
                    },
                    "username": {
                        "description": "User Name",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "temp_password",
                    "new_password"
                ],
                "type": "object"
            },
            "ChangePasswordResponse": {
                "description": "Change password response body.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ],
                "type": "object"
            },
            "Changes": {
                "items": {
                    "$ref": "#/components/schemas/Change"
                },
                "type": "array"
            },
            "ClonePolicyTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "policy_name": {
                                "description": "WAF policy name.",
                                "example": "waf_policy",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines details of the WAF clone-policy task and policy."
            },
            "ComponentDeploymentStatus": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "result": {
                        "enum": [
                            "Success",
                            "Failure"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "run_time": {
                        "type": "integer"
                    },
                    "start_time": {
                        "example": "2021-01-28T15:24:05.029102Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "Waiting",
                            "Running",
                            "Completed",
                            "Skipped"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "status"
                ],
                "type": "object"
            },
            "CreateAlert": {
                "description": "create alert",
                "properties": {
                    "annotations": {
                        "$ref": "#/components/schemas/Annotations"
                    },
                    "endsAt": {
                        "description": "alert ends at",
                        "type": "string"
                    },
                    "labels": {
                        "$ref": "#/components/schemas/Labels"
                    },
                    "startsAt": {
                        "description": "alert starts at",
                        "type": "string"
                    },
                    "status": {
                        "description": "alert status",
                        "enum": [
                            "firing",
                            "resolved"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "annotations",
                    "labels"
                ],
                "type": "object"
            },
            "CreateAlertRequest": {
                "description": "create alert requests",
                "properties": {
                    "alerts": {
                        "description": "alerts",
                        "items": {
                            "$ref": "#/components/schemas/CreateAlert"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "alerts"
                ],
                "type": "object"
            },
            "CreateAlertTypeRequest": {
                "description": "create alert type requests",
                "properties": {
                    "help_link": {
                        "description": "help link",
                        "type": "string"
                    },
                    "level": {
                        "$ref": "#/components/schemas/AlertLevel"
                    },
                    "name": {
                        "description": "alert type name",
                        "minLength": 1,
                        "type": "string"
                    },
                    "notifications": {
                        "$ref": "#/components/schemas/LinkOrRemovalList"
                    },
                    "source": {
                        "description": "feature name who is source of this type",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "source",
                    "level"
                ],
                "type": "object"
            },
            "CreateApplicationRequest": {
                "properties": {
                    "allowOverwrite": {
                        "description": "Allow application with the same name to be overwritten.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of the template in templateSetName/templateName format.",
                        "type": "string"
                    },
                    "parameters": {
                        "description": "Parameters for the template.",
                        "type": "object"
                    },
                    "target": {
                        "description": "IP address, hostname, or both, of the target instance, expressed in JSON format (for example:{\"target\":{\"address\":\"1.2.3.4\",\"hostname\":\"example.host.net\"}}).",
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "hostname": {
                                "format": "hostname",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "name",
                    "parameters",
                    "target"
                ],
                "type": "object"
            },
            "CreateDeploymentRequest": {
                "properties": {
                    "device_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "template_params_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "wf_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "device_id",
                    "template_params_id",
                    "wf_type"
                ],
                "type": "object"
            },
            "CreateInstanceLicensesRequest": {
                "properties": {
                    "connected": {
                        "default": true,
                        "type": "boolean"
                    },
                    "instances": {
                        "description": "instance ids",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "jwt": {
                        "description": "jwt token to activate the license to given instances.",
                        "type": "string"
                    }
                },
                "required": [
                    "instances"
                ],
                "type": "object"
            },
            "CreatePolicyFromTemplateData": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/CreatePolicyFromTemplateData"
            },
            "CreateQkviewRequest": {
                "properties": {
                    "description": {
                        "description": "Upload description",
                        "type": "string"
                    },
                    "f5_support_case": {
                        "description": "F5 Support Case Number",
                        "type": "string"
                    },
                    "filename": {
                        "description": "Qkview file name",
                        "type": "string"
                    },
                    "ha_node_ips": {
                        "description": "List of HA Node Control Plane Addresses",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ihealth_password": {
                        "description": "Ihealth password",
                        "type": "string"
                    },
                    "ihealth_user": {
                        "description": "Ihealth username",
                        "type": "string"
                    },
                    "instance_id": {
                        "description": "The UUID of a BIG-IP Next instance.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "save_credentials": {
                        "default": false,
                        "description": "Save ihealth credentials",
                        "type": "boolean"
                    },
                    "share_with_case_owner": {
                        "description": "Share with case owner",
                        "type": "boolean"
                    },
                    "source": {
                        "default": "INSTANCE",
                        "enum": [
                            "CM",
                            "INSTANCE"
                        ],
                        "type": "string"
                    },
                    "storage": {
                        "default": "EXTERNAL",
                        "description": "Storage of qkview file",
                        "enum": [
                            "LOCAL",
                            "EXTERNAL"
                        ],
                        "type": "string"
                    },
                    "user_agent": {
                        "default": "CM",
                        "description": "User Agent",
                        "type": "string"
                    },
                    "visible_in_gui": {
                        "description": "Upload visible in gui",
                        "type": "boolean"
                    }
                },
                "required": [
                    "filename",
                    "ihealth_user"
                ],
                "type": "object"
            },
            "CreateSchemaRequest": {
                "properties": {
                    "template": {
                        "description": "Template name in setName/templateName format.",
                        "type": "string"
                    }
                },
                "required": [
                    "template"
                ],
                "type": "object"
            },
            "CreateTemplateParamsRequest": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "object"
                    },
                    "source_device_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "template_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "template_id"
                ],
                "type": "object"
            },
            "CreateTemplateRequest": {
                "description": "Payload for creating a new FAST template.",
                "example": {
                    "body": "template: |\n  {\n    \"class\": \"AS3\",\n      \"action\": \"deploy\",\n      \"persist\": true,\n      \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.0.0\",\n        \"{{tenant_name}}\": {\n          \"class\": \"Tenant\",\n          \"{{application_name}}\": {\n            \"class\": \"Application\",\n            \"template\": \"http\",\n            \"serviceMain\": {\n              \"class\": \"Service_HTTP\",\n              \"virtualPort\": {{virtual_port::integer}},\n              \"virtualAddresses\": [\"{{virtual_address}}\"],\n              \"pool\": \"{{application_name}}_web_pool\"\n            },\n            \"{{application_name}}_web_pool\": {\n              \"class\": \"Pool\",\n              \"monitors\": [\n                \"http\"\n              ],\n              \"members\": [\n                {\n                  \"servicePort\": {{service_port::integer}},\n                  \"serverAddresses\": {{server_addresses::array}}\n                }\n            ]\n          }\n        }\n      }\n    }\n  }",
                    "description": "optional template description",
                    "file_type": "JSON",
                    "name": "example-AS3-template",
                    "set_name": "as3"
                },
                "properties": {
                    "body": {
                        "minLength": 1,
                        "title": "Template body",
                        "type": "string"
                    },
                    "description": {
                        "title": "Template description",
                        "type": "string"
                    },
                    "file_type": {
                        "enum": [
                            "YAML",
                            "MST",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "title": "Template name",
                        "type": "string"
                    },
                    "published": {
                        "default": false,
                        "description": "The value true indicates that the template has been published, and this means the template is in use by an application or that it cannot be modified. When the template is published (value set to true), the template cannot be updated, deleted or moved from one template-set to another.",
                        "type": "boolean"
                    },
                    "set_name": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "title": "Template set name",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "set_name",
                    "body",
                    "file_type"
                ],
                "title": "Payload for creating a template",
                "type": "object"
            },
            "CreateVelosProviderRequest": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "partition_address": {
                        "type": "string"
                    },
                    "partition_password": {
                        "type": "string"
                    },
                    "partition_port": {
                        "type": "integer"
                    },
                    "partition_user": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "name",
                    "partition_address",
                    "partition_port",
                    "partition_user",
                    "partition_password"
                ],
                "type": "object"
            },
            "DataPoint": {
                "properties": {
                    "timestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "value": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "timestamp",
                    "value"
                ],
                "type": "object"
            },
            "Declaration": {
                "properties": {
                    "policy": {
                        "$ref": "#/components/schemas/PolicyDeclaration"
                    }
                },
                "type": "object"
            },
            "DeleteAlertTypeRequest": {
                "description": "delete alert type request",
                "properties": {
                    "name": {
                        "description": "alert type name",
                        "type": "string"
                    },
                    "source": {
                        "description": "feature name who is source of this type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "source"
                ],
                "type": "object"
            },
            "DeleteCertIDList": {
                "description": "list of ids send to delete with status",
                "properties": {
                    "certificates": {
                        "description": "certificate ids",
                        "items": {
                            "$ref": "#/components/schemas/DeleteStatus"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeleteLicenseRequest": {
                "properties": {
                    "deactivate": {
                        "default": false,
                        "description": "deactivate license on deletion",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DeleteNotificationConfigurationsRequest": {
                "description": "delete notification coniguration request",
                "properties": {
                    "name": {
                        "description": "notification configuration name",
                        "type": "string"
                    },
                    "notification_type": {
                        "description": "notification configuration type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "notification_type"
                ],
                "type": "object"
            },
            "DeleteStatus": {
                "description": "delete status",
                "properties": {
                    "id": {
                        "description": "SMTP server id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "message": {
                        "description": "status message",
                        "type": "string"
                    },
                    "status": {
                        "description": "status code",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeployableObjects": {
                "additionalProperties": true,
                "example": {
                    "certs": [
                        "sys file ssl-cert /Common/cert1"
                    ],
                    "keys": [
                        "sys file ssl-key /Common/key1"
                    ]
                },
                "type": "object"
            },
            "Deployment": {
                "properties": {
                    "as3_tenants": {
                        "additionalProperties": {
                            "items": {
                                "example": "application_1",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "example": {
                            "tenant_1": [
                                "application_1",
                                "application_2"
                            ],
                            "tenant_2": [
                                "application_3"
                            ]
                        },
                        "readOnly": true,
                        "type": "object"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "example": 1,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "status": {
                        "enum": [
                            "Deploying",
                            "Process failed",
                            "Process completed"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "url": {
                        "format": "uri",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "destination"
                ],
                "type": "object"
            },
            "DeploymentDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Deployment"
                    },
                    {
                        "properties": {
                            "details": {
                                "properties": {
                                    "deployable_objects": {
                                        "items": {
                                            "additionalProperties": {
                                                "$ref": "#/components/schemas/ComponentDeploymentStatus"
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "stages": {
                                        "items": {
                                            "additionalProperties": {
                                                "$ref": "#/components/schemas/ComponentDeploymentStatus"
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "tenants": {
                                        "items": {
                                            "additionalProperties": {
                                                "$ref": "#/components/schemas/ComponentDeploymentStatus"
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "readOnly": true,
                                "type": "object"
                            },
                            "output_as3_link": {
                                "example": "http://localhost:8443/v1/sessions/1/root_files/output.json",
                                "readOnly": true,
                                "type": "string"
                            },
                            "results": {
                                "items": {
                                    "example": {
                                        "message": "AS3 declaration loaded successfully.",
                                        "time": "2021-01-28T15:24:05.029102Z"
                                    },
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "time": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "DeploymentStubVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "DeploymentTask": {
                "properties": {
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "device_id": {
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "template_params_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Device": {
                "properties": {
                    "address": {
                        "readOnly": true,
                        "title": "IP Address",
                        "type": "string"
                    },
                    "certificate_validated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "certificate_validation_error": {
                        "type": "string"
                    },
                    "certificate_validity": {
                        "type": "boolean"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "mode": {
                        "enum": [
                            "STANDALONE",
                            "HA"
                        ],
                        "type": "string"
                    },
                    "platform_type": {
                        "description": "Specifies the platform of this BIG-IP Next instance.",
                        "maxLength": 16,
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "enum": [
                            "HEALTHY",
                            "UNHEALTHY",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "DeviceDeleteRequest": {
                "properties": {
                    "device_password": {
                        "format": "password",
                        "minLength": 1,
                        "type": "string"
                    },
                    "device_user": {
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "device_user",
                    "device_password"
                ],
                "type": "object"
            },
            "DeviceDeleteTask": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "device_id": {
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceDetails": {
                "properties": {
                    "host": {
                        "example": "10.0.0.1",
                        "type": "string"
                    },
                    "platform": {
                        "example": "Z101",
                        "type": "string"
                    },
                    "version": {
                        "example": "14.1.1.0",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceDiscoveryRequest": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "device_group": {
                        "type": "string"
                    },
                    "device_password": {
                        "format": "password",
                        "type": "string"
                    },
                    "device_user": {
                        "type": "string"
                    },
                    "management_password": {
                        "format": "password",
                        "minLength": 1,
                        "type": "string"
                    },
                    "management_user": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "address",
                    "port",
                    "device_user",
                    "device_password",
                    "management_user",
                    "management_password"
                ],
                "type": "object"
            },
            "DeviceDiscoveryTask": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "device_group": {
                        "type": "string"
                    },
                    "device_password": {
                        "format": "password",
                        "type": "string"
                    },
                    "device_user": {
                        "type": "string"
                    },
                    "discovered_device_id": {
                        "type": "string"
                    },
                    "discovered_device_path": {
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceGroup": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "DeviceVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "EditDeploymentRequest": {
                "properties": {
                    "template_params_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "wf_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "template_params_id",
                    "wf_type"
                ],
                "type": "object"
            },
            "EditTemplateTask": {
                "$ref": "#/components/schemas/CreateTemplateRequest"
            },
            "EffectivePermission": {
                "properties": {
                    "action": {
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE"
                        ],
                        "type": "string"
                    },
                    "allowed": {
                        "type": "boolean"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "user_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "user_name",
                    "resource",
                    "action"
                ],
                "type": "object"
            },
            "EffectivePermissions": {
                "properties": {
                    "effectivepermissions": {
                        "items": {
                            "$ref": "#/components/schemas/EffectivePermission"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "EnforceReadyEntitiesTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "sections": {
                                "description": "All sections (entity types) that need to be enforced.",
                                "items": {
                                    "example": "urls",
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines WAF enforce-ready-entities task."
            },
            "EntityTypesList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/EntityTypesList"
            },
            "Error": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "status",
                    "message"
                ],
                "type": "object"
            },
            "EvasionList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/EvasionList"
            },
            "ExportSamlSpRequest": {
                "$ref": "../api/policy/profile/policy-content/policy-items/saml-sp.yaml#/components/schemas/samlService"
            },
            "ExportSamlSpResponse": {
                "properties": {
                    "metadata": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "metadata"
                ],
                "type": "object"
            },
            "FastVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "File": {
                "properties": {
                    "content": {
                        "format": "binary",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "file_type": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "file_name"
                ],
                "type": "object"
            },
            "FileData": {
                "description": "File data",
                "properties": {
                    "checksum": {
                        "type": "string"
                    },
                    "delete_date_time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "downloadable": {
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "ihealth_id": {
                        "type": "string"
                    },
                    "is_primary": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "source_ip": {
                        "type": "string"
                    },
                    "upload_date_time": {
                        "type": "string"
                    },
                    "uploaded": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FileOutput": {
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "GatewayVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "GeneralResponse": {
                "properties": {
                    "id": {
                        "example": "404b7e5e-42e7-4bd8-acb0-a6b57c013b9f",
                        "format": "uuid",
                        "type": "string"
                    },
                    "message": {
                        "description": "status message",
                        "example": "QKView task have been successfully done",
                        "type": "string"
                    },
                    "status": {
                        "description": "status code",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GeneralTask": {
                "description": "Defines WAF general task properties.",
                "properties": {
                    "completed": {
                        "description": "Task completed time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "description": "Task created time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure_reason": {
                        "description": "Task failure reason.",
                        "example": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "UUID of task.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "policy_id": {
                        "description": "UUID of WAF policy.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "state": {
                        "description": "Task state.",
                        "example": "completeTask",
                        "type": "string"
                    },
                    "status": {
                        "description": "Task status.",
                        "example": "Completed",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GeolocationsList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/GeolocationsList"
            },
            "GetApplicationResponse": {
                "properties": {
                    "appName": {
                        "description": "Name of the application to retrieve.",
                        "type": "string"
                    },
                    "deployed": {
                        "type": "boolean"
                    },
                    "deploymentName": {
                        "description": "Name of the deployment.",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the application to retrieve.",
                        "type": "string"
                    },
                    "id": {
                        "description": "UUID of the application to retrieve.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "instanceID": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "parameters": {
                        "description": "Parameters in the template.",
                        "type": "object"
                    },
                    "setName": {
                        "description": "Name of the template set that the template belongs to.",
                        "type": "string"
                    },
                    "target": {
                        "description": "IP address of the target instance.",
                        "type": "object"
                    },
                    "templateName": {
                        "description": "Name of the template in templateSetName/templateName format.",
                        "type": "string"
                    },
                    "tenantName": {
                        "description": "Name of the AS3 tenant associated with this application.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "deployementName",
                    "description",
                    "deployed",
                    "tenantName",
                    "appName",
                    "setName",
                    "templateName",
                    "parameters",
                    "target",
                    "instanceID",
                    "lastModified"
                ],
                "type": "object"
            },
            "GetIHealthResponse": {
                "properties": {
                    "total": {
                        "description": "total users",
                        "type": "integer"
                    },
                    "usernames": {
                        "description": "usernames",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetInstanceLicensesResponse": {
                "properties": {
                    "connected": {
                        "description": "license connection mode",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "license id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "instances": {
                        "description": "instance details",
                        "items": {
                            "$ref": "#/components/schemas/InstanceResponse"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "status message",
                        "type": "string"
                    },
                    "status": {
                        "description": "status code",
                        "type": "integer"
                    },
                    "type": {
                        "description": "license type",
                        "type": "string"
                    },
                    "version": {
                        "description": "license version",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetInstanceLicensesWithBasicAuthRequest": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "password": {
                        "format": "password",
                        "minLength": 1,
                        "type": "string"
                    },
                    "port": {
                        "format": "int",
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "username": {
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "port",
                    "username",
                    "password"
                ],
                "type": "object"
            },
            "GetStorageResponse": {
                "properties": {
                    "external": {
                        "type": "string"
                    },
                    "local": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupPolicies": {
                "properties": {
                    "grouppolicies": {
                        "items": {
                            "$ref": "#/components/schemas/GroupPolicy"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GroupPolicy": {
                "properties": {
                    "resource_permission_group_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "resource_permission_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "role_group_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "role_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "user_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HAInstanceCreateRequest": {
                "properties": {
                    "auto_failback": {
                        "default": false,
                        "description": "Automatically restore operations to the original active node if it is available, or when it becomes available if it is not.",
                        "title": "Auto Failback",
                        "type": "boolean"
                    },
                    "cluster_management_ip": {
                        "description": "The cluster IP address on management network.",
                        "example": "10.192.1.1",
                        "title": "Cluster Management IP",
                        "type": "string"
                    },
                    "cluster_name": {
                        "description": "Name of the BIG-IP Next HA instance.",
                        "maxLength": 192,
                        "type": "string"
                    },
                    "control_plane_vlan": {
                        "$ref": "#/components/schemas/VLAN"
                    },
                    "data_plane_vlan": {
                        "$ref": "#/components/schemas/VLAN"
                    },
                    "nodes": {
                        "description": "The first item is the configuration for the active node in a BIG-IP Next HA instance. Subsequent items are for other nodes.",
                        "items": {
                            "$ref": "#/components/schemas/HAInstanceCreateRequestForNode"
                        },
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "standby_instance_id": {
                        "description": "The UUID of a managed standalone BIG-IP Next instance that has been selected to become the standby node in a BIG-IP Next HA instance.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "traffic_vlan": {
                        "items": {
                            "$ref": "#/components/schemas/TrafficVlanRequest"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "cluster_management_ip",
                    "standby_instance_id",
                    "data_plane_vlan",
                    "control_plane_vlan",
                    "nodes"
                ],
                "type": "object"
            },
            "HAInstanceCreateRequestForNode": {
                "properties": {
                    "control_plane_address": {
                        "description": "The IP address and netmask of the node on control plane in a BIG-IP Next HA instance.",
                        "example": "10.30.1.11/24",
                        "title": "HA Network Node IP with network mask",
                        "type": "string"
                    },
                    "data_plane_primary_address": {
                        "description": "Specifies the IP address and network mask used for state mirroring for a BIG-IP Next HA instance.",
                        "example": "10.20.1.1/24",
                        "title": "Primary Mirror IP and network mask",
                        "type": "string"
                    },
                    "data_plane_secondary_address": {
                        "description": "Specifies the secondary IP address and network mask used for state mirroring between nodes in a BIG-IP Next HA instance.",
                        "example": "10.20.10.1/24",
                        "title": "Secondary Mirror IP and network mask",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of a BIG-IP Next instance. The maximum length is 192 characters.",
                        "maxLength": 192,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "control_plane_address",
                    "data_plane_primary_address"
                ],
                "type": "object"
            },
            "HAInstanceCreateTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "properties": {
                            "active_instance_id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "auto_failback": {
                                "type": "boolean"
                            },
                            "cluster_management_ip": {
                                "type": "string"
                            },
                            "cluster_name": {
                                "type": "string"
                            },
                            "control_plane_vlan": {
                                "$ref": "#/components/schemas/VLAN"
                            },
                            "data_plane_vlan": {
                                "$ref": "#/components/schemas/VLAN"
                            },
                            "id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "nodes": {
                                "items": {
                                    "$ref": "#/components/schemas/HAInstanceCreateRequestForNode"
                                },
                                "type": "array"
                            },
                            "standby_instance_id": {
                                "format": "uuid",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "HAInstanceFailoverTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "properties": {
                            "instance_id": {
                                "description": "The UUID of a BIG-IP Next instance.",
                                "format": "uuid",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "HealthSyncRequest": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "instance_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "instance_id",
                    "address",
                    "port"
                ],
                "type": "object"
            },
            "HealthSyncTask": {
                "properties": {
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "instance_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HttpRFCList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/HttpRFCList"
            },
            "IHealthData": {
                "properties": {
                    "commands": {
                        "type": "string"
                    },
                    "expiration_date": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "f5_support_case": {
                        "type": "string"
                    },
                    "file_size": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "files": {
                        "description": "list of files uploaded to qkview",
                        "type": "string"
                    },
                    "id": {
                        "description": "file id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "message": {
                        "description": "status message",
                        "type": "string"
                    },
                    "processing_status": {
                        "type": "string"
                    },
                    "status": {
                        "description": "status code",
                        "type": "integer"
                    },
                    "visible_in_gui": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "IRule": {
                "properties": {
                    "id": {
                        "example": 1,
                        "type": "integer"
                    },
                    "irule": {
                        "example": "when HTTP_REQUEST {\\n    HTTP::redirect \"10.1.1.1:80\"\\n}",
                        "type": "string"
                    },
                    "is_valid": {
                        "type": "boolean"
                    },
                    "last_modified": {
                        "example": "2021-01-28T15:24:05.029102Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "example": "irule_1",
                        "type": "string"
                    },
                    "path": {
                        "example": [
                            "tenant_1",
                            "application_1"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "url": {
                        "example": "http://localhost/v1/sessions/1/irules/1",
                        "format": "url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ImportIdpConnectorRequest": {
                "properties": {
                    "metadata": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "metadata"
                ],
                "type": "object"
            },
            "ImportRequest": {
                "properties": {
                    "cert_passphrase": {
                        "description": "certificate password for pkcs12 import",
                        "type": "string"
                    },
                    "cert_text": {
                        "description": "certificate content",
                        "type": "string"
                    },
                    "id": {
                        "description": "uuid of the certificate",
                        "format": "uuid",
                        "type": "string"
                    },
                    "import_type": {
                        "enum": [
                            "PEM",
                            "PKCS12"
                        ],
                        "type": "string"
                    },
                    "key_passphrase": {
                        "description": "key passphrase",
                        "pattern": "[^`$&()|\\\";'<>?]+",
                        "type": "string"
                    },
                    "key_text": {
                        "description": "key content",
                        "type": "string"
                    },
                    "name": {
                        "description": "the unique user-given name of the certificate. Certificate names cannot contain spaces or special characters. allowed characters are a-z, A-Z, 0-9, dot(.), dash (-) and underscore (_) starting with only a-z, A-Z.",
                        "pattern": "^[^\\d._-][\\w\\d._-]+$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceAuthenticityRequest": {
                "description": "A BIG-IP Next instance authenticity request.",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "password": {
                        "format": "password",
                        "minLength": 1,
                        "type": "string"
                    },
                    "port": {
                        "format": "int",
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "username": {
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "port",
                    "username",
                    "password"
                ],
                "type": "object"
            },
            "InstanceAuthenticityResponse": {
                "description": "A BIG-IP Next instance authenticity response.",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InstanceBackup": {
                "properties": {
                    "file_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "string"
                    },
                    "instance_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "instance_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "file_name"
                ],
                "type": "object"
            },
            "InstanceBackupRequest": {
                "properties": {
                    "file_name": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceBackupTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "properties": {
                            "file_name": {
                                "type": "string"
                            },
                            "file_path": {
                                "type": "string"
                            },
                            "instance_id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "instance_name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "InstanceHealth": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "mode": {
                        "enum": [
                            "STANDALONE",
                            "HA"
                        ],
                        "type": "string"
                    },
                    "node_count": {
                        "title": "Number of Nodes",
                        "type": "integer"
                    },
                    "nodes": {
                        "items": {
                            "$ref": "#/components/schemas/Node"
                        },
                        "type": "array"
                    },
                    "status": {
                        "enum": [
                            "HEALTHY",
                            "UNHEALTHY",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "InstanceInterfaces": {
                "properties": {
                    "interfaces": {
                        "items": {
                            "description": "Returns the name of a network interface for a managed BIG-IP Next instance.",
                            "example": "1.1",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "InstanceLicenseVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "InstanceResponse": {
                "properties": {
                    "activation_date": {
                        "description": "activation date",
                        "format": "date-time",
                        "type": "string"
                    },
                    "epoch_time": {
                        "description": "epoch time",
                        "type": "integer"
                    },
                    "expiry_date": {
                        "description": "expiry time",
                        "format": "date-time",
                        "type": "string"
                    },
                    "instance_id": {
                        "description": "instance id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "instance_ip": {
                        "description": "instance ip",
                        "type": "string"
                    },
                    "message": {
                        "description": "status message",
                        "type": "string"
                    },
                    "status": {
                        "description": "status code",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InstanceRestoreRequest": {
                "properties": {
                    "file_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceRestoreTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "properties": {
                            "file_name": {
                                "type": "string"
                            },
                            "instance_id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "instance_name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "InstanceVlan": {
                "properties": {
                    "mtu": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkName": {
                        "type": "string"
                    },
                    "selfIps": {
                        "items": {
                            "$ref": "#/components/schemas/InstanceVlanSelfIPResponse"
                        },
                        "type": "array"
                    },
                    "tag": {
                        "type": "integer"
                    },
                    "taggedInterfaces": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "untaggedInterfaces": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "InstanceVlanSelfIPResponse": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "instanceName": {
                        "type": "string"
                    }
                },
                "required": [
                    "address"
                ],
                "type": "object"
            },
            "InstanceVlans": {
                "properties": {
                    "vlans": {
                        "items": {
                            "$ref": "#/components/schemas/InstanceVlan"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Int": {
                "type": "integer"
            },
            "IpAddressActionCreateUpdate": {
                "properties": {
                    "action": {
                        "description": "The action to apply.",
                        "enum": [
                            "create",
                            "update"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "action"
                ]
            },
            "IpAddressActionDelete": {
                "properties": {
                    "action": {
                        "description": "The action to apply.",
                        "enum": [
                            "delete"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "action"
                ]
            },
            "IpAddressCreateUpdate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IpAddressActionCreateUpdate"
                    },
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyIpAddressFull"
                    },
                    {
                        "properties": {
                            "policies": {
                                "description": "The array of WAF policy names, don't specify to apply to all policies.",
                                "items": {
                                    "example": "waf_policy",
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines IP address create/update data."
            },
            "IpAddressDelete": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IpAddressActionDelete"
                    },
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyIpAddressCompact"
                    },
                    {
                        "properties": {
                            "policy_name": {
                                "description": "The WAF policy name, don't specify to apply to all policies.",
                                "example": "waf_policy",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines IP address delete data."
            },
            "JourneysVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "Labels": {
                "description": "levels",
                "properties": {
                    "alertname": {
                        "description": "alert name",
                        "type": "string"
                    },
                    "helpLink": {
                        "description": "help link",
                        "type": "string"
                    },
                    "job": {
                        "description": "alert job",
                        "type": "string"
                    },
                    "notificationConfigName": {
                        "description": "notification config name",
                        "type": "string"
                    },
                    "severity": {
                        "$ref": "#/components/schemas/AlertLevel"
                    }
                },
                "required": [
                    "alertname",
                    "job"
                ],
                "type": "object"
            },
            "LicenseTask": {
                "properties": {
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "current_step": {
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "license_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "response": {
                        "$ref": "#/components/schemas/GeneralResponse"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "status"
                ],
                "type": "object"
            },
            "LinkOrRemovalList": {
                "description": "list of IDs to link and/or removal",
                "properties": {
                    "delink": {
                        "description": "IDs to delink",
                        "items": {
                            "description": "ID",
                            "format": "uuid",
                            "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "link": {
                        "description": "IDs link",
                        "items": {
                            "description": "ID",
                            "format": "uuid",
                            "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LiveUpdateInstallationTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "file_name": {
                                "description": "WAF live update file name.",
                                "example": "ASM-AttackSignatures_20220819_082114.im",
                                "type": "string"
                            },
                            "instances": {
                                "description": "Live update installation instances.",
                                "items": {
                                    "properties": {
                                        "failure_reason": {
                                            "type": "string"
                                        },
                                        "instance_id": {
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "state": {
                                "description": "WAF live update installation task state.",
                                "example": "installing",
                                "type": "string"
                            },
                            "status": {
                                "description": "WAF live update installation task status.",
                                "example": "RUNNING",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines WAF live update installation task."
            },
            "LiveUpdatePreviewTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "file_name": {
                                "description": "WAF live update file name.",
                                "example": "ASM-AttackSignatures_20220819_082114.im",
                                "type": "string"
                            },
                            "state": {
                                "description": "WAF live update preview task state.",
                                "example": "calculating",
                                "type": "string"
                            },
                            "status": {
                                "description": "WAF live update preview task status.",
                                "example": "RUNNING",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines the preview task for viewing changes in a WAF live update."
            },
            "LiveUpdateUploadData": {
                "description": "Defines the WAF live update's upload task data.",
                "properties": {
                    "content": {
                        "description": "WAF live update file to upload.",
                        "format": "binary",
                        "type": "string"
                    },
                    "file_type": {
                        "description": "WAF live update file type. Possible values are \"attack-signatures\", \"threat-campaigns\", \"bot-signatures\".",
                        "enum": [
                            "attack-signatures",
                            "threat-campaigns",
                            "bot-signatures"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "file_type"
                ],
                "type": "object"
            },
            "LiveUpdateUploadTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "file_name": {
                                "description": "WAF live update file name.",
                                "example": "ASM-AttackSignatures_20220819_082114.im",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines WAF live update upload task."
            },
            "Metric": {
                "properties": {
                    "aggr": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "series": {
                        "items": {
                            "$ref": "#/components/schemas/MetricSeries"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "series"
                ],
                "type": "object"
            },
            "MetricSeries": {
                "properties": {
                    "datapoints": {
                        "items": {
                            "$ref": "#/components/schemas/DataPoint"
                        },
                        "type": "array"
                    },
                    "dimensions": {
                        "type": "object"
                    }
                },
                "required": [
                    "dimensions",
                    "datapoints"
                ],
                "type": "object"
            },
            "MetricsResponse": {
                "properties": {
                    "metrics": {
                        "items": {
                            "$ref": "#/components/schemas/Metric"
                        },
                        "type": "array"
                    },
                    "queryMetadata": {
                        "properties": {
                            "endTime": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "resolution": {
                                "type": "string"
                            },
                            "startTime": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "warning": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "metrics",
                    "queryMetadata"
                ],
                "type": "object"
            },
            "ModifyAlertTypeRequest": {
                "description": "modify alert type request",
                "properties": {
                    "help_link": {
                        "description": "help link",
                        "type": "string"
                    },
                    "level": {
                        "$ref": "#/components/schemas/AlertLevel"
                    },
                    "name": {
                        "description": "alert type name",
                        "minLength": 1,
                        "type": "string"
                    },
                    "notifications": {
                        "$ref": "#/components/schemas/LinkOrRemovalList"
                    },
                    "source": {
                        "description": "feature name who is source of this type",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "source"
                ],
                "type": "object"
            },
            "ModifyAlertTypeRequestByID": {
                "description": "modify alert type request",
                "properties": {
                    "help_link": {
                        "description": "help link",
                        "type": "string"
                    },
                    "level": {
                        "$ref": "#/components/schemas/AlertLevel"
                    },
                    "notifications": {
                        "$ref": "#/components/schemas/LinkOrRemovalList"
                    }
                },
                "type": "object"
            },
            "ModifyGeolocation": {
                "description": "Defines geolocation allow/disallow data.",
                "properties": {
                    "action": {
                        "description": "The action to apply.",
                        "enum": [
                            "allow",
                            "disallow"
                        ],
                        "type": "string"
                    },
                    "country_name": {
                        "description": "Specifies the name of the country.",
                        "example": "Sierra Leone",
                        "type": "string"
                    },
                    "policies": {
                        "description": "The array of WAF policy names, don't specify to apply to all policies.",
                        "items": {
                            "example": "waf_policy",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "country_name",
                    "action"
                ],
                "type": "object"
            },
            "ModifyNotificationConfigurationsRequestByID": {
                "properties": {
                    "alert_types": {
                        "$ref": "#/components/schemas/LinkOrRemovalList"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "periodicity": {
                        "type": "string"
                    },
                    "server_config": {
                        "type": "string"
                    },
                    "suppressed": {
                        "type": "boolean"
                    },
                    "to_emails": {
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "notification_type"
                ],
                "type": "object"
            },
            "Module": {
                "properties": {
                    "lastReceived": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "lastReceived"
                ],
                "type": "object"
            },
            "MonitorResponse": {
                "properties": {
                    "deviceID": {
                        "type": "string"
                    },
                    "modules": {
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        },
                        "type": "array"
                    },
                    "systemID": {
                        "type": "string"
                    }
                },
                "required": [
                    "deviceID",
                    "systemID",
                    "modules"
                ],
                "type": "object"
            },
            "MutableFileProperties": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Node": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "isHealthy": {
                        "type": "boolean"
                    },
                    "machine_id": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "state": {
                        "enum": [
                            "ACTIVE",
                            "STANDBY",
                            "STANDALONE",
                            "UNREACHABLE"
                        ],
                        "type": "string"
                    },
                    "system_id": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "machine_id"
                ],
                "type": "object"
            },
            "NotFound": {
                "properties": {
                    "detail": {
                        "example": "Object not found",
                        "type": "string"
                    },
                    "status_code": {
                        "example": 404,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "NotificationConfigCreateRequest": {
                "properties": {
                    "alert_types": {
                        "$ref": "#/components/schemas/LinkOrRemovalList"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "periodicity": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "server_config": {
                        "type": "string"
                    },
                    "suppressed": {
                        "type": "boolean"
                    },
                    "to_emails": {
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "notification_type"
                ],
                "type": "object"
            },
            "NotificationConfigUpdateRequest": {
                "properties": {
                    "alert_types": {
                        "$ref": "#/components/schemas/LinkOrRemovalList"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "periodicity": {
                        "type": "string"
                    },
                    "server_config": {
                        "type": "string"
                    },
                    "suppressed": {
                        "type": "boolean"
                    },
                    "to_emails": {
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "notification_type"
                ],
                "type": "object"
            },
            "NotificationIDList": {
                "description": "list of notification ids",
                "properties": {
                    "notifications": {
                        "description": "notification ids",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "notifications"
                ],
                "type": "object"
            },
            "NotificationType": {
                "enum": [
                    "SMTP",
                    "UI"
                ],
                "type": "string"
            },
            "NotificationsView": {
                "description": "Notifications view",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notification_configuration": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "periodicity": {
                        "type": "object"
                    },
                    "server_config": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "sub_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "suppressed": {
                        "type": "boolean"
                    },
                    "to_emails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Number": {
                "type": "number"
            },
            "Object": {
                "type": "object"
            },
            "ObjectID": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ObjectsMetadata": {
                "additionalProperties": true,
                "example": {
                    "ltm node /Common/1.2.3.4": {
                        "file": "bigip.conf",
                        "line": 10
                    },
                    "ltm pool /Common/pool": {
                        "file": "bigip.conf",
                        "line": 20
                    },
                    "net vlan /Common/vlan": {
                        "file": "bigip_base.conf",
                        "line": 20
                    }
                },
                "type": "object"
            },
            "OpenAPIResponse": {
                "type": "object"
            },
            "OutputPerapp": {
                "properties": {
                    "as3_link": {
                        "example": "http://<hostname>/v1/sessions/<session_id>/root_files/output.json",
                        "type": "string"
                    },
                    "deployment": {
                        "properties": {
                            "documentation_link": {
                                "example": "https://clouddocs.f5networks.net/bigip-next-ea/061/device_migration",
                                "type": "string"
                            },
                            "instruction": {
                                "example": "To manually Deploy AS3 declaration refer documentation_link",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "as3_link",
                    "deployment"
                ],
                "type": "object"
            },
            "Page": {
                "enum": [
                    "source_system",
                    "configuration_analysis",
                    "resolve_conflicts",
                    "resolution_summary",
                    "journey_summary",
                    "deployment",
                    "deployment_results",
                    "general_properties",
                    "applications",
                    "as3_conversion"
                ],
                "type": "string"
            },
            "PaginatedResponseBase": {
                "properties": {
                    "count": {
                        "example": 1,
                        "type": "integer"
                    },
                    "next": {
                        "format": "url",
                        "type": "string"
                    },
                    "previous": {
                        "format": "url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ParametersDefinition": {
                "description": "Object must conform to specified template's schema.",
                "example": {
                    "application": "bar",
                    "tenant": "foo",
                    "virtualAddress": "192.0.2.11"
                },
                "title": "Parameters Definition",
                "type": "object"
            },
            "PatchTemplateRequest": {
                "additionalProperties": false,
                "description": "The body of the PATCH request to partially update a FAST template.",
                "example": {
                    "description": "A simple https application",
                    "name": "simple-https",
                    "set_name": "FAST"
                },
                "properties": {
                    "description": {
                        "title": "Description of template",
                        "type": "string"
                    },
                    "name": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "title": "Template name",
                        "type": "string"
                    },
                    "published": {
                        "default": false,
                        "description": "The value true indicates that the template has been published, and this means the template is in use by an application or that it cannot be modified. When the template is published (value set to true), the template cannot be updated, deleted or moved from one template-set to another.",
                        "type": "boolean"
                    },
                    "set_name": {
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "title": "Template set name",
                        "type": "string"
                    }
                },
                "title": "The body of the PATCH request to partially update a FAST template",
                "type": "object"
            },
            "PerAppConfig": {
                "properties": {
                    "merging_overlapping_objects": {
                        "example": [
                            "ltm pool",
                            "ltm virtual-address",
                            "ltm monitor",
                            "ltm rule",
                            "ltm profile",
                            "sys folder",
                            "auth partition"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "regexes": {
                        "items": {
                            "properties": {
                                "field": {
                                    "enum": [
                                        "name",
                                        "description"
                                    ],
                                    "type": "string"
                                },
                                "regex": {
                                    "description": "Regular expression containing at least one of named groups: application_name, tenant_name",
                                    "example": "app: (?P<application_name>.*)",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "field",
                                "regex"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PoliciesTagsList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PoliciesTagsList"
            },
            "Policy": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "method": {
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "resource",
                    "method"
                ],
                "type": "object"
            },
            "PolicyBuilderSettings": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyBuilderSettings"
            },
            "PolicyDeclaration": {
                "properties": {
                    "antivirus": {
                        "oneOf": [
                            {
                                "properties": {
                                    "inspectHttpUploads": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "app-protection": {
                        "oneOf": [
                            {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "applicationLanguage": {
                        "description": "The character encoding for the web application. The character encoding determines how the policy processes the character sets. The default is Auto detect.",
                        "enum": [
                            "auto-detect",
                            "big5",
                            "euc-jp",
                            "euc-kr",
                            "gb18030",
                            "gb2312",
                            "gbk",
                            "iso-8859-1",
                            "iso-8859-10",
                            "iso-8859-13",
                            "iso-8859-15",
                            "iso-8859-16",
                            "iso-8859-2",
                            "iso-8859-3",
                            "iso-8859-4",
                            "iso-8859-5",
                            "iso-8859-6",
                            "iso-8859-7",
                            "iso-8859-8",
                            "iso-8859-9",
                            "koi8-r",
                            "shift_jis",
                            "utf-8",
                            "windows-1250",
                            "windows-1251",
                            "windows-1252",
                            "windows-1253",
                            "windows-1255",
                            "windows-1256",
                            "windows-1257",
                            "windows-874"
                        ],
                        "type": "string"
                    },
                    "behavioral-enforcement": {
                        "oneOf": [
                            {
                                "properties": {
                                    "behavioralEnforcementViolations": {
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "enableBehavioralEnforcement": {
                                        "type": "boolean"
                                    },
                                    "enableBlockingCveSignatures": {
                                        "type": "boolean"
                                    },
                                    "enableBlockingHighAccuracySignatures": {
                                        "type": "boolean"
                                    },
                                    "enableBlockingLikelyMaliciousTransactions": {
                                        "type": "boolean"
                                    },
                                    "enableBlockingSuspiciousTransactions": {
                                        "type": "boolean"
                                    },
                                    "enableBlockingViolations": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "blocking-settings": {
                        "description": "This section defines policy block/alarm/learn behaviors.",
                        "properties": {
                            "evasions": {
                                "oneOf": [
                                    {
                                        "items": {
                                            "description": "This section defines behavior of 'Evasion technique detected' (VIOL_EVASION) violation sub-violations.\nUser can control which sub-violations are enabled (alarmed/blocked) and/or learned.\nBehavior of sub-violations depends on the block/alarm/learn settings of 'Evasion technique detected' violation,\ndefined in /policy/blocking-settings/violations section:\n - If learn is disabled in violation - no learning will be done for sub-violations\n - If both alarm and block are disabled - enable flag becomes irrelevant, since there will be no block/alarm for all sub-violations",
                                            "properties": {
                                                "description": {
                                                    "description": "Human-readable name of sub-violation.",
                                                    "enum": [
                                                        "%u decoding",
                                                        "Apache whitespace",
                                                        "Bad unescape",
                                                        "Bare byte decoding",
                                                        "Directory traversals",
                                                        "IIS Unicode codepoints",
                                                        "IIS backslashes",
                                                        "Multiple decoding",
                                                        "Multiple slashes",
                                                        "Semicolon path parameters",
                                                        "Trailing dot",
                                                        "Trailing slash"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "Defines if sub-violation is enforced - alarmed or blocked, according to the 'Evasion technique detected' (VIOL_EVASION) violation blocking settings.",
                                                    "type": "boolean"
                                                },
                                                "learn": {
                                                    "description": "Defines if sub-violation is learned. Sub-violations are learned only when learn is enabled for the 'Evasion technique detected' (VIOL_EVASION) violation.",
                                                    "type": "boolean"
                                                },
                                                "maxDecodingPasses": {
                                                    "description": "Defines how many times the system decodes URI and parameter values before the request is considered an evasion.\nRelevant only for the 'Multiple decoding' sub-violation.",
                                                    "maximum": 5,
                                                    "minimum": 2,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "$ref": "#/components/schemas/reference"
                                    }
                                ]
                            },
                            "http-protocols": {
                                "oneOf": [
                                    {
                                        "items": {
                                            "description": "This section defines behavior of 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation sub-violations.\nUser can control which sub-violations are enabled (alarmed/blocked) and/or learned.\nBehavior of sub-violations depends on the block/alarm/learn settings of 'HTTP protocol compliance failed' violation,\ndefined in /policy/blocking-settings/violations section:\n - If learn is disabled in violation - no learning will be done for sub-violations\n - If both alarm and block are disabled - enable flag becomes irrelevant, since there will be no block/alarm for all sub-violations",
                                            "properties": {
                                                "description": {
                                                    "description": "Human-readable name of sub-violation",
                                                    "enum": [
                                                        "Bad HTTP version",
                                                        "Bad host header value",
                                                        "Bad multipart parameters parsing",
                                                        "Bad multipart/form-data request parsing",
                                                        "Body in GET or HEAD requests",
                                                        "CRLF characters before request start",
                                                        "Check maximum number of cookies",
                                                        "Check maximum number of headers",
                                                        "Check maximum number of parameters",
                                                        "Chunked request with Content-Length header",
                                                        "Content length should be a positive number",
                                                        "Header name with no header value",
                                                        "High ASCII characters in headers",
                                                        "Host header contains IP address",
                                                        "Multiple host headers",
                                                        "No Host header in HTTP/1.1 request",
                                                        "Null in request",
                                                        "POST request with Content-Length: 0",
                                                        "Several Content-Length headers",
                                                        "Unescaped space in URL",
                                                        "Unparsable request content"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "Defines if sub-violation is enforced - alarmed or blocked, according to the 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation blocking settings",
                                                    "type": "boolean"
                                                },
                                                "learn": {
                                                    "description": "Defines if sub-violation is learned. Sub-violations is learned only when learn is enabled for the 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation",
                                                    "type": "boolean"
                                                },
                                                "maxCookies": {
                                                    "maximum": 100,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "maxHeaders": {
                                                    "description": "Defines maximum allowed number of headers in request.\nRelevant only for the 'Check maximum number of headers' sub-violation",
                                                    "maximum": 150,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "maxParams": {
                                                    "description": "Defines maximum allowed number of parameters in request.\nRelevant only for the 'Check maximum number of parameters' sub-violation",
                                                    "maximum": 5000,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "$ref": "#/components/schemas/reference"
                                    }
                                ]
                            },
                            "violations": {
                                "oneOf": [
                                    {
                                        "items": {
                                            "properties": {
                                                "alarm": {
                                                    "type": "boolean"
                                                },
                                                "block": {
                                                    "type": "boolean"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "learn": {
                                                    "type": "boolean"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "$ref": "#/components/schemas/reference"
                                    }
                                ]
                            },
                            "web-services-securities": {
                                "oneOf": [
                                    {
                                        "items": {
                                            "properties": {
                                                "description": {
                                                    "enum": [
                                                        "Certificate Error",
                                                        "Certificate Expired",
                                                        "Decryption Error",
                                                        "Encryption Error",
                                                        "Expired Timestamp",
                                                        "Internal Error",
                                                        "Invalid Timestamp",
                                                        "Malformed Error",
                                                        "Missing Timestamp",
                                                        "Signing Error",
                                                        "Timestamp expiration is too far in the future",
                                                        "UnSigned Timestamp",
                                                        "Verification Error"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "learn": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "$ref": "#/components/schemas/reference"
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "bot-defense": {
                        "description": "This section defines the properties of the bot defense feature.",
                        "properties": {
                            "mitigations": {
                                "description": "This section defines the mitigation to each class or signature.",
                                "properties": {
                                    "anomalies": {
                                        "oneOf": [
                                            {
                                                "items": {
                                                    "properties": {
                                                        "$action": {
                                                            "enum": [
                                                                "delete"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "action": {
                                                            "enum": [
                                                                "alarm",
                                                                "block",
                                                                "default",
                                                                "detect",
                                                                "ignore"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "scoreThreshold": {
                                                            "oneOf": [
                                                                {
                                                                    "maximum": 150,
                                                                    "minimum": 0,
                                                                    "type": "integer"
                                                                },
                                                                {
                                                                    "enum": [
                                                                        "default"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "pattern": "\\d+$",
                                                                    "type": "string"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "$ref": "#/components/schemas/reference"
                                            }
                                        ]
                                    },
                                    "browsers": {
                                        "oneOf": [
                                            {
                                                "items": {
                                                    "properties": {
                                                        "$action": {
                                                            "enum": [
                                                                "delete"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "action": {
                                                            "enum": [
                                                                "alarm",
                                                                "block",
                                                                "detect"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "maxVersion": {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "minVersion": {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "$ref": "#/components/schemas/reference"
                                            }
                                        ]
                                    },
                                    "classes": {
                                        "oneOf": [
                                            {
                                                "items": {
                                                    "description": "List of classes and their actions.",
                                                    "properties": {
                                                        "action": {
                                                            "description": "The action we set for this class.\n\n- **ignore**: The system will not detect or report bots from this class.\n- **detect**: The system will detect and report the bot, but violation won't be reported.\n- **alarm**: The system will detect and report requests made by bots from this class as illegal, but will not block them.\n- **block**: The system will detect and report requests made by bots from this class as illegal, and block them.",
                                                            "enum": [
                                                                "alarm",
                                                                "block",
                                                                "detect",
                                                                "ignore"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The class we set the action to.",
                                                            "enum": [
                                                                "browser",
                                                                "malicious-bot",
                                                                "suspicious-browser",
                                                                "trusted-bot",
                                                                "unknown",
                                                                "untrusted-bot"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "$ref": "#/components/schemas/reference"
                                            }
                                        ]
                                    },
                                    "signatures": {
                                        "oneOf": [
                                            {
                                                "items": {
                                                    "description": "List of signatures and their actions.\nIf a signature is not in the list - its action will be taken according to the class it belongs to.",
                                                    "properties": {
                                                        "$action": {
                                                            "enum": [
                                                                "delete"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "action": {
                                                            "description": "The action we set for this signature.\n\n- **ignore**: The system will not detect or report this signature.\n- **detect**: The system will detect and report the signature, but violation won't be reported.\n- **alarm**: The system will detect and report requests made by those specific bots as illegal, but will not block them.\n- **block**: The system will detect and report requests made by those specific bots as illegal, and will block them.",
                                                            "enum": [
                                                                "alarm",
                                                                "block",
                                                                "detect",
                                                                "ignore"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the signature we want to change action for.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "$ref": "#/components/schemas/reference"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            },
                            "settings": {
                                "oneOf": [
                                    {
                                        "description": "This section contains all bot defense settings.",
                                        "properties": {
                                            "caseSensitiveHttpHeaders": {
                                                "description": "If *false* the system will not check header name with case sensitivity for both relevant anomalies: Invalid HTTP Headers, Suspicious HTTP Headers.",
                                                "type": "boolean"
                                            },
                                            "isEnabled": {
                                                "description": "If *true* the system detects bots.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/reference"
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "browser-definitions": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "isUserDefined": {
                                            "type": "boolean"
                                        },
                                        "matchRegex": {
                                            "type": "string"
                                        },
                                        "matchString": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "brute-force-attack-preventions": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "Defines configuration for Brute Force Protection feature.\nThere is default configuration (one with bruteForceProtectionForAllLoginPages flag and without url) that applies to all configured login URLs unless there exists another brute force configuration for a specific login page.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "bruteForceProtectionForAllLoginPages": {
                                            "description": "When enabled, enables Brute Force Protection for all configured login URLs.\nWhen disabled, only brute force configurations for specific login pages are applied in case they exist.",
                                            "type": "boolean"
                                        },
                                        "captchaBypassCriteria": {
                                            "description": "Specifies configuration for CAPTCHA Bypass Mitigation.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.",
                                                    "enum": [
                                                        "alarm-and-blocking-page",
                                                        "alarm-and-drop",
                                                        "alarm-and-honeypot-page"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "When enabled, the system counts successful CAPTCHA challenges with failed logins from IP Address / Device ID.",
                                                    "type": "boolean"
                                                },
                                                "threshold": {
                                                    "description": "After configured threshold (number of successful CAPTCHA challenges with failed logins from IP Address / Device ID) defined action will be applied for the next login attempt",
                                                    "maximum": 100,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "clientSideIntegrityBypassCriteria": {
                                            "description": "Specifies configuration for Client Side Integrity Bypass Mitigation.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.",
                                                    "enum": [
                                                        "alarm-and-captcha"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "When enabled, the system counts successful challenges with failed logins from IP Address / Device ID / Username.\nLegitimate users who have disabled JavaScripting on their browsers for security reasons will fail a client side integrity challenge.",
                                                    "type": "boolean"
                                                },
                                                "threshold": {
                                                    "description": "After configured threshold (number of successful challenges with failed logins from IP Address / Device ID / Username) defined action will be applied for the next login attempt",
                                                    "maximum": 100,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "detectionCriteria": {
                                            "description": "Specifies configuration for detecting distributed brute force attacks.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action that is applied when one of the defined thresholds (credentialsStuffingMatchesReached, failedLoginAttemptsRateReached) is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.\n- **alarm-and-client-side-integrity-captcha**: The system sends a Client Side Integrity challenge upon the first failed login attempt from a source and a CAPTCHA challenge upon second and all subsequent failed login attempts. A login attempt is logged if client successfully passes the challenge. This enforcement action should be chosen if CAPTCHA is considered intrusive. Benign users who mistype their password will likely get only the Client Side Integrity challenge, while an attacker will eventually get the CAPTCHA challenge.",
                                                    "enum": [
                                                        "alarm",
                                                        "alarm-and-captcha",
                                                        "alarm-and-client-side-integrity",
                                                        "alarm-and-client-side-integrity-captcha"
                                                    ],
                                                    "type": "string"
                                                },
                                                "credentialsStuffingMatchesReached": {
                                                    "description": "After configured threshold (number of detected login attempts that match known leaked credentials library) defined action will be applied for the next login attempt.",
                                                    "maximum": 10000,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "detectCredentialsStuffingAttack": {
                                                    "description": "When enabled, the system detects login attempts that match known leaked credentials library.",
                                                    "type": "boolean"
                                                },
                                                "detectDistributedBruteForceAttack": {
                                                    "description": "When enabled, the system detects distributed brute force attacks.",
                                                    "type": "boolean"
                                                },
                                                "failedLoginAttemptsRateReached": {
                                                    "description": "After configured threshold (number of failed login attempts within measurementPeriod) defined action will be applied for the next login attempt.           ",
                                                    "maximum": 10000,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "leakedCredentialsCriteria": {
                                            "description": "Specifies configuration for Leaked Credentials Detection.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action when leaked credentials detected.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.\n- **alarm-and-leaked-credentials-response-page**: The default response page warns the user that the username and password have been leaked and the password should be changed.",
                                                    "enum": [
                                                        "alarm",
                                                        "alarm-and-blocking-page",
                                                        "alarm-and-honeypot-page",
                                                        "alarm-and-leaked-credentials-response-page"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "When enabled, the system can match presented credentials to those in the credentials dictionary to detect leaked credentials.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "loginAttemptsFromTheSameDeviceId": {
                                            "description": "Specifies configuration for detecting brute force attacks for Device ID.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.\n- **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.",
                                                    "enum": [
                                                        "alarm",
                                                        "alarm-and-blocking-page",
                                                        "alarm-and-captcha",
                                                        "alarm-and-client-side-integrity",
                                                        "alarm-and-drop",
                                                        "alarm-and-honeypot-page"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "When enabled, the system counts failed login attempts for Device ID.",
                                                    "type": "boolean"
                                                },
                                                "threshold": {
                                                    "description": "After configured threshold (number of failed login attempts for Device ID) defined action will be applied for the next login attempt.",
                                                    "maximum": 100,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "loginAttemptsFromTheSameIp": {
                                            "description": "Specifies configuration for detecting brute force attacks from IP Address.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-blocking-page**: The system will log the login attempt, block the request and send the Blocking page.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.\n- **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n- **alarm-and-honeypot-page**: The system will log the login attempt, block the request and send the Honeypot page. The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation. As a result, the attacker will not change identity (Source IP or Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is recommended when mitigation is request blocking.",
                                                    "enum": [
                                                        "alarm",
                                                        "alarm-and-blocking-page",
                                                        "alarm-and-captcha",
                                                        "alarm-and-client-side-integrity",
                                                        "alarm-and-drop",
                                                        "alarm-and-honeypot-page"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "When enabled, the system counts failed login attempts from IP Address.",
                                                    "type": "boolean"
                                                },
                                                "threshold": {
                                                    "description": "After configured threshold (number of failed login attempts from IP Address) defined action will be applied for the next login attempt.",
                                                    "maximum": 1000,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "loginAttemptsFromTheSameUser": {
                                            "description": "Specifies configuration for detecting brute force attacks for Username.",
                                            "properties": {
                                                "action": {
                                                    "description": "Specifies action that is applied when defined threshold is reached.\n\n- **alarm**: The system will log the login attempt.\n- **alarm-and-captcha**: The system determines whether the client is a legal browser operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the client successfully passes the CAPTCHA challenge.\n- **alarm-and-client-side-integrity**: The system determines whether the client is a legal browser or a bot by sending a page containing JavaScript code and waiting for a response. Legal browsers are able to execute JavaScript and produce a valid response, whereas bots cannot. A login attempt is logged if the client successfully passes the Client Side Integrity challenge.",
                                                    "enum": [
                                                        "alarm",
                                                        "alarm-and-captcha",
                                                        "alarm-and-client-side-integrity"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "description": "When enabled, the system counts failed login attempts for each Username.",
                                                    "type": "boolean"
                                                },
                                                "threshold": {
                                                    "description": "After configured threshold (number of failed login attempts for each Username) defined action will be applied for the next login attempt.",
                                                    "maximum": 100,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "measurementPeriod": {
                                            "description": "Defines detection period (measured in minutes) for distributed brute force attacks.",
                                            "maximum": 90000,
                                            "minimum": 60,
                                            "type": "integer"
                                        },
                                        "preventionDuration": {
                                            "description": "Defines prevention period (measured in minutes) for distributed brute force attacks.",
                                            "oneOf": [
                                                {
                                                    "maximum": 90000,
                                                    "minimum": 60,
                                                    "type": "integer"
                                                },
                                                {
                                                    "enum": [
                                                        "90000"
                                                    ],
                                                    "type": "string"
                                                },
                                                {
                                                    "pattern": "\\d+$",
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "reEnableLoginAfter": {
                                            "description": "Defines prevention period (measured in minutes) for source-based brute force attacks.",
                                            "maximum": 90000,
                                            "minimum": 60,
                                            "type": "integer"
                                        },
                                        "sourceBasedProtectionDetectionPeriod": {
                                            "description": "Defines detection period (measured in minutes) for source-based brute force attacks.",
                                            "maximum": 90000,
                                            "minimum": 60,
                                            "type": "integer"
                                        },
                                        "url": {
                                            "$ref": "#/components/schemas/urls-items"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "caseInsensitive": {
                        "description": "Specifies whether the security policy treats microservice URLs, file types, URLs, and parameters as case sensitive or not. When this setting is enabled, the system stores these security policy elements in lowercase in the security policy configuration.",
                        "type": "boolean"
                    },
                    "character-sets": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "characterSet": {
                                            "items": {
                                                "properties": {
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "metachar": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "metachar"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "characterSetType": {
                                            "enum": [
                                                "gwt-content",
                                                "header",
                                                "json-content",
                                                "parameter-name",
                                                "parameter-value",
                                                "plain-text-content",
                                                "url",
                                                "xml-content"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "characterSetType"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "cookie-settings": {
                        "oneOf": [
                            {
                                "description": "The maximum length of a cookie header name and value that the system processes. The system calculates and enforces a cookie header length based on the sum of the length of the cookie header name and value.",
                                "properties": {
                                    "maximumCookieHeaderLength": {
                                        "description": "Maximum Cookie Header Length must be greater than 0 and less than 65536 bytes (64K). Note: if 0 or *any* are set, then no restriction on the cookie header length is applied.",
                                        "oneOf": [
                                            {
                                                "maximum": 65536,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            {
                                                "enum": [
                                                    "any"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "pattern": "\\d+$",
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "cookies": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "This section defines Cookie entities for your policy.\nYou can specify the cookies that you want to allow, and the ones you want to enforce in a security policy:\n\n- **Allowed cookies**: The system allows these cookies and clients can change them.\n- **Enforced cookies**: The system enforces the cookies in the list (not allowing clients to change them) and allows clients to change all others.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "accessibleOnlyThroughTheHttpProtocol": {
                                            "description": "Specifies, when true, that the system adds the HttpOnly attribute to the domain cookie's response header.\nThis is done to expose the cookie to only HTTP and HTTPS entities.\nThis prevents the cookie from being modified, or intercepted even if it is not modified,\nby unwanted third parties that run scripts on the web page.\n\n**Notes**:\n- The system does not validate that the cookie has not been modified or intercepted.\n- The feature covers all security policy cookies, both enforced and allowed, explicit and wildcard.",
                                            "type": "boolean"
                                        },
                                        "attackSignaturesCheck": {
                                            "description": "Specifies, when true, that you want attack signatures and threat campaigns to be detected on this cookie\nand possibly override the security policy settings of an attack signature or threat campaign specifically for this cookie.\nAfter you enable this setting, the system displays a list of attack signatures and threat campaigns.",
                                            "type": "boolean"
                                        },
                                        "enforcementType": {
                                            "description": "Specifies how the system treats this cookie.\n\n- **enforced**: Specifies that according to the security policy, this cookie may not be changed by the client.\n- **allowed**: Specifies that according to the security policy, this cookie may be changed by the client. The system ignores this cookie.",
                                            "enum": [
                                                "allow",
                                                "enforce"
                                            ],
                                            "type": "string"
                                        },
                                        "insertSameSiteAttribute": {
                                            "description": "The introduction of the SameSite http attribute (defined in [RFC6265bis](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00))\nallows you to declare if your cookie should be restricted to a first-party or same-site context.\nIntroducing the SameSite attribute on a cookie provides three different ways of controlling same-site vs. cross-site cookie sending:\n\n- **strict**: Cookie will only be sent in a first-party context. In user terms, the cookie will only be sent if the site for the cookie matches the site currently shown in the browser's URL bar.\n- **lax**: Cookies will be sent with top level navigation\n- **none-value**: Cookies will be sent in a third-party context.",
                                            "enum": [
                                                "lax",
                                                "none",
                                                "none-value",
                                                "strict"
                                            ],
                                            "type": "string"
                                        },
                                        "isBase64": {
                                            "description": "You can enable the security policy to check whether cookie values contain a Base64 encoded string.\nIf the value is indeed Base64 encoded, the system decodes this value and continues with its security checks.\nSpecifies, when true, that the security policy checks the cookie's value for Base64 encoding, and decodes the value.\n\n**Note**: This setting is only available if Cookie Type is set to Allowed.",
                                            "type": "boolean"
                                        },
                                        "maskValueInLogs": {
                                            "description": "Specifies, when true, that the cookie's value will be masked in the request log",
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "Specifies the cookie name as appearing in the http cookie header.\nThe cookie name length is limited to 500 characters.\n\nNames can be one of the following according to the *type* attribute:\n\n- **explicit**: Specifies that the cookie has a specific name and is not a wildcard entity. Type the name of a cookie exactly as you expect it to appear in the request.\n- **wildcard**: Specifies that any cookie that matches the listed wildcard expression should be treated according to the wildcard attributes. Type a wildcard expression that matches the expected cookie. For example, the wildcard expression cookie_12* of type Enforced specifies that the security policy should not allow modified domain cookies for all cookies which match cookie_12*.\n\nThe syntax for wildcard entities is based on shell-style wildcard characters.\nThe list below describes the wildcard characters that you can use so that the entity name can match multiple objects.\n\n- **\\***: Matches all characters\n- **?**: Matches any single character\n- **[abcde]**: Matches exactly one of the characters listed\n- **[!abcde]**: Matches any character not listed\n- **[a-e]**: Matches exactly one character in the range\n- **[!a-e]**: Matches any character not in the range\n\n**Note**: Wildcards do not match regular expressions. Do not use a regular expression as a wildcard.",
                                            "type": "string"
                                        },
                                        "performStaging": {
                                            "description": "If *true* then any violation associated to the respective cookie will not be enforced, and the request will not be considered illegal.",
                                            "type": "boolean"
                                        },
                                        "securedOverHttpsConnection": {
                                            "description": "Specifies, when true, that the system adds the Secure attribute to the domain cookie's response header.\nThis is done to ensure that the cookies are returned to the server only over SSL (by using the HTTPS protocol).\nThis prevents the cookie from being intercepted, but does not guarantee its integrity.\n\n**Notes**:\n- The system does not validate that the cookie was received over SSL.\n- The feature covers all security policy cookies, both enforced and allowed, explicit and wildcard.",
                                            "type": "boolean"
                                        },
                                        "signatureOverrides": {
                                            "description": "Array of signature overrides.\nSpecifies attack signatures whose security policy settings are overridden for this cookie,\nand which action the security policy takes when it discovers a request for this cookie that matches these attack signatures.",
                                            "items": {
                                                "properties": {
                                                    "enabled": {
                                                        "description": "Specifies, when true, that the overridden signature is enforced",
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "The signature name which, along with the signature tag, identifies the signature.",
                                                        "type": "string"
                                                    },
                                                    "signatureId": {
                                                        "description": "The signature ID which identifies the signature.",
                                                        "type": "integer"
                                                    },
                                                    "tag": {
                                                        "description": "The signature tag which, along with the signature name, identifies the signature.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "description": "Determines the type of the **name** attribute.\nOnly when setting the type to wildcard will the special wildcard characters in the name be interpreted as such.",
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "wildcardOrder": {
                                            "description": "Specifies the order index for wildcard cookies matching.\nWildcard cookies with lower wildcard order will get checked for a match prior to cookies with higher wildcard order.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "csrf-protection": {
                        "oneOf": [
                            {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "expirationTimeInSeconds": {
                                        "oneOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "enum": [
                                                    "disabled"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "pattern": "\\d+$",
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "sslOnly": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "csrf-urls": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "enforcementAction": {
                                            "enum": [
                                                "none",
                                                "verify-csrf-token",
                                                "verify-origin"
                                            ],
                                            "type": "string"
                                        },
                                        "method": {
                                            "enum": [
                                                "GET",
                                                "POST",
                                                "any"
                                            ],
                                            "type": "string"
                                        },
                                        "parametersList": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "requiredParameters": {
                                            "enum": [
                                                "at-least-one",
                                                "from-parameters-list",
                                                "ignore"
                                            ],
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string"
                                        },
                                        "wildcardOrder": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "url"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "data-guard": {
                        "oneOf": [
                            {
                                "description": "Data Guard feature can prevent responses from exposing sensitive information by masking the data.",
                                "properties": {
                                    "creditCardNumbers": {
                                        "description": "If *true* the system considers credit card numbers as sensitive data.",
                                        "type": "boolean"
                                    },
                                    "customPatterns": {
                                        "description": "If *true* the system recognizes customized patterns as sensitive data.",
                                        "type": "boolean"
                                    },
                                    "customPatternsList": {
                                        "description": "List of PCRE regular expressions that specify the sensitive data patterns.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "enabled": {
                                        "description": "If *true* the system protects sensitive data.",
                                        "type": "boolean"
                                    },
                                    "enforcementMode": {
                                        "description": "Specifies the URLs for which the system enforces data guard protection.\n\n- **ignore-urls-in-list**: Specifies that the system enforces data guard protection for all URLs except for those URLs in the Enforcement Mode list.\n- **enforce-urls-in-list**: Specifies that the system enforces data guard protection only for those URLs in the Enforcement Mode list",
                                        "enum": [
                                            "enforce-urls-in-list",
                                            "ignore-urls-in-list"
                                        ],
                                        "type": "string"
                                    },
                                    "enforcementUrls": {
                                        "description": "List of URLS to be enforced based on enforcement mode of data guard protection.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "exceptionPatterns": {
                                        "description": "If *true* the system recognizes exception patterns as not being sensitive data.",
                                        "type": "boolean"
                                    },
                                    "exceptionPatternsList": {
                                        "description": "List of PCRE regular expressions that specify the data patterns that are not recognized as sensitive data.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "fileContentDetection": {
                                        "description": "If *true* the system checks responses for file content.",
                                        "type": "boolean"
                                    },
                                    "fileContentDetectionFormats": {
                                        "description": "File content types that the system considers to be sensitive data. Available file content types:\n      - MS Office 2007 or later\n      - MS Office 97-2003 document\n      - PDF - Adobe Portable Document Format\n      - Mach-O - Mach object file format - used in Mac OS X\n      - PE - Portable Executable for Windows\n      - ELF - binary file format for Unix",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "enum": [
                                                        "ELF - binary file format for Unix",
                                                        "MS Office 2007 or later",
                                                        "MS Office 97-2003 document",
                                                        "Mach-O - Mach object file format - used in Mac OS X",
                                                        "PDF - Adobe Portable Document Format",
                                                        "PE - Portable Executable for Windows"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastCcnDigitsToExpose": {
                                        "description": "Specifies the number of last digits in credit card numbers that are exposed.",
                                        "maximum": 20,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "lastSsnDigitsToExpose": {
                                        "description": "Specifies the number of last digits in U.S Social Security numbers that are exposed.",
                                        "maximum": 20,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "maskData": {
                                        "description": "If *true* the system intercepts the returned responses to mask sensitive data.",
                                        "type": "boolean"
                                    },
                                    "usSocialSecurityNumbers": {
                                        "description": "If *true* the system considers U.S Social Security numbers as sensitive data.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "enabled"
                                ],
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "database-protection": {
                        "oneOf": [
                            {
                                "properties": {
                                    "databaseProtectionEnabled": {
                                        "type": "boolean"
                                    },
                                    "userSource": {
                                        "enum": [
                                            "apm",
                                            "login-pages"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "deception-response-pages": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "responseBody": {
                                            "type": "string"
                                        },
                                        "responseHeaders": {
                                            "type": "string"
                                        },
                                        "responseStatusCode": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "responseStatusCode"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "deception-settings": {
                        "oneOf": [
                            {
                                "properties": {
                                    "enableCustomResponses": {
                                        "type": "boolean"
                                    },
                                    "enableResponsePageByAttackType": {
                                        "type": "boolean"
                                    },
                                    "responseStatusCodes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "serverTechnologyName": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "description": {
                        "description": "Specifies the description of the policy.",
                        "type": "string"
                    },
                    "disabled-action-items": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "type": {
                                            "enum": [
                                                "cookie-staging",
                                                "default-parameter",
                                                "filetype-staging",
                                                "modified-policy",
                                                "parameter-staging",
                                                "policy-validation",
                                                "scanner-vulnerabilities",
                                                "signature-staging",
                                                "threat-campaign-staging",
                                                "transparent-policy",
                                                "url-staging",
                                                "websocket-url-staging"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "disallowed-geolocations": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "Specifies a list of countries that may not access the web application.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "countryCode": {
                                            "description": "Specifies the ISO country code of the selected country.",
                                            "type": "string"
                                        },
                                        "countryName": {
                                            "description": "Specifies the name of the country.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "countryName"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "dos-protection": {
                        "oneOf": [
                            {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "enablePassiveMode": {
                        "description": "Passive Mode allows the policy to be associated with a Performance L4 Virtual Server (using a FastL4 profile). With FastL4, traffic is analyzed but is not modified in any way.",
                        "type": "boolean"
                    },
                    "enforcementMode": {
                        "description": "How the system processes a request that triggers a security policy violation.\n- **Blocking:** When the enforcement mode is set to blocking, traffic is blocked if it causes a violation (configured for blocking).\n- **Transparent:** When the enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.",
                        "enum": [
                            "blocking",
                            "transparent"
                        ],
                        "type": "string"
                    },
                    "filetypes": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "File types are categorization of the URLs in the request by the extension appearing past the last dot at the end of the URL. For example, the file type of /index.php\nis \"php\". Other well known file types are html, aspx, png, jpeg and many more. A special case is the \"empty\" file type called \"no-ext\" meaning, no extension in which the URL has no dot at its last segment as in /foo_no_dot\n\nFile types usually imply the expected content type in the response. For example, html and php return HTML content, while jpeg, png and gif return images, each in its respective format. File types also imply the server technology deployed for rendering the page. For example, php (PHP), aspx (ASP) and many others.\n\nThe security policy uses file types for several purposes:\n1. Ability to define which file types are allowed and which are disallowed. By including the pure wildcard \"\\*\" file type and a list of disallowed file types you have a file type denylist.\nBy having a list of explicit file type *without* the pure wildcard \"\\*\" you have a file type allowlist.\n2. Each file type implies maximum *length restrictions* for the requests of that file type. The checked lengths are per the URL, Query String, total request length, and payload (POST data).\n3. Each file type determines whether to detect *response signatures* for requests of that file type. Typically, one would never check signatures for image file types.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "allowed": {
                                            "description": "Determines whether the file type is allowed or disallowed. In either of these cases the VIOL_FILETYPE violation is issued (if enabled) for an incoming request-\n1. No allowed file type matched the file type of the request.\n2. The file type of the request matched a disallowed file type.",
                                            "type": "boolean"
                                        },
                                        "checkPostDataLength": {
                                            "description": "Determines whether to enforce maximum length restriction for the body, a.k.a. \"POST data\" part of the requests that match the respective file type. The maximum length is determined by *postDataLength* attribute.\nAlthough named \"POST data\", this applies to any content type and not restricted to POST requests, e.g. PUT requests are also checked.\nThis attribute is relevant only to *allowed* file types.",
                                            "type": "boolean"
                                        },
                                        "checkQueryStringLength": {
                                            "description": "Determines whether to enforce maximum length restriction for the query string of the requests that match the respective file type. The maximum length is determined by *queryStringLength* attribute.\nThis attribute is relevant only to *allowed* file types.",
                                            "type": "boolean"
                                        },
                                        "checkRequestLength": {
                                            "description": "Determines whether to enforce maximum length restriction for the total length of requests that match the respective file type. The maximum length is determined by *requestLength* attribute.\nThis attribute is relevant only to *allowed* file types.",
                                            "type": "boolean"
                                        },
                                        "checkUrlLength": {
                                            "description": "Determines whether to enforce maximum length restriction for the URL of the requests that match the respective file type. The URL does *not* include the query string, past the &. The maximum length is determined by *urlLength* attribute.\nThis attribute is relevant only to *allowed* file types.",
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "Specifies the file type name as appearing in the URL extension. Names can be one of the following according to the *type* attribute:\n\n- **Explicit** - Specifies that the name is the literal file extension to which the file type refers. The *type* attribute has to be \"explicit\".\n- **No Extension** - Specifies the empty file type, lacking file extension. For this the reserved string **no_ext** should be used. The *type* attribute has to be \"explicit\".\n- **Wildcard** - Specifies that any file extension that matches the wildcard expression is matched to this file type in the policy. The *type* attribute has to be \"wildcard\".\n\nThe syntax for wildcard entities is based on shell-style wildcard characters. The list below describes the wildcard characters that you can use so that the entity name can match multiple objects.\n\n- **\\***: Matches all characters\n- **?**: Matches any single character\n- **[abcde]**: Matches exactly one of the characters listed\n- **[!abcde]**: Matches any character not listed\n- **[a-e]**: Matches exactly one character in the range\n- **[!a-e]**: Matches any character not in the range\n\n**Note**: Wildcards do not match regular expressions. Do not use a regular expression as a wildcard.",
                                            "type": "string"
                                        },
                                        "performStaging": {
                                            "description": "If *true* then any violation associated to the respective file type will not be enforced, and the request will not be considered illegal.",
                                            "type": "boolean"
                                        },
                                        "postDataLength": {
                                            "description": "The maximum length in bytes of the body (POST data) of the request matching the file type. Enforced only if checkPostDataLength is set to *true*.\nIf the value is exceeded then VIOL_POST_DATA_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "queryStringLength": {
                                            "description": "The maximum length in bytes of the query string of the request matching the file type. Enforced only if checkQueryStringLength is set to *true*.\nIf the value is exceeded then VIOL_QUERY_STRING_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "requestLength": {
                                            "description": "The maximum total length in bytes of the request matching the file type. Enforced only if checkRequestLength is set to *true*.\nIf the value is exceeded then VIOL_REQUEST_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "responseCheck": {
                                            "description": "Determines whether the responses to requests that match the respective file types are inspected for attack signature detection.\nThis attribute is relevant only to *allowed* file types.",
                                            "type": "boolean"
                                        },
                                        "type": {
                                            "description": "Determines the type of the **name** attribute. Only when setting the type to wildcard will the special wildcard characters in the name be interpreted as such.",
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "urlLength": {
                                            "description": "The maximum length in bytes of the URL of the request matching the file type, excluding the query string. Enforced only if checkUrlLength is set to *true*.\nIf the value is exceeded then VIOL_URL_LENGTH violation is issued.\nThis attribute is relevant only to *allowed* file types.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "wildcardOrder": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "fullPath": {
                        "description": "The full name of the policy including partition.",
                        "type": "string"
                    },
                    "general": {
                        "oneOf": [
                            {
                                "description": "This section includes several advanced policy configuration settings.",
                                "properties": {
                                    "allowedResponseCodes": {
                                        "description": "You can specify which responses a security policy permits.\nBy default, the system accepts all response codes from 100 to 399 as valid responses.\nResponse codes from 400 to 599 are considered invalid unless added to the Allowed Response Status Codes list.\nBy default, 400, 401, 404, 407, 417, and 503 are on the list as allowed HTTP response status codes.",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "type": "array"
                                    },
                                    "customXffHeaders": {
                                        "description": "If you require the system to trust a server further than one hop toward the client (the last proxy traversed), you can use the Custom XFF Headers setting to define a specific header that is inserted closer to, or at the client, that the system will trust.\nAdditionally, if you require the system to trust a proxy server that uses a different header name than the X-Forwarded-For header name, you can add the desired header name to the Custom XFF Headers setting.\nWhen adding a custom header, the X-Forwarded-For header is not trusted anymore. In case the X-Forwarded-For header is to be trusted along with other headers, you must add it to the custom headers list.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "dynamicSessionIdDescription": {
                                        "description": "A description of user-defined regular expression that the security policy uses to recognize dynamic sessions in URLs.",
                                        "type": "string"
                                    },
                                    "dynamicSessionIdInUrl": {
                                        "description": "A user-defined regular expression that the security policy uses to recognize dynamic sessions in URLs.",
                                        "type": "string"
                                    },
                                    "enableEventCorrelation": {
                                        "description": "This feature designed to provide an aggregated view of security events in the Configuration utility.\nWhen two or more illegal requests are sent to the web application within a short period of time, the system correlates them as a security event.\nFor example, the system aggregates requests into a single event if a single user causes multiple violations over time.\nWhen enabled, Event Correlation Reporting logs are collected.",
                                        "type": "boolean"
                                    },
                                    "enforcementReadinessPeriod": {
                                        "description": "For each security policy, you can configure the number of days used as the enforcement readiness period, also called staging.\nSecurity policy entities and attack signatures remain in staging for this period of time before the system suggests that you enforce them.\nStaging allows you to test security policy entities and attack signatures for false positives without enforcing them.\nThe default value of 7 days works for most situations so you typically do not need to change it.",
                                        "maximum": 999,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "maskCreditCardNumbersInRequest": {
                                        "description": "When enabled, the security policy masks credit card numbers that appear in any part of requests. The system does not mask the information in the actual requests, but rather in various logs:\n* Credit card numbers appearing in entity names are masked in the requests of the Requests log.\n* Credit card numbers appearing in entity values are masked wherever requests can be viewed: the Requests log, violation details within that log, manual learning, and reports.\nThis setting is enabled by default, and exists in addition to masking parameters defined as containing sensitive information.",
                                        "type": "boolean"
                                    },
                                    "pathParameterHandling": {
                                        "description": "A URI path parameter is the part of a path segment that occurs after its name. You can configure how a security policy handles path parameters that are attached to path segments in URIs.\nYou can enforce different levels of security based on your needs:\n\n- **as-parameter**: The system normalizes and enforces path parameters. For each path parameter, the system removes it from URLs as part of the normalization process, finds a corresponding parameter in the security policy (first at the matching URL level, and if not found, then at the Global level), and enforces it according to its attributes like any other parameters.\n- **as-url**: The system does not normalize nor enforce path parameters. Path parameters are considered an integral part of the URL.\n- **ignore**: The system removes path parameters from URLs as part of the normalization process, but does not enforce them.",
                                        "enum": [
                                            "as-parameters",
                                            "as-url",
                                            "ignore"
                                        ],
                                        "type": "string"
                                    },
                                    "triggerAsmIruleEvent": {
                                        "description": "When enabled, the system activates ASM iRule events. When disabled, the system does not activate ASM iRule events. Enable this option if you have written iRules that process ASM iRule events, and assigned them to a specific virtual server. The default setting is disabled.\n\n- **disabled**: Leave this option disabled if you either have not written any ASM iRules.\n- **enabled-normal**: The system invokes the event ASM_REQUEST_DONE after the system completes processing each request, regardless of whether the request triggered violations. This gives you the opportunity, using iRules, to configure the system to perform actions after ASM handles requests whether they trigger, or do not trigger, violations.\n- **enabled-compatibility**: The system invokes the event ASM_REQUEST_VIOLATION after the system completes processing each request that triggered a violation. This gives you the opportunity, using iRules, to configure the system to perform actions after ASM handles requests only that trigger violations.",
                                        "enum": [
                                            "disabled",
                                            "enabled-compatibility",
                                            "enabled-normal"
                                        ],
                                        "type": "string"
                                    },
                                    "trustXff": {
                                        "description": "When enabled, the system has confidence in an XFF (X-Forwarded-For) header in the request. When disabled, that the system does not have confidence in an XFF header in the request. The default setting is disabled.\n\nSelect this option if the system is deployed behind an internal or other trusted proxy. Then, the system uses the IP address that initiated the connection to the proxy instead of the internal proxy's IP address.\n\nLeave this option disabled if you think the HTTP header may be spoofed, or crafted, by a malicious client. With this setting disabled, if the system is deployed behind an internal proxy, the system uses the internal proxy's IP address instead of the client's IP address.",
                                        "type": "boolean"
                                    },
                                    "useDynamicSessionIdInUrl": {
                                        "description": "How the security policy processes URLs that use dynamic sessions. When disabled the security policy does not enforce dynamic sessions in URLs.\nWhen enabled the system will use a default or user-defined pattern for recognizing dynamic sessions in URLs.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "graphql-profiles": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "attackSignaturesCheck": {
                                            "type": "boolean"
                                        },
                                        "defenseAttributes": {
                                            "properties": {
                                                "allowIntrospectionQueries": {
                                                    "type": "boolean"
                                                },
                                                "maximumBatchedQueries": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumQueryCost": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumStructureDepth": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumTotalLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumValueLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "tolerateParsingWarnings": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "hasIdlFiles": {
                                            "type": "boolean"
                                        },
                                        "idlFiles": {
                                            "items": {
                                                "properties": {
                                                    "idlFile": {
                                                        "$ref": "#/components/schemas/policy/properties/idl-files/oneOf/0/items"
                                                    },
                                                    "isPrimary": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "idlFile"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "metacharElementCheck": {
                                            "type": "boolean"
                                        },
                                        "metacharOverrides": {
                                            "items": {
                                                "properties": {
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "metachar": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "metachar"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "responseEnforcement": {
                                            "properties": {
                                                "blockDisallowedPatterns": {
                                                    "type": "boolean"
                                                },
                                                "disallowedPatterns": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sensitiveData": {
                                            "items": {
                                                "properties": {
                                                    "parameterName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "parameterName"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "signatureOverrides": {
                                            "items": {
                                                "properties": {
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "signatureId": {
                                                        "type": "integer"
                                                    },
                                                    "tag": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "grpc-profiles": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "associateUrls": {
                                            "type": "boolean"
                                        },
                                        "attackSignaturesCheck": {
                                            "type": "boolean"
                                        },
                                        "decodeStringValuesAsBase64": {
                                            "enum": [
                                                "disabled",
                                                "enabled"
                                            ],
                                            "type": "string"
                                        },
                                        "defenseAttributes": {
                                            "properties": {
                                                "allowUnknownFields": {
                                                    "type": "boolean"
                                                },
                                                "maximumDataLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "hasIdlFiles": {
                                            "type": "boolean"
                                        },
                                        "idlFiles": {
                                            "items": {
                                                "properties": {
                                                    "idlFile": {
                                                        "$ref": "#/components/schemas/policy/properties/idl-files/oneOf/0/items"
                                                    },
                                                    "importUrl": {
                                                        "type": "string"
                                                    },
                                                    "isPrimary": {
                                                        "type": "boolean"
                                                    },
                                                    "primaryIdlFileName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "idlFile"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "metacharElementCheck": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "signatureOverrides": {
                                            "items": {
                                                "properties": {
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "signatureId": {
                                                        "type": "integer"
                                                    },
                                                    "tag": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "gwt-profiles": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "attackSignaturesCheck": {
                                            "type": "boolean"
                                        },
                                        "defenseAttributes": {
                                            "properties": {
                                                "maximumTotalLengthOfGWTData": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumValueLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "tolerateGWTParsingWarnings": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "metacharElementCheck": {
                                            "type": "boolean"
                                        },
                                        "metacharOverrides": {
                                            "items": {
                                                "properties": {
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "metachar": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "metachar"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "signatureOverrides": {
                                            "items": {
                                                "properties": {
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "signatureId": {
                                                        "type": "integer"
                                                    },
                                                    "tag": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "header-settings": {
                        "oneOf": [
                            {
                                "description": "The maximum length of an HTTP header name and value that the system processes. The system calculates and enforces the HTTP header length based on the sum of the length of the HTTP header name and value.",
                                "properties": {
                                    "maximumHttpHeaderLength": {
                                        "description": "Maximum HTTP Header Length must be greater than 0 and less than 65536 bytes (64K). Note: if 0 or *any* are set, then no restriction on the HTTP header length is applied.",
                                        "oneOf": [
                                            {
                                                "maximum": 65536,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            {
                                                "enum": [
                                                    "any"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "pattern": "\\d+$",
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "headers": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "This section defines Header entities for your policy.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "allowRepeatedOccurrences": {
                                            "type": "boolean"
                                        },
                                        "base64Decoding": {
                                            "type": "boolean"
                                        },
                                        "checkSignatures": {
                                            "type": "boolean"
                                        },
                                        "htmlNormalization": {
                                            "type": "boolean"
                                        },
                                        "mandatory": {
                                            "type": "boolean"
                                        },
                                        "maskValueInLogs": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "Specifies the HTTP header name.\nThe header name length is limited to 254 characters.\n\nNames can be one of the following according to the *type* attribute:\n\n- **explicit**: Specifies that the header has a specific name and is not a wildcard entity. The name of the header exactly as you expect it to appear in the request.\n- **wildcard**: Specifies that any header that matches the listed wildcard expression should be treated according to the wildcard attributes.\n\nThe syntax for wildcard entities is based on shell-style wildcard characters.\nThe list below describes the wildcard characters that you can use so that the entity name can match multiple objects.\n\n- **\\***: Matches all characters\n- **?**: Matches any single character\n- **[abcde]**: Matches exactly one of the characters listed\n- **[!abcde]**: Matches any character not listed\n- **[a-e]**: Matches exactly one character in the range\n- **[!a-e]**: Matches any character not in the range\n\n**Note**: Wildcards do not match regular expressions. Do not use a regular expression as a wildcard.",
                                            "type": "string"
                                        },
                                        "normalizationViolations": {
                                            "type": "boolean"
                                        },
                                        "percentDecoding": {
                                            "type": "boolean"
                                        },
                                        "signatureOverrides": {
                                            "description": "Array of signature overrides.\nSpecifies attack signatures whose security policy settings are overridden for this header,\nand which action the security policy takes when it discovers a request for this header that matches these attack signatures.",
                                            "items": {
                                                "properties": {
                                                    "enabled": {
                                                        "description": "Specifies, when true, that the overridden signature is enforced",
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "description": "The signature name which, along with the signature tag, identifies the signature.",
                                                        "type": "string"
                                                    },
                                                    "signatureId": {
                                                        "description": "The signature ID which identifies the signature.",
                                                        "type": "integer"
                                                    },
                                                    "tag": {
                                                        "description": "The signature tag which, along with the signature name, identifies the signature.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "description": "Determines the type of the **name** attribute.\nOnly when setting the type to wildcard will the special wildcard characters in the name be interpreted as such.",
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "urlNormalization": {
                                            "type": "boolean"
                                        },
                                        "wildcardOrder": {
                                            "description": "Specifies the order index for wildcard header matching.\nWildcard headers with lower wildcard order will get checked for a match prior to headers with higher wildcard order.",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "host-names": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "includeSubdomains": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "idl-files": {
                        "oneOf": [
                            {
                                "items": {
                                    "oneOf": [
                                        {
                                            "required": [
                                                "id"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "id",
                                                "$ref"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "id",
                                                "link"
                                            ]
                                        }
                                    ],
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "$ref": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "contents": {
                                            "type": "string"
                                        },
                                        "fileName": {
                                            "type": "string"
                                        },
                                        "isBase64": {
                                            "type": "boolean"
                                        },
                                        "link": {
                                            "format": "uri",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "ip-intelligence": {
                        "oneOf": [
                            {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "ipIntelligenceCategories": {
                                        "items": {
                                            "properties": {
                                                "alarm": {
                                                    "type": "boolean"
                                                },
                                                "block": {
                                                    "type": "boolean"
                                                },
                                                "category": {
                                                    "enum": [
                                                        "Anonymous Proxy",
                                                        "BotNets",
                                                        "Cloud-based Services",
                                                        "Denial of Service",
                                                        "Infected Sources",
                                                        "Mobile Threats",
                                                        "Phishing Proxies",
                                                        "Scanners",
                                                        "Spam Sources",
                                                        "Tor Proxies",
                                                        "Web Attacks",
                                                        "Windows Exploits"
                                                    ],
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "enum": [
                                                        "The Anonymous Proxy category includes IP addresses that provide proxy and anonymizing services.",
                                                        "The Botnets category includes Botnet C&C channels and an infected zombie machine controlled by a Bot master.",
                                                        "The Cloud-based Services category includes IP addresses and networks that are used by cloud providers.",
                                                        "The Denial of Services category includes DOS, DDOS, anomalous syn flood, and anomalous traffic detection.",
                                                        "The Infected Sources category includes IP addresses currently known to be infected with malware, and IP addresses with an average low Reputation Index score. Enabling this category prevents access from sources identified to contact malware distribution points.",
                                                        "The Mobile Threats category includes IP addresses of malicious and unwanted mobile applications.",
                                                        "The Phishing Proxies category includes IP addresses hosting phishing sites, and other kind of fraud activities such as Ad Click Fraud and Gaming fraud.",
                                                        "The Scanners category includes all reconnaissance, such as probes, host scan, domain scan, and password brute force.",
                                                        "The Spam Sources category includes Tunneling Spam messages through proxy, anomalous SMTP activities, and Forum Spam activities.",
                                                        "The Tor Proxies category includes IP addresses acting as exit nodes for the Tor Network. Exit nodes are the last point along the proxy chain and make a direct connection to the originatorâs intended destination.",
                                                        "The Web Attacks category includes cross site scripting, iFrame injection, SQL injection, cross domain injection, and domain password brute force.",
                                                        "The Windows Exploits category includes active IP address offering or distributing malware, shell code, rootkits, worms, and viruses."
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "category"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "json-profiles": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/json-profiles-items"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "json-validation-files": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/json-validation-files-items"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "login-enforcement": {
                        "oneOf": [
                            {
                                "properties": {
                                    "authenticatedUrls": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "expirationTimePeriod": {
                                        "oneOf": [
                                            {
                                                "maximum": 99999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            {
                                                "enum": [
                                                    "disabled"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "pattern": "\\d+$",
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "logoutUrls": {
                                        "items": {
                                            "properties": {
                                                "requestContains": {
                                                    "type": "string"
                                                },
                                                "requestOmits": {
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "$ref": "#/components/schemas/urls-items"
                                                }
                                            },
                                            "required": [
                                                "url"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "login-pages": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/login-pages-items"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "methods": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "actAsMethod": {
                                            "enum": [
                                                "GET",
                                                "POST"
                                            ],
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "microservices": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "enforcementMode": {
                                            "enum": [
                                                "blocking",
                                                "policy-default",
                                                "transparent"
                                            ],
                                            "type": "string"
                                        },
                                        "evasionOverrides": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "enum": [
                                                            "%u decoding",
                                                            "Apache whitespace",
                                                            "Bad unescape",
                                                            "Bare byte decoding",
                                                            "Directory traversals",
                                                            "IIS Unicode codepoints",
                                                            "IIS backslashes",
                                                            "Multiple decoding",
                                                            "Multiple slashes",
                                                            "Semicolon path parameters",
                                                            "Trailing dot",
                                                            "Trailing slash"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "learn": {
                                                        "type": "boolean"
                                                    },
                                                    "maxDecodingPasses": {
                                                        "maximum": 5,
                                                        "minimum": 2,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "hostName": {
                                            "type": "string"
                                        },
                                        "hostNameType": {
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "httpProtocolOverrides": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "enum": [
                                                            "Bad HTTP version",
                                                            "Bad host header value",
                                                            "Bad multipart parameters parsing",
                                                            "Bad multipart/form-data request parsing",
                                                            "Body in GET or HEAD requests",
                                                            "CRLF characters before request start",
                                                            "Check maximum number of cookies",
                                                            "Check maximum number of headers",
                                                            "Check maximum number of parameters",
                                                            "Chunked request with Content-Length header",
                                                            "Content length should be a positive number",
                                                            "Header name with no header value",
                                                            "High ASCII characters in headers",
                                                            "Host header contains IP address",
                                                            "Multiple host headers",
                                                            "No Host header in HTTP/1.1 request",
                                                            "Null in request",
                                                            "POST request with Content-Length: 0",
                                                            "Several Content-Length headers",
                                                            "Unescaped space in URL",
                                                            "Unparsable request content"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "learn": {
                                                        "type": "boolean"
                                                    },
                                                    "maxCookies": {
                                                        "maximum": 100,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "maxHeaders": {
                                                        "maximum": 150,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "maxParams": {
                                                        "maximum": 5000,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "urlName": {
                                            "type": "string"
                                        },
                                        "urlType": {
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "violationOverrides": {
                                            "items": {
                                                "properties": {
                                                    "alarm": {
                                                        "type": "boolean"
                                                    },
                                                    "block": {
                                                        "type": "boolean"
                                                    },
                                                    "learn": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "wildcardOrder": {
                                            "type": "integer"
                                        },
                                        "wildcardUrlIncludesSlash": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "urlName",
                                        "hostName"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "name": {
                        "description": "The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).",
                        "type": "string"
                    },
                    "navigation-parameters": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "urlName": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "urlName",
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "open-api-files": {
                        "items": {
                            "oneOf": [
                                {
                                    "properties": {
                                        "link": {
                                            "format": "uri",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "link"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "properties": {
                                        "filename": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "filename"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "$ref": "#/components/schemas/reference"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "parameters": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/parameters-items"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "performStaging": {
                        "description": "Determines staging handling for all applicable entities in the policy, such as signatures, URLs, parameters, and cookies. If disabled, all entities will be enforced and any violations triggered will be considered illegal.",
                        "type": "boolean"
                    },
                    "plain-text-profiles": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/plain-text-profiles-items"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder": {
                        "oneOf": [
                            {
                                "properties": {
                                    "autoApply": {
                                        "properties": {
                                            "applyAtAllTimes": {
                                                "type": "boolean"
                                            },
                                            "applyOnAllDays": {
                                                "type": "boolean"
                                            },
                                            "applyOnFridays": {
                                                "type": "boolean"
                                            },
                                            "applyOnMondays": {
                                                "type": "boolean"
                                            },
                                            "applyOnSaturdays": {
                                                "type": "boolean"
                                            },
                                            "applyOnSundays": {
                                                "type": "boolean"
                                            },
                                            "applyOnThursdays": {
                                                "type": "boolean"
                                            },
                                            "applyOnTuesdays": {
                                                "type": "boolean"
                                            },
                                            "applyOnWednesdays": {
                                                "type": "boolean"
                                            },
                                            "endTime": {
                                                "type": "string"
                                            },
                                            "frequency": {
                                                "enum": [
                                                    "never",
                                                    "real-time",
                                                    "scheduled"
                                                ],
                                                "type": "string"
                                            },
                                            "startTime": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "enableFullPolicyInspection": {
                                        "type": "boolean"
                                    },
                                    "enableTrustedTrafficSiteChangeTracking": {
                                        "type": "boolean"
                                    },
                                    "enableUntrustedTrafficSiteChangeTracking": {
                                        "type": "boolean"
                                    },
                                    "fullyAutomatic": {
                                        "type": "boolean"
                                    },
                                    "inactiveEntityInactivityDurationInDays": {
                                        "maximum": 999,
                                        "minimum": 0.0001,
                                        "type": "number"
                                    },
                                    "learnFromResponses": {
                                        "type": "boolean"
                                    },
                                    "learnInactiveEntities": {
                                        "type": "boolean"
                                    },
                                    "learnOnlyFromNonBotTraffic": {
                                        "type": "boolean"
                                    },
                                    "learningMode": {
                                        "enum": [
                                            "automatic",
                                            "disabled",
                                            "manual"
                                        ],
                                        "type": "string"
                                    },
                                    "responseStatusCodes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "trafficTighten": {
                                        "properties": {
                                            "maxModificationSuggestionScore": {
                                                "maximum": 100,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "minDaysBetweenSamples": {
                                                "maximum": 999,
                                                "minimum": 0,
                                                "type": "number"
                                            },
                                            "totalRequests": {
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "trustAllIps": {
                                        "type": "boolean"
                                    },
                                    "trustedTrafficLoosen": {
                                        "properties": {
                                            "differentSources": {
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "maxDaysBetweenSamples": {
                                                "maximum": 999,
                                                "minimum": 0.0001,
                                                "type": "number"
                                            },
                                            "minHoursBetweenSamples": {
                                                "maximum": 9999,
                                                "minimum": 0,
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "trustedTrafficSiteChangeTracking": {
                                        "properties": {
                                            "differentSources": {
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "maxDaysBetweenSamples": {
                                                "maximum": 999,
                                                "minimum": 0.0001,
                                                "type": "number"
                                            },
                                            "minMinutesBetweenSamples": {
                                                "maximum": 99999,
                                                "minimum": 0,
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "untrustedTrafficLoosen": {
                                        "properties": {
                                            "differentSources": {
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "maxDaysBetweenSamples": {
                                                "maximum": 999,
                                                "minimum": 0.0001,
                                                "type": "number"
                                            },
                                            "minHoursBetweenSamples": {
                                                "maximum": 9999,
                                                "minimum": 0,
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "untrustedTrafficSiteChangeTracking": {
                                        "properties": {
                                            "differentSources": {
                                                "maximum": 2147483647,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "maxDaysBetweenSamples": {
                                                "maximum": 999,
                                                "minimum": 0.0001,
                                                "type": "number"
                                            },
                                            "minMinutesBetweenSamples": {
                                                "maximum": 99999,
                                                "minimum": 0,
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-central-configuration": {
                        "oneOf": [
                            {
                                "description": "Defines Policy Builder learning location and related configuration.",
                                "properties": {
                                    "buildingMode": {
                                        "description": "Specifies learning location.\n\n- **central**: Security policy learning is done centrally and managed via a BIG-IQ system. Centralized learning can be enabled from BIG-IQ only and, when enabled, all interim local policy learning will be lost. When learning is centralized, you cannot make local changes on your BIG-IP that will affect the security policy learning.\n- **local**: Security policy learning is done locally and managed on BIG-IP",
                                        "enum": [
                                            "central",
                                            "local"
                                        ],
                                        "type": "string"
                                    },
                                    "centralPbAddresses": {
                                        "description": "Specifies list of BIG-IQ machines that local Policy Builder is sending data to.",
                                        "items": {
                                            "properties": {
                                                "hostName": {
                                                    "description": "Host name of BIG-IQ machine.",
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "description": "IP address of BIG-IQ machine.",
                                                    "type": "string"
                                                },
                                                "order": {
                                                    "description": "Order or BIG-IQ machine in the list.",
                                                    "type": "integer"
                                                },
                                                "port": {
                                                    "description": "Port that BIG-IQ machine is listening to.",
                                                    "maximum": 65535,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "verifyCertificate": {
                                                    "description": "If enabled - certificate should be verified when connecting to BIG-IQ machine",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "port",
                                                "ipAddress"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "eventCorrelationMode": {
                                        "description": "Specifies event correlation location.\n\n- **central**: Event correlation is done centrally and stored in a BIG-IQ system.\n- **local**: Event correlation is done locally and stored on BIG-IP.",
                                        "enum": [
                                            "central",
                                            "local"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-cookie": {
                        "oneOf": [
                            {
                                "properties": {
                                    "collapseCookieOccurrences": {
                                        "minimum": 2,
                                        "type": "integer"
                                    },
                                    "collapseCookiesIntoOneEntity": {
                                        "type": "boolean"
                                    },
                                    "enforceUnmodifiedCookies": {
                                        "type": "boolean"
                                    },
                                    "learnExplicitCookies": {
                                        "enum": [
                                            "never",
                                            "selective"
                                        ],
                                        "type": "string"
                                    },
                                    "maximumCookies": {
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-filetype": {
                        "oneOf": [
                            {
                                "description": "Defines Policy Builder behavior for filetypes",
                                "properties": {
                                    "learnExplicitFiletypes": {
                                        "description": "Specifies under which circumstances the Policy Builder adds, or suggests you add, explicit file types to the security policy:\n\n- **compact**: Specifies that the system will create a list of the most commonly used file types (while enforcing all other file types with a wildcard rule), together with a pre-populated list of known disallowed file types. This option serves as a good balance between **selective** and **always**\n- **selective**: Specifies that when false positives occur (applicable only for the * wildcard), the system will add/suggest to add an explicit file type with relaxed settings that avoid the false positive. This option serves as a good balance between security, policy size, and ease of maintenance\n- **always**: Specifies you would like to create a comprehensive whitelist policy that includes ALL of the website file types. This option will form a large set of security policy entities, which will produce a granular object-level configuration and high security level, it may take more time to maintain such a policy\n- **never**: Specifies that when false positives occur the system will suggest to relax the settings of the wildcard file type",
                                        "enum": [
                                            "always",
                                            "compact",
                                            "never",
                                            "selective"
                                        ],
                                        "type": "string"
                                    },
                                    "maximumFileTypes": {
                                        "description": "Specifies approximately the largest number of file types that Policy Builder will learn",
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-header": {
                        "oneOf": [
                            {
                                "properties": {
                                    "maximumHosts": {
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "validHostNames": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-parameter": {
                        "oneOf": [
                            {
                                "description": "Defines Policy Builder behavior for parameters",
                                "properties": {
                                    "classifyParameters": {
                                        "description": "When enabled, if the Policy Builder detects legitimate XML or JSON data to parameters configured in the security policy, the Policy Builder adds XML or JSON profiles to the security policy and configures their attributes according to the data it detects",
                                        "type": "boolean"
                                    },
                                    "collapseParameterOccurrences": {
                                        "description": "Defines how many common explicit parameters the Policy Builder must detect (the number of occurrences) before collapsing them to one wildcard parameter.\nThe minimum number of occurrences allowed is 2.",
                                        "minimum": 2,
                                        "type": "integer"
                                    },
                                    "collapseParametersIntoOneEntity": {
                                        "description": "When enabled, the system collapses many common parameters into one wildcard parameter.",
                                        "type": "boolean"
                                    },
                                    "dynamicParameters": {
                                        "description": "Defines the conditions under which the Policy Builder adds dynamic parameters to the security policy\nTo enabled this functionality there are several prerequisites:\n  - learnExplicitParameters is **always** or **selective**\n  - learnExplicitUrls in policy-builder-url and/or learnExplicitFiletypes in policy-builder-filetype is **always** or **selective**\n  - learnFromResponses is enabled in policy-builder\n  - at least one of the allHiddenFields/formParameters/linkParameters is enabled",
                                        "properties": {
                                            "allHiddenFields": {
                                                "description": "When enabled, the Policy Builder adds to the security policy all HIDDEN form input parameters, seen in responses, as dynamic content value parameters",
                                                "type": "boolean"
                                            },
                                            "formParameters": {
                                                "description": "When enabled, the Policy Builder adds parameters, found in forms, to the security policy as dynamic content value if a number of unique value sets are seen in responses for that parameter.\nUse uniqueValueSets to specify how many different value sets must be seen for that parameter in order for the Policy Builder to consider it dynamic content value.\nA value set is an aggregation of server-supplied value(s) of the parameter as seen in the web form, for example, all the values of a radio button or select boxes taken together are a value set.",
                                                "type": "boolean"
                                            },
                                            "linkParameters": {
                                                "description": "When enabled, the Policy Builder adds parameters, found in links, to the security policy as dynamic content value if a number of unique values are seen in responses for that parameter.\nUse the uniqueValueSets to specify how many different values must be seen for that parameter in order for the Policy Builder to consider it dynamic content value.",
                                                "type": "boolean"
                                            },
                                            "uniqueValueSets": {
                                                "description": "Specifies how many different values must be seen for that parameter in order for the Policy Builder to consider it dynamic content value",
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "learnExplicitParameters": {
                                        "description": "Specifies under which circumstances the Policy Builder adds, or suggests you add, explicit parameters to the security policy:\n\n- **compact**: Specifies that the system will create a list of the most commonly used parameters, while enforcing all other parameters with a wildcard rule. This option serves as a good balance between **selective** and **always**\n- **selective**: Specifies that when false positives occur (applicable only for the * wildcard), the system will add/suggest to add an explicit parameter with relaxed settings that avoid the false positive. This option serves as a good balance between security, policy size, and ease of maintenance\n- **always**: Specifies you would like to create a comprehensive whitelist policy that includes ALL of the website parameters. This option will form a large set of security policy entities, which will produce a granular object-level configuration and high security level, it may take more time to maintain such a policy\n- **never**: Specifies that when false positives occur the system will suggest to relax the settings of the wildcard parameter",
                                        "enum": [
                                            "always",
                                            "compact",
                                            "never",
                                            "selective"
                                        ],
                                        "type": "string"
                                    },
                                    "maximumParameters": {
                                        "description": "Specifies approximately the largest number of parameters that Policy Builder will learn",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "parameterLearningLevel": {
                                        "description": "Defines how the Policy Builder determines on which level to add, or suggest you add, parameters to the security policy\n\n- **global**: The system creates learning suggestions based on the properties of entities that already exist in the security policy.\n              When manually learning a suggestion for a parameter violation, the resolve action suggested by the system is based on the parameter name and level of the parameter in the security policy that caused this violation.\n              When automatically building the security policy, the Policy Builder adds parameters on the Global level.\n- **url**: The system creates learning suggestions based on real traffic, and is not limited to the current properties of entities that exist in the security policy.\n           When manually learning a suggestion for a parameter violation, the resolve action suggested by the system is based on the actual parameter name and the URL or flow on which the violation was detected.\n           When automatically building the security policy, the Policy Builder adds parameters on the URL level.\n           In addition, if the actual URL does not exist in the security policy, the system adds the URL and file type (if it also does not exist) on which the violation was detected.",
                                        "enum": [
                                            "global",
                                            "url"
                                        ],
                                        "type": "string"
                                    },
                                    "parametersIntegerValue": {
                                        "description": "When enabled, the Policy Builder learns integer parameters (parameters with a Data Type of Integer).",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-redirection-protection": {
                        "oneOf": [
                            {
                                "properties": {
                                    "learnExplicitRedirectionDomains": {
                                        "enum": [
                                            "always",
                                            "never"
                                        ],
                                        "type": "string"
                                    },
                                    "maximumRedirectionDomains": {
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-server-technologies": {
                        "oneOf": [
                            {
                                "description": "Defines Policy Builder behavior for Server Technologies",
                                "properties": {
                                    "enableServerTechnologiesDetection": {
                                        "description": "When enabled, the Policy Builder suggests to add Server Technologies that have not yet been added to the policy.\nThe system learns server technologies from responses regardless of the learnFromResponses flag setting in the policy-builder endpoint.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-sessions-and-logins": {
                        "oneOf": [
                            {
                                "properties": {
                                    "learnLoginPage": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "policy-builder-url": {
                        "oneOf": [
                            {
                                "properties": {
                                    "classifyUrls": {
                                        "type": "boolean"
                                    },
                                    "classifyWebsocketUrls": {
                                        "type": "boolean"
                                    },
                                    "collapseUrlDepth": {
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "collapseUrlOccurrences": {
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "collapseUrlsIntoOneEntity": {
                                        "type": "boolean"
                                    },
                                    "learnExplicitUrls": {
                                        "enum": [
                                            "always",
                                            "compact",
                                            "never",
                                            "selective"
                                        ],
                                        "type": "string"
                                    },
                                    "learnExplicitWebsocketUrls": {
                                        "enum": [
                                            "always",
                                            "never",
                                            "selective"
                                        ],
                                        "type": "string"
                                    },
                                    "learnMethodsOnUrls": {
                                        "type": "boolean"
                                    },
                                    "maximumUrls": {
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "maximumWebsocketUrls": {
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "wildcardUrlFiletypes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "protocolIndependent": {
                        "description": "When creating a security policy, you can determine whether a security policy differentiates between HTTP and HTTPS URLs.\nIf enabled, the security policy differentiates between HTTP and HTTPS URLs.\nIf disabled, the security policy configures URLs without specifying a specific protocol. This is useful for applications that behave the same for HTTP and HTTPS, and it keeps the security policy from including the same URL twice.",
                        "type": "boolean"
                    },
                    "redirection-protection": {
                        "oneOf": [
                            {
                                "properties": {
                                    "redirectionDomains": {
                                        "items": {
                                            "properties": {
                                                "domainName": {
                                                    "type": "string"
                                                },
                                                "includeSubdomains": {
                                                    "type": "boolean"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "explicit",
                                                        "wildcard"
                                                    ],
                                                    "type": "string"
                                                },
                                                "wildcardOrder": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "domainName"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "redirectionProtectionEnabled": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "redirection-protection-domains": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "domainName": {
                                            "type": "string"
                                        },
                                        "includeSubdomains": {
                                            "type": "boolean"
                                        },
                                        "type": {
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "wildcardOrder": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "domainName"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "request-loggers": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "destination": {
                                            "type": "string"
                                        },
                                        "escapingCharacters": {
                                            "items": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string"
                                                    },
                                                    "to": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "from"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "filter": {
                                            "items": {
                                                "properties": {
                                                    "field": {
                                                        "enum": [
                                                            "request_status"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "values": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "field"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "formatString": {
                                            "type": "string"
                                        },
                                        "formatType": {
                                            "enum": [
                                                "arcsight",
                                                "bigiq",
                                                "default",
                                                "grpc",
                                                "splunk"
                                            ],
                                            "type": "string"
                                        },
                                        "maxEventsPerSecond": {
                                            "type": "integer"
                                        },
                                        "maxMessageSize": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "protocol": {
                                            "enum": [
                                                "otlp",
                                                "tcp",
                                                "udp"
                                            ],
                                            "type": "string"
                                        },
                                        "timezone": {
                                            "enum": [
                                                "local",
                                                "utc"
                                            ],
                                            "type": "string"
                                        },
                                        "tls": {
                                            "properties": {
                                                "caFile": {
                                                    "type": "string"
                                                },
                                                "certFile": {
                                                    "type": "string"
                                                },
                                                "keyFile": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "response-pages": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "The Security Policy has a default blocking response page that it returns to the client when the client request, or the web server response, is blocked by the security policy. The system also has a login response page for login violations. You can change the way the system responds to blocked logins or blocked requests. All default response pages contain a variable, <%TS.request.ID()%>, that the system replaces with a support ID number when it issues the page.",
                                    "properties": {
                                        "ajaxActionType": {
                                            "description": "Which content, or URL, the system sends to the client as a response to an AJAX request that does not comply with the security policy.\n- **alert-popup**: The system opens a message as a popup screen. Type the message the system displays in the popup screen, or leave the default text.\n- **custom**: A response text that will replace the frame or page which generated the AJAX request. The system provides additional options where you can type the response body you prefer.\n- **redirect**: The system redirects the user to a specific web page instead of viewing a response page. Type the web page's full URL path, for example, http://www.redirectpage.com. ",
                                            "enum": [
                                                "alert-popup",
                                                "custom",
                                                "redirect"
                                            ],
                                            "type": "string"
                                        },
                                        "ajaxCustomContent": {
                                            "description": "Custom message typed by user as a response for blocked AJAX request.",
                                            "type": "string"
                                        },
                                        "ajaxEnabled": {
                                            "description": "When enabled, the system injects JavaScript code into responses. You must enable this toggle in order to configure an Application Security Manager AJAX response page which is returned when the system detects an AJAX request that does not comply with the security policy.",
                                            "type": "boolean"
                                        },
                                        "ajaxPopupMessage": {
                                            "description": "Default message provided by the system as a response for blocked AJAX request. Can be manipulated by user, but <%TS.request.ID()%> must be included in this message.",
                                            "type": "string"
                                        },
                                        "ajaxRedirectUrl": {
                                            "description": "The system redirects the user to a specific web page instead of viewing a response page. Type the web page's full URL path, for example, http://www.redirectpage.com. To redirect the blocking page to a URL with a support ID in the query string, type the URL and the support ID in the following format: http://www.example.com/blocking_page.php?support_id=<%TS.request.ID()%>. The system replaces <%TS.request.ID%> with the relevant support ID so that the blocked request is redirected to the URL with the relevant support ID.",
                                            "type": "string"
                                        },
                                        "grpcStatusCode": {
                                            "oneOf": [
                                                {
                                                    "type": "integer"
                                                },
                                                {
                                                    "enum": [
                                                        "ABORTED",
                                                        "ALREADY_EXISTS",
                                                        "CANCELLED",
                                                        "DATA_LOSS",
                                                        "DEADLINE_EXCEEDED",
                                                        "FAILED_PRECONDITION",
                                                        "INTERNAL",
                                                        "INVALID_ARGUMENT",
                                                        "NOT_FOUND",
                                                        "OK",
                                                        "OUT_OF_RANGE",
                                                        "PERMISSION_DENIED",
                                                        "RESOURCE_EXHAUSTED",
                                                        "UNAUTHENTICATED",
                                                        "UNAVAILABLE",
                                                        "UNIMPLEMENTED",
                                                        "UNKNOWN"
                                                    ],
                                                    "type": "string"
                                                },
                                                {
                                                    "pattern": "\\d+$",
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "grpcStatusMessage": {
                                            "type": "string"
                                        },
                                        "responseActionType": {
                                            "description": "Which action the system takes, and which content the system sends to the client, as a response when the security policy blocks the client request.\n- **custom**: The system returns a response page with HTML code that the user defines.\n- **default**: The system returns the system-supplied response page in HTML. No further configuration is needed.\n- **erase-cookies**:  The system deletes all client side domain cookies. This is done in order to block web application users once, and not from the entire web application. The system displays this text in the response page. You cannot edit this text.\n- **redirect**: The system redirects the user to a specific web page instead of viewing a response page. The system provides an additional setting where you can indicate the redirect web page.\n- **soap-fault**:  Displays the system-supplied response written in SOAP fault message structure. Use this type when a SOAP request is blocked due to an XML related violation. You cannot edit this text.",
                                            "enum": [
                                                "custom",
                                                "default",
                                                "erase-cookies",
                                                "redirect",
                                                "soap-fault"
                                            ],
                                            "type": "string"
                                        },
                                        "responseContent": {
                                            "description": "The content the system sends to the client in response to an illegal blocked request.",
                                            "type": "string"
                                        },
                                        "responseHeader": {
                                            "description": "The response headers that the system sends to the client as a response to an illegal blocked request.",
                                            "type": "string"
                                        },
                                        "responsePageType": {
                                            "description": "The different types of blocking response pages which are available from the system:\n- **ajax**: The system sends the AJAX Blocking Response Page when the security policy blocks an AJAX request that does not comply with the security policy.\n- **ajax-login**: The system sends the AJAX Login Page Response after the user sends an AJAX request that attempts to directly access a URL that is allowed to be accessed only after visiting a login page.\n- **captcha**: The system sends the CAPTCHA response page when the system suspects that a session is being run by a bot rather than a human, especially in the case of a brute force attack.\n- **captcha-fail**: The system sends the CAPTCHA fail response page to a failed CAPTCHA challenge.\n- **default**: The system sends the default response when the security policy blocks a client request.\n- **failed-login-honeypot**: The Honeypot page is used for attacker deception. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation.\n- **failed-login-honeypot-ajax**: The Honeypot page is used for attacker deception sending AJAX request. The page should look like an application failed login page. Unlike with the Blocking page, when the Honeypot page is sent an attacker is not able to distinguish a failed login response from a mitigation.\n- **hijack**: The system sends the cookie hijacking response page when the system detects that an attacker tried to hijack the session.\n- **leaked-credentials**: The system sends the leaked credentials response when the system detects the use of stolen credentials.\n- **leaked-credentials-ajax**: The system sends the leaked credentials response following an AJAX request which includes usage of stolen credentials.\n- **mobile**: The system sends the mobile application response page when the system detects that a session is being run by a bot rather than a human.\n- **persistent-flow**: The system sends the login page response after the user violates one of the preconditions when requesting the target URL of a configured login page.\n- **xml**: The system sends the XML response page when the security policy blocks a client request that contains XML content that does not comply with the settings of an XML profile configured in the security policy.",
                                            "enum": [
                                                "ajax",
                                                "ajax-login",
                                                "captcha",
                                                "captcha-fail",
                                                "default",
                                                "failed-login-honeypot",
                                                "failed-login-honeypot-ajax",
                                                "graphql",
                                                "grpc",
                                                "hijack",
                                                "leaked-credentials",
                                                "leaked-credentials-ajax",
                                                "mobile",
                                                "persistent-flow",
                                                "xml"
                                            ],
                                            "type": "string"
                                        },
                                        "responseRedirectUrl": {
                                            "description": "The particular URL to which the system redirects the user. To redirect the blocking page to a URL with a support ID in the query string, type the URL and the support ID in the following format: http://www.example.com/blocking_page.php?support_id=<%TS.request.ID()%>. The system replaces <%TS.request.ID%> with the relevant support ID so that the blocked request is redirected to the URL with the relevant support ID.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "responsePageType"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "sensitive-parameters": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "This section defines sensitive parameters.\nThe contents of these parameters are not visible in logs nor in the user interfaces.\nInstead of actual values a string of asterisks is shown for these parameters.\nUse these parameters to protect sensitive user input, such as a password or a credit card number, in a validated request.\nA parameter name of \"password\" is always defined as sensitive by default.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of a parameter whose values the system should consider sensitive.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "server-technologies": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "The server technology is a server-side application, framework, web server or operating system type that is configured in the policy in order to adapt the policy to the checks needed for the respective technology.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "serverTechnologyName": {
                                            "description": "Specifies the name of the selected policy. For example, PHP will add attack signatures that cover known PHP vulnerabilities.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "session-tracking": {
                        "oneOf": [
                            {
                                "properties": {
                                    "blockAll": {
                                        "properties": {
                                            "checkDeviceIdThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkIpThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkPeriod": {
                                                "type": "boolean"
                                            },
                                            "checkSessionThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkUsernameThreshold": {
                                                "type": "boolean"
                                            },
                                            "deviceIdThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ipThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "period": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "sessionThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "urlBlockingMode": {
                                                "enum": [
                                                    "block-all-urls",
                                                    "block-authenticated-urls"
                                                ],
                                                "type": "string"
                                            },
                                            "usernameThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "delayBlocking": {
                                        "properties": {
                                            "checkDeviceIdThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkIpThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkSessionThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkUsernameThreshold": {
                                                "type": "boolean"
                                            },
                                            "deviceIdThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ipThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "period": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "sessionThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "usernameThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "violations": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "logAllRequests": {
                                        "properties": {
                                            "checkDeviceIdThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkIpThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkSessionThreshold": {
                                                "type": "boolean"
                                            },
                                            "checkUsernameThreshold": {
                                                "type": "boolean"
                                            },
                                            "deviceIdThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "ipThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "period": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "sessionThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "usernameThreshold": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "sessionTrackingConfiguration": {
                                        "properties": {
                                            "detectUsernameFromLoginPages": {
                                                "items": {
                                                    "properties": {
                                                        "loginPage": {
                                                            "$ref": "#/components/schemas/login-pages-items"
                                                        }
                                                    },
                                                    "required": [
                                                        "loginPage"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "enableSessionAwareness": {
                                                "type": "boolean"
                                            },
                                            "enableTrackingSessionHijackingByDeviceId": {
                                                "type": "boolean"
                                            },
                                            "userNameSource": {
                                                "enum": [
                                                    "all-login-pages",
                                                    "apm",
                                                    "login-pages",
                                                    "none"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "violationDetectionActions": {
                                        "properties": {
                                            "trackViolationsAndPerformActions": {
                                                "type": "boolean"
                                            },
                                            "violationDetectionPeriod": {
                                                "maximum": 999999999,
                                                "minimum": 0,
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "session-tracking-statuses": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "action": {
                                            "enum": [
                                                "block-all",
                                                "delay-blocking",
                                                "log-all"
                                            ],
                                            "type": "string"
                                        },
                                        "createdDatetime": {
                                            "type": "string"
                                        },
                                        "expirationDatetime": {
                                            "enum": [
                                                "N/A"
                                            ],
                                            "type": "string"
                                        },
                                        "scope": {
                                            "enum": [
                                                "device",
                                                "ip",
                                                "session",
                                                "user"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "value",
                                        "scope",
                                        "action"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "signature-requirements": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "maxRevisionDatetime": {
                                            "type": "string"
                                        },
                                        "minRevisionDatetime": {
                                            "type": "string"
                                        },
                                        "tag": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "tag"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "signature-sets": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "Defines behavior when signatures found within a signature-set are detected in a request. Settings are culmulative, so if a signature is found in any set with block enabled, that signature will have block enabled.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "alarm": {
                                            "description": "If enabled - when a signature from this signature set is detected in a request - the request is logged.",
                                            "type": "boolean"
                                        },
                                        "block": {
                                            "description": "If enabled - when a signature from this signature set is detected in a request (and the signature is not in staging and the policy is in blocking mode) - the request is blocked.",
                                            "type": "boolean"
                                        },
                                        "learn": {
                                            "description": "If enabled - when a signature from this signature set is detected in a request -the policy builder creates a learning suggestion to disable it.",
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "Signature set name.",
                                            "type": "string"
                                        },
                                        "signatureSet": {
                                            "$ref": "#/components/schemas/signatureSet"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "signature-settings": {
                        "oneOf": [
                            {
                                "properties": {
                                    "attackSignatureFalsePositiveMode": {
                                        "enum": [
                                            "detect",
                                            "detect-and-allow",
                                            "disabled"
                                        ],
                                        "type": "string"
                                    },
                                    "minimumAccuracyForAutoAddedSignatures": {
                                        "enum": [
                                            "high",
                                            "low",
                                            "medium"
                                        ],
                                        "type": "string"
                                    },
                                    "placeSignaturesInStaging": {
                                        "type": "boolean"
                                    },
                                    "signatureStaging": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "signatures": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "This section defines the properties of a signature on the policy.",
                                    "properties": {
                                        "alarm": {
                                            "type": "boolean"
                                        },
                                        "block": {
                                            "type": "boolean"
                                        },
                                        "enabled": {
                                            "description": "Specifies, if true, that the signature is enabled on the security policy. When false, the signature is disable on the security policy.",
                                            "type": "boolean"
                                        },
                                        "inPolicy": {
                                            "enum": [
                                                "0",
                                                "1"
                                            ],
                                            "type": "string"
                                        },
                                        "isPriorRuleEnforced": {
                                            "type": "boolean"
                                        },
                                        "learn": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "The signature name which, along with the signature tag, identifies the signature.",
                                            "type": "string"
                                        },
                                        "performStaging": {
                                            "description": "Specifies, if true, that the signature is in staging.\nThe system does not enforce signatures in staging. Instead, the system records the request information and keeps it for a period of time\n(the Enforcement Readiness Period whose default time period is 7 days).\nSpecifies, when false, that the staging feature is not in use, and that the system enforces the signatures' Learn/Alarm/Block settings immediately.\n(Blocking is performed only if the security policy's enforcement mode is Blocking.)",
                                            "type": "boolean"
                                        },
                                        "signatureId": {
                                            "description": "The signature ID which identifies the signature.",
                                            "type": "string"
                                        },
                                        "tag": {
                                            "description": "The signature tag which, along with the signature name, identifies the signature.       ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "softwareVersion": {
                        "type": "string"
                    },
                    "ssrf-hosts": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "action": {
                                            "enum": [
                                                "allow",
                                                "disallow",
                                                "resolve"
                                            ],
                                            "type": "string"
                                        },
                                        "host": {
                                            "type": "string"
                                        },
                                        "wildcardOrder": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "host"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "template": {
                        "description": "Specifies the template to populate the attributes of a new policy. The template is only used when creating the policy - a security policy is always created based on a user-defined or system-supplied template.\nUnlike parent policies, the templates do not affect the policy after it is created. If you modify a template, policies created from it in the past are not affected.",
                        "properties": {
                            "name": {
                                "description": "Specifies the name of the template used for the policy creation.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "threat-campaign-settings": {
                        "oneOf": [
                            {
                                "properties": {
                                    "threatCampaignEnforcementReadinessPeriod": {
                                        "maximum": 999,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "threatCampaignStaging": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "threat-campaigns": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "This section defines the enforcement state for the threat campaigns in the security policy.",
                                    "properties": {
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "isEnabled": {
                                            "description": "If enabled - threat campaign is enforced in the security policy.",
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "Name of the threat campaign.",
                                            "type": "string"
                                        },
                                        "performStaging": {
                                            "description": "If enabled - there will be only reporting (no blocking) for requests with a detected treat campaign.\nFor this feature to work, threatCampaignStaging should be enabled in threat-campaign-settings.\nAfter staging period (threatCampaignEnforcementReadinessPeriod in threat-campaign-settings), the system will suggest to enforce (disable staging) for the threat campaign.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "type": {
                        "description": "The type of policy you want to create. The default policy type is Security.\n- **Parent:** A parent policy can be used as a basis for similar child policies. Parent policy settings can be inherited to its child policies. A parent policy cannot be applied to Virtual Servers. No traffic can flow through them. They are just models.\n- **Security:** A security policy can be created from a parent policy or as a stand-alone policy. Changes to a security policy do not affect other security policies. A security policy can be applied to a virtual server.",
                        "enum": [
                            "parent",
                            "security"
                        ],
                        "type": "string"
                    },
                    "urls": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/urls-items"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "webhooks": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "body": {
                                            "type": "string"
                                        },
                                        "contentType": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "triggerEvent": {
                                            "enum": [
                                                "apply-policy",
                                                "apply-policy-failed",
                                                "http-request-illegal",
                                                "http-request-likely-malicious",
                                                "http-request-needing-examination",
                                                "incident-end",
                                                "incident-start"
                                            ],
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "websocket-urls": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "allowBinaryMessage": {
                                            "type": "boolean"
                                        },
                                        "allowJsonMessage": {
                                            "type": "boolean"
                                        },
                                        "allowTextMessage": {
                                            "type": "boolean"
                                        },
                                        "binaryMessageMaxSize": {
                                            "type": "integer"
                                        },
                                        "checkBinaryMessageMaxSize": {
                                            "type": "boolean"
                                        },
                                        "checkMessageFrameMaxCount": {
                                            "type": "boolean"
                                        },
                                        "checkMessageFrameMaxSize": {
                                            "type": "boolean"
                                        },
                                        "checkPayload": {
                                            "type": "boolean"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "html5CrossOriginRequestsEnforcement": {
                                            "properties": {
                                                "crossDomainAllowedOrigin": {
                                                    "items": {
                                                        "properties": {
                                                            "includeSubDomains": {
                                                                "type": "boolean"
                                                            },
                                                            "originName": {
                                                                "type": "string"
                                                            },
                                                            "originPort": {
                                                                "oneOf": [
                                                                    {
                                                                        "maximum": 65535,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "enum": [
                                                                            "all"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "pattern": "\\d+$",
                                                                        "type": "string"
                                                                    }
                                                                ]
                                                            },
                                                            "originProtocol": {
                                                                "enum": [
                                                                    "http",
                                                                    "http/https",
                                                                    "https"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "originProtocol",
                                                            "originName",
                                                            "originPort"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "enforcementMode": {
                                                    "enum": [
                                                        "disabled",
                                                        "enforce",
                                                        "remove-all-headers"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "isAllowed": {
                                            "type": "boolean"
                                        },
                                        "jsonProfile": {
                                            "$ref": "#/components/schemas/json-profiles-items"
                                        },
                                        "messageFrameMaxCount": {
                                            "type": "integer"
                                        },
                                        "messageFrameMaxSize": {
                                            "type": "integer"
                                        },
                                        "metacharOverrides": {
                                            "items": {
                                                "properties": {
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "metachar": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "metachar"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "metacharsOnWebsocketUrlCheck": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performStaging": {
                                            "type": "boolean"
                                        },
                                        "plainTextProfile": {
                                            "$ref": "#/components/schemas/plain-text-profiles-items"
                                        },
                                        "protocol": {
                                            "enum": [
                                                "ws",
                                                "wss"
                                            ],
                                            "type": "string"
                                        },
                                        "type": {
                                            "enum": [
                                                "explicit",
                                                "wildcard"
                                            ],
                                            "type": "string"
                                        },
                                        "unsupportedExtensions": {
                                            "enum": [
                                                "block",
                                                "ignore",
                                                "remove"
                                            ],
                                            "type": "string"
                                        },
                                        "wildcardIncludesSlash": {
                                            "type": "boolean"
                                        },
                                        "wildcardOrder": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "whitelist-ips": {
                        "oneOf": [
                            {
                                "items": {
                                    "description": "An IP address exception is an IP address that you want the system to treat in a specific way for a security policy.\nFor example, you can specify IP addresses from which the system should always trust traffic, IP addresses for which you do not want the system to generate learning suggestions for the traffic, and IP addresses for which you want to exclude information from the logs.\nYou can use the IP address exception feature to create exceptions for IP addresses of internal tools that your company uses, such as penetration tools, manual or automatic scanners, or web scraping tools.\nYou can add an IP address exception and instruct the system how to handle traffic coming from that address.",
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "blockRequests": {
                                            "description": "Specifies how the system responds to blocking requests sent from this IP address.\n- **Policy Default:** Specifies that the Policy Blocking Settings will be used for requests from this IP address.\n- **Never Block:** Specifies that the system does not block requests sent from this IP address, even if your security policy is configured to block all traffic.\n- **Always Block:** Specifies that the system blocks requests sent from this IP address on condition that IP is denylisted is set to Block under Policy Building Settings.",
                                            "enum": [
                                                "always",
                                                "never",
                                                "policy-default"
                                            ],
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Specifies a brief description of the IP address.",
                                            "type": "string"
                                        },
                                        "ignoreAnomalies": {
                                            "description": "Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.\nSpecifies when disabled that the system does not consider traffic from this IP address as being any safer than traffic from any other IP address. The system performs brute force prevention to traffic from this IP address according to the configuration of the security policy.",
                                            "type": "boolean"
                                        },
                                        "ignoreIpReputation": {
                                            "description": "Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).\nSpecifies when disabled that the system does not consider traffic from this IP address as being any safer than traffic from any other IP address. Therefore, if the IP Intelligence feature is enabled, the system checks whether this IP address matches any IP addresses in the IP Intelligence database.",
                                            "type": "boolean"
                                        },
                                        "ipAddress": {
                                            "description": "Specifies the IP address that you want the system to trust.",
                                            "type": "string"
                                        },
                                        "ipMask": {
                                            "description": "Specifies the netmask of the exceptional IP address. This is an optional field.",
                                            "type": "string"
                                        },
                                        "neverLearnRequests": {
                                            "description": "Specifies when enabled that the system should not generate learning suggestions from traffic sent from this IP address.\nSpecifies when disabled that the system should generate learning suggestions from traffic sent from this IP address for violations with the Learn flag enabled on the Policy Building Settings.",
                                            "type": "boolean"
                                        },
                                        "neverLogRequests": {
                                            "description": "Specifies when enabled that the system does not log requests or responses sent from this IP address, even if the traffic is illegal, and even if your security policy is configured to log all traffic.",
                                            "type": "boolean"
                                        },
                                        "trustedByPolicyBuilder": {
                                            "description": "Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.\nThe Policy Builder automatically adds to the security policy the data logged from traffic sent from this IP address.\nSpecifies when disabled that the Policy Builder does not consider traffic from this IP address as being any different than traffic from any other IP address.",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "ipMask",
                                        "ipAddress"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "xml-profiles": {
                        "oneOf": [
                            {
                                "items": {
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "attachmentsInSoapMessages": {
                                            "type": "boolean"
                                        },
                                        "attackSignaturesCheck": {
                                            "type": "boolean"
                                        },
                                        "defenseAttributes": {
                                            "properties": {
                                                "allowCDATA": {
                                                    "type": "boolean"
                                                },
                                                "allowDTDs": {
                                                    "type": "boolean"
                                                },
                                                "allowExternalReferences": {
                                                    "type": "boolean"
                                                },
                                                "allowProcessingInstructions": {
                                                    "type": "boolean"
                                                },
                                                "maximumAttributeValueLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumAttributesPerElement": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumChildrenPerElement": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumDocumentDepth": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumDocumentSize": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumElements": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumNSDeclarations": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumNameLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "maximumNamespaceLength": {
                                                    "oneOf": [
                                                        {
                                                            "maximum": 2147483647,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "enum": [
                                                                "any"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        {
                                                            "pattern": "\\d+$",
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "tolerateCloseTagShorthand": {
                                                    "type": "boolean"
                                                },
                                                "tolerateLeadingWhiteSpace": {
                                                    "type": "boolean"
                                                },
                                                "tolerateNumericNames": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "enableWss": {
                                            "type": "boolean"
                                        },
                                        "followSchemaLinks": {
                                            "type": "boolean"
                                        },
                                        "inspectSoapAttachments": {
                                            "type": "boolean"
                                        },
                                        "metacharAttributeCheck": {
                                            "type": "boolean"
                                        },
                                        "metacharElementCheck": {
                                            "type": "boolean"
                                        },
                                        "metacharOverrides": {
                                            "items": {
                                                "properties": {
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "metachar": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "metachar"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "sensitiveData": {
                                            "items": {
                                                "properties": {
                                                    "namespace": {
                                                        "type": "string"
                                                    },
                                                    "paramName": {
                                                        "type": "string"
                                                    },
                                                    "paramType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "paramType",
                                                    "namespace",
                                                    "paramName"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "signatureOverrides": {
                                            "items": {
                                                "properties": {
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "signatureId": {
                                                        "type": "integer"
                                                    },
                                                    "tag": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "soapMethods": {
                                            "items": {
                                                "properties": {
                                                    "action": {
                                                        "type": "string"
                                                    },
                                                    "isAllowed": {
                                                        "type": "boolean"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "namespace",
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "useXmlResponsePage": {
                                            "type": "boolean"
                                        },
                                        "validationFiles": {
                                            "items": {
                                                "properties": {
                                                    "importUrl": {
                                                        "type": "string"
                                                    },
                                                    "isPrimary": {
                                                        "type": "boolean"
                                                    },
                                                    "xmlValidationFile": {
                                                        "$ref": "#/components/schemas/policy/properties/xml-validation-files/oneOf/0/items"
                                                    }
                                                },
                                                "required": [
                                                    "xmlValidationFile"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "validationSoapActionHeader": {
                                            "type": "boolean"
                                        },
                                        "wssConfiguration": {
                                            "properties": {
                                                "addTimestamp": {
                                                    "type": "boolean"
                                                },
                                                "applyActionToDefinedRequestElements": {
                                                    "type": "boolean"
                                                },
                                                "applyActionToDefinedResponseElements": {
                                                    "type": "boolean"
                                                },
                                                "applyActionToEntireResponseBodyValue": {
                                                    "type": "boolean"
                                                },
                                                "clientCertificates": {
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "decryptAll": {
                                                    "type": "boolean"
                                                },
                                                "elements": {
                                                    "items": {
                                                        "properties": {
                                                            "applyTo": {
                                                                "enum": [
                                                                    "request",
                                                                    "response"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "encryptedPart": {
                                                                "enum": [
                                                                    "content",
                                                                    "element"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "xPathName": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "xPathName",
                                                            "applyTo"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "enableRequestRole": {
                                                    "type": "boolean"
                                                },
                                                "enableResponseRole": {
                                                    "type": "boolean"
                                                },
                                                "encryptionAlgorithm": {
                                                    "enum": [
                                                        "aes128",
                                                        "aes256",
                                                        "tripledes"
                                                    ],
                                                    "type": "string"
                                                },
                                                "enforceTimestampInRequest": {
                                                    "type": "boolean"
                                                },
                                                "keyTransportAlgorithm": {
                                                    "enum": [
                                                        "rsa-1_5",
                                                        "rsa-oaep"
                                                    ],
                                                    "type": "string"
                                                },
                                                "maxTimestampInterval": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "namespaceMapping": {
                                                    "items": {
                                                        "properties": {
                                                            "namespace": {
                                                                "type": "string"
                                                            },
                                                            "prefix": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "prefix"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "responseAction": {
                                                    "enum": [
                                                        "encrypt",
                                                        "encrypt-then-sign",
                                                        "sign",
                                                        "sign-then-encrypt"
                                                    ],
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "items": {
                                                        "properties": {
                                                            "applyTo": {
                                                                "enum": [
                                                                    "request",
                                                                    "response"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "role": {
                                                                "enum": [
                                                                    "next",
                                                                    "none",
                                                                    "ultimateReceiver"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "applyTo",
                                                            "role"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "signatureAlgorithm": {
                                                    "enum": [
                                                        "hmac-sha1",
                                                        "rsa-sha1"
                                                    ],
                                                    "type": "string"
                                                },
                                                "soapBodyInRequestMustBeSignedAndVerified": {
                                                    "type": "boolean"
                                                },
                                                "verifyAll": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    },
                    "xml-validation-files": {
                        "oneOf": [
                            {
                                "items": {
                                    "oneOf": [
                                        {
                                            "required": [
                                                "id"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "id",
                                                "$ref"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "id",
                                                "link"
                                            ]
                                        }
                                    ],
                                    "properties": {
                                        "$action": {
                                            "enum": [
                                                "delete"
                                            ],
                                            "type": "string"
                                        },
                                        "$ref": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "contents": {
                                            "type": "string"
                                        },
                                        "fileName": {
                                            "type": "string"
                                        },
                                        "isBase64": {
                                            "type": "boolean"
                                        },
                                        "link": {
                                            "format": "uri",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/reference"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "template"
                ],
                "type": "object"
            },
            "PolicyDisallowedGeolocation": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyDisallowedGeolocation"
            },
            "PolicyEvasionList": {
                "properties": {
                    "evasion_violations": {
                        "items": {
                            "$ref": "#/components/schemas/PolicyEvasionViolation"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PolicyEvasionViolation": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyEvasionViolation"
            },
            "PolicyFiletype": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyFiletype"
            },
            "PolicyGeneralSettings": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyGeneralSettings"
            },
            "PolicyHttpRFCList": {
                "properties": {
                    "http_rfc_violations": {
                        "items": {
                            "$ref": "#/components/schemas/PolicyHttpRFCViolation"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PolicyHttpRFCViolation": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyHttpRFCViolation"
            },
            "PolicyImportData": {
                "description": "Defines WAF policy import task data.",
                "properties": {
                    "content": {
                        "description": "WAF policy file to import.",
                        "format": "binary",
                        "type": "string"
                    },
                    "description": {
                        "description": "WAF policy description.",
                        "type": "string"
                    },
                    "override": {
                        "description": "Confirmation to override an existing policy with the same name.",
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string"
                    },
                    "policy_name": {
                        "description": "WAF policy name.",
                        "example": "waf_policy",
                        "pattern": "^[-a-zA-Z0-9._/:]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "content"
                ],
                "type": "object"
            },
            "PolicyList": {
                "properties": {
                    "policies": {
                        "items": {
                            "$ref": "#/components/schemas/hal.PolicyCompact"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PolicyRequestLogger": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyRequestLogger"
            },
            "PolicySuggestion": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicySuggestion"
            },
            "PolicySuggestionList": {
                "properties": {
                    "suggestions": {
                        "items": {
                            "$ref": "#/components/schemas/PolicySuggestion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "suggestions"
                ],
                "type": "object"
            },
            "PolicySuggestionsIDsList": {
                "properties": {
                    "suggestions_ids": {
                        "description": "Apply an action to the list of suggestion IDs.",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "suggestions_ids"
                ],
                "type": "object"
            },
            "PolicyTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralTask"
                    },
                    {
                        "properties": {
                            "policy_name": {
                                "description": "WAF policy name.",
                                "example": "waf_policy",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Defines WAF policy task."
            },
            "PolicyViolation": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyViolation"
            },
            "PolicyViolationsList": {
                "properties": {
                    "violations": {
                        "items": {
                            "$ref": "#/components/schemas/PolicyViolation"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ProviderType": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderTypes": {
                "items": {
                    "$ref": "#/components/schemas/ProviderType"
                },
                "type": "array"
            },
            "ProxyFileUploadRequest": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passphrase": {
                        "type": "string"
                    }
                },
                "required": [
                    "fileName",
                    "name"
                ],
                "type": "object"
            },
            "QkviewData": {
                "properties": {
                    "creation_date_time": {
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/FileData"
                        },
                        "type": "array"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "ihealth_user": {
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "instance_ip": {
                        "type": "string"
                    },
                    "is_local": {
                        "type": "boolean"
                    },
                    "qkview_job_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "source": {
                        "enum": [
                            "CM",
                            "INSTANCE"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "INITIATED",
                            "GENERATING",
                            "GENERATED",
                            "UPLOADING",
                            "UPLOADED",
                            "COMPLETED",
                            "FAILED_PARTIALLY",
                            "FAILED",
                            "CANCELED"
                        ]
                    },
                    "storage": {
                        "type": "string"
                    },
                    "task_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "source",
                    "creation_date_time",
                    "status"
                ],
                "type": "object"
            },
            "QkviewTaskCreatedResponse": {
                "properties": {
                    "qkview_id": {
                        "type": "string"
                    },
                    "status": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "task_id": {
                        "type": "string"
                    },
                    "task_status": {
                        "type": "string"
                    }
                },
                "required": [
                    "qkview_id",
                    "task_id",
                    "task_status",
                    "status"
                ],
                "type": "object"
            },
            "QkviewVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "RenewRequest": {
                "properties": {
                    "administrator_email": {
                        "description": "administrator email",
                        "format": "email",
                        "type": "string"
                    },
                    "challenge_password": {
                        "description": "challenge password",
                        "type": "string"
                    },
                    "common_name": {
                        "description": "the common_name of the certificate cannot be empty",
                        "minLength": 1,
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "items": {
                            "maxLength": 2,
                            "minLength": 2,
                            "pattern": "^[A-Z]{2}$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "division": {
                        "description": "division",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "duration_in_days": {
                        "description": "duration in days",
                        "format": "int64",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "email": {
                        "description": "email",
                        "items": {
                            "format": "email",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "issuer details",
                        "enum": [
                            "Self",
                            "CA"
                        ],
                        "type": "string"
                    },
                    "key_curve_name": {
                        "description": "supported curve names for ECDSA",
                        "enum": [
                            "prime256v1",
                            "secp384r1",
                            "secp521r1"
                        ],
                        "type": "string"
                    },
                    "key_passphrase": {
                        "description": "key passphrase",
                        "pattern": "[^`$&()|\\\";'<>?]+",
                        "type": "string"
                    },
                    "key_size": {
                        "description": "supported key size for RSA",
                        "enum": [
                            2048,
                            3072,
                            4096,
                            8192
                        ],
                        "format": "int64",
                        "type": "integer"
                    },
                    "key_type": {
                        "enum": [
                            "RSA",
                            "ECDSA"
                        ],
                        "type": "string"
                    },
                    "locality": {
                        "description": "locality",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "organization": {
                        "description": "organization",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "state": {
                        "description": "state/province",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "subject_alternative_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "ResetPasswordRequest": {
                "description": "Reset password request body.",
                "properties": {
                    "temporary_password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "username"
                ],
                "type": "object"
            },
            "ResetPasswordResponse": {
                "description": "Reset password response body.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ],
                "type": "object"
            },
            "ResourcePermission": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "method": {
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "resource",
                    "method"
                ],
                "type": "object"
            },
            "ResourcePermissionGroup": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "ResourcePermissionGroupResourcePermissionMap": {
                "properties": {
                    "resource_permission_group_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "resource_permission_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RestorePasswordRequest": {
                "description": "Restore password request body.",
                "properties": {
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "username"
                ],
                "type": "object"
            },
            "RestorePasswordResponse": {
                "description": "Restore password response body.",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ],
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "RoleGroup": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "RoleGroupRoleMap": {
                "properties": {
                    "role_group_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "role_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RoleResourcePermissionGroupMap": {
                "properties": {
                    "resource_permission_group_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "role_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SMTPServer": {
                "description": "SMTP server information.",
                "properties": {
                    "authentication_enabled": {
                        "description": "Authentication enabled status.",
                        "type": "boolean"
                    },
                    "default_server": {
                        "description": "Flag to set default SMTP server.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A one-line description of the SMTP server.",
                        "type": "string"
                    },
                    "disabled": {
                        "description": "SMTP server disabled status.",
                        "type": "boolean"
                    },
                    "encryption": {
                        "description": "Encryption used to send emails.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "from_address": {
                        "description": "Email address used to send emails from.",
                        "format": "email",
                        "minLength": 1,
                        "type": "string"
                    },
                    "host": {
                        "description": "SMTP server host.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "id": {
                        "description": "UUID of the SMTP server.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password for the SMTP server.",
                        "type": "string"
                    },
                    "port": {
                        "description": "SMTP server port.",
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 2,
                        "type": "integer"
                    },
                    "server_name": {
                        "description": "SMTP server name.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "username": {
                        "description": "Username of the SMTP server.",
                        "type": "string"
                    }
                },
                "required": [
                    "server_name",
                    "host",
                    "port",
                    "from_address",
                    "encryption",
                    "authentication_enabled"
                ],
                "type": "object"
            },
            "SMTPServerConnection": {
                "description": "Request connection to SMTP server.",
                "properties": {
                    "host": {
                        "description": "SMTP server host.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "port": {
                        "description": "SMTP server port.",
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 2,
                        "type": "integer"
                    }
                },
                "required": [
                    "host",
                    "port"
                ],
                "type": "object"
            },
            "SMTPServerRequest": {
                "description": "SMTP server request information.",
                "properties": {
                    "authentication_enabled": {
                        "description": "Authentication enabled status.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A one-line description of the SMTP server.",
                        "type": "string"
                    },
                    "encryption": {
                        "description": "Encryption used to send emails.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "from_address": {
                        "description": "Email address used to send emails from.",
                        "format": "email",
                        "minLength": 1,
                        "type": "string"
                    },
                    "host": {
                        "description": "SMTP server host.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "id": {
                        "description": "UUID of the SMTP server.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password for the SMTP server.",
                        "type": "string"
                    },
                    "port": {
                        "description": "SMTP server port.",
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 2,
                        "type": "integer"
                    },
                    "server_name": {
                        "description": "SMTP server name.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "username": {
                        "description": "Username of the SMTP server.",
                        "type": "string"
                    }
                },
                "required": [
                    "server_name",
                    "host",
                    "port",
                    "from_address",
                    "encryption",
                    "authentication_enabled"
                ],
                "type": "object"
            },
            "SchemaTask": {
                "type": "object"
            },
            "SecurityPolicy": {
                "properties": {
                    "enforcement_mode": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "policy": {
                        "$ref": "#/components/schemas/SecurityPolicyType"
                    }
                },
                "type": "object"
            },
            "SecurityPolicyType": {
                "enum": [
                    "WAF",
                    "ACCESS"
                ],
                "type": "string"
            },
            "Session": {
                "properties": {
                    "description": {
                        "example": "description",
                        "pattern": "^[\\S\\s]{0,1000}$",
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "last_update_time": {
                        "example": "2021-01-28T15:24:05.029102Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "example": "session",
                        "pattern": "^[-\\w].*$",
                        "type": "string"
                    },
                    "url": {
                        "example": "sessions/{session_id}",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "url",
                    "name"
                ],
                "type": "object"
            },
            "SessionDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Session"
                    },
                    {
                        "properties": {
                            "allow_deployments": {
                                "type": "boolean"
                            },
                            "changes": {
                                "$ref": "#/components/schemas/Changes"
                            },
                            "config_files": {
                                "additionalProperties": {
                                    "format": "url",
                                    "type": "string"
                                },
                                "example": {
                                    "config/bigip.conf": "http://localhost/v1/sessions/1/files/config/bigip.conf",
                                    "config/bigip_base.conf": "http://localhost/v1/sessions/1/config/bigip_base.conf"
                                },
                                "type": "object"
                            },
                            "deployments": {
                                "items": {
                                    "$ref": "#/components/schemas/Deployment"
                                },
                                "type": "array"
                            },
                            "instructions": {
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "last_page": {
                                "$ref": "#/components/schemas/Page"
                            }
                        },
                        "required": [
                            "source",
                            "conflicts",
                            "changes"
                        ],
                        "type": "object"
                    }
                ]
            },
            "SessionList": {
                "properties": {
                    "sessions": {
                        "items": {
                            "$ref": "#/components/schemas/hal.Session"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SessionMessage": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SessionVariables": {
                "type": "object"
            },
            "Source": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeviceDetails"
                    },
                    {
                        "properties": {
                            "input_ucs_name": {
                                "example": "test.ucs",
                                "type": "string"
                            }
                        },
                        "required": [
                            "input_ucs_name"
                        ],
                        "type": "object"
                    }
                ]
            },
            "SsloVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "String": {
                "type": "string"
            },
            "SupportedPerappSettings": {
                "properties": {
                    "settings": {
                        "example": [
                            {
                                "description": "Merge two virtual servers if they are placed in the same partition",
                                "name": "Partition",
                                "value": "auth partition"
                            },
                            {
                                "description": "Merge two virtual servers if they use a common virtual address",
                                "name": "Virtual Address",
                                "value": "ltm virtual-address"
                            },
                            {
                                "description": "Merge two virtual servers if they are placed in the same folder",
                                "name": "Folder",
                                "value": "sys folder"
                            },
                            {
                                "description": "Merge two virtual servers if they use a common monitor",
                                "name": "Monitor",
                                "value": "ltm monitor"
                            },
                            {
                                "description": "Merge two virtual servers if they use a common iRule",
                                "name": "iRule",
                                "value": "ltm rule"
                            },
                            {
                                "description": "Merge two virtual servers if they use a common profile",
                                "name": "Profile",
                                "value": "ltm profile"
                            },
                            {
                                "description": "Merge two virtual servers if they use common file, e.g. SSL Key or Certificate",
                                "name": "File",
                                "value": "sys file"
                            }
                        ],
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "settings"
                ],
                "type": "object"
            },
            "SystemInfo": {
                "properties": {
                    "build_number": {
                        "type": "string"
                    },
                    "release_version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SystemVersionInfo": {
                "properties": {
                    "schema_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "TargetInstanceDefinition": {
                "description": "IP address, hostname, or both, of the target instance, expressed in JSON format (for example:{\"target\":{\"address\":\"1.2.3.4\",\"hostname\":\"example.host.net\"}}).",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "format": "hostname",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Task": {
                "properties": {
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "task_type": {
                        "type": "string"
                    },
                    "updated": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "TaskCreatedResponse": {
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Template": {
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "file_type": {
                        "enum": [
                            "YAML",
                            "MST",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "last_updated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "published": {
                        "description": "The value true indicates that the template has been published, and this means the template is in use by an application or that it cannot be modified. When the template is published (value set to true), the template cannot be updated, deleted or moved from one template-set to another.",
                        "type": "boolean"
                    },
                    "set_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "TemplateNames": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "TemplateParams": {
                "properties": {
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "object"
                    },
                    "source_device_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "template_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "template_id"
                ],
                "type": "object"
            },
            "TemplateSetWithTemplates": {
                "properties": {
                    "name": {
                        "example": "exampleSet",
                        "type": "string"
                    },
                    "templates": {
                        "items": {
                            "properties": {
                                "description": {
                                    "example": "this template is an example",
                                    "type": "string"
                                },
                                "last_updated": {
                                    "example": "2020-06-14 14:49:39.961714+00",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "exampleTemplate",
                                    "type": "string"
                                },
                                "published": {
                                    "example": true,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TemplateSets": {
                "properties": {
                    "templatesets": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TemplateSetsWithTemplates": {
                "items": {
                    "$ref": "#/components/schemas/TemplateSetWithTemplates"
                },
                "type": "array"
            },
            "TemplateTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    }
                ],
                "description": "Template task definition.",
                "title": "Template task"
            },
            "Tenant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TenantBase"
                    },
                    {
                        "properties": {
                            "applications": {
                                "items": {
                                    "example": "http://localhost/v1/sessions/1/applications/application_1",
                                    "format": "url",
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "TenantBase": {
                "properties": {
                    "as3_unsupported": {
                        "example": 2,
                        "type": "integer"
                    },
                    "deployable_objects": {
                        "$ref": "#/components/schemas/DeployableObjects"
                    },
                    "description": {
                        "example": "Test tenant",
                        "type": "string"
                    },
                    "irules_count": {
                        "example": 0,
                        "type": "integer"
                    },
                    "last_modified": {
                        "example": "2021-01-28T15:24:05.029102Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "example": "tenant_1",
                        "type": "string"
                    },
                    "security_issues": {
                        "example": 0,
                        "type": "integer"
                    },
                    "staged": {
                        "type": "boolean"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AS3Status"
                    },
                    "url": {
                        "example": "http://localhost/v1/sessions/1/tenants/tenant_1",
                        "format": "url",
                        "type": "string"
                    },
                    "virtuals_count": {
                        "example": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "description"
                ],
                "type": "object"
            },
            "TenantDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TenantBase"
                    },
                    {
                        "properties": {
                            "applications": {
                                "items": {
                                    "$ref": "#/components/schemas/Application"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "TokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "force_change_password": {
                        "type": "boolean"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TrafficVlanRequest": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "networkName": {
                        "type": "string"
                    },
                    "selfIps": {
                        "items": {
                            "$ref": "#/components/schemas/TrafficVlanSelfIPRequest"
                        },
                        "minItems": 3,
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "networkName",
                    "selfIps"
                ],
                "type": "object"
            },
            "TrafficVlanSelfIPRequest": {
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "instanceName": {
                        "enum": [
                            "FLOATING-IP",
                            "ACTIVE-NODE",
                            "STANDBY-NODE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "instanceName"
                ],
                "type": "object"
            },
            "UpdateIHealthConfigRequest": {
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ],
                "type": "object"
            },
            "UpdateLicensesRequest": {
                "properties": {
                    "connected": {
                        "description": "license connect mode",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "license status",
                        "enum": [
                            "VALID",
                            "INVALID"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateQkviewRequest": {
                "properties": {
                    "ihealth_user": {
                        "type": "string"
                    }
                },
                "required": [
                    "ihealth_user"
                ],
                "type": "object"
            },
            "UpdateSMTPServer": {
                "description": "SMTP server information.",
                "properties": {
                    "authentication_enabled": {
                        "description": "Authentication enabled status.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A one-line description of the SMTP server.",
                        "type": "string"
                    },
                    "encryption": {
                        "description": "Encryption used to send emails.",
                        "type": "string"
                    },
                    "from_address": {
                        "description": "Email address used to send emails from.",
                        "format": "email",
                        "type": "string"
                    },
                    "host": {
                        "description": "SMTP server host.",
                        "type": "string"
                    },
                    "id": {
                        "description": "UUID of the SMTP server.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password for the SMTP server.",
                        "type": "string"
                    },
                    "port": {
                        "description": "SMTP server port.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "server_name": {
                        "description": "SMTP server name.",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username of the SMTP server.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpgradeInstanceRequest": {
                "properties": {
                    "image_name": {
                        "type": "string"
                    },
                    "upgrade_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "image_name",
                    "upgrade_type"
                ],
                "type": "object"
            },
            "UpgradeInstanceTask": {
                "properties": {
                    "completed": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "image_name": {
                        "type": "string"
                    },
                    "instance_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "partition_address": {
                        "type": "string"
                    },
                    "partition_password": {
                        "format": "password",
                        "type": "string"
                    },
                    "partition_user": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tenant_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpgradeVeInstanceRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpgradeInstanceRequest"
                    },
                    {
                        "properties": {
                            "signature_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "signature_name"
                        ],
                        "type": "object"
                    }
                ]
            },
            "UpgradeVelosInstanceRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpgradeInstanceRequest"
                    },
                    {
                        "properties": {
                            "partition_address": {
                                "type": "string"
                            },
                            "partition_password": {
                                "type": "string"
                            },
                            "partition_port": {
                                "type": "integer"
                            },
                            "partition_user": {
                                "type": "string"
                            },
                            "tenant_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "partition_address",
                            "partition_port",
                            "partition_user",
                            "partition_password",
                            "tenant_name"
                        ],
                        "type": "object"
                    }
                ]
            },
            "UploadIHealthRequest": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "f5_support_case": {
                        "type": "string"
                    },
                    "share_with_case_owner": {
                        "type": "boolean"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "visible_in_gui": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "user_agent",
                    "username"
                ],
                "type": "object"
            },
            "User": {
                "description": "Persistent user information.",
                "properties": {
                    "disabled": {
                        "description": "Disabled Status.",
                        "type": "boolean"
                    },
                    "display_name": {
                        "description": "User display name",
                        "type": "string"
                    },
                    "email": {
                        "description": "user email",
                        "type": "string"
                    },
                    "force_change_password": {
                        "description": "force change password flag.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "UUID for the user.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "password": {
                        "description": "User password.",
                        "type": "string"
                    },
                    "temporary_password": {
                        "description": "User temporary password.",
                        "type": "string"
                    },
                    "username": {
                        "description": "User name.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserRoleGroupMap": {
                "properties": {
                    "role_group_id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "user_id": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserUpdate": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/UserUpdateChangePassword"
                    },
                    {
                        "$ref": "#/components/schemas/User"
                    }
                ],
                "description": "The user fields to be updated."
            },
            "UserUpdateChangePassword": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "new_password": {
                                "description": "New password",
                                "type": "string"
                            }
                        },
                        "required": [
                            "username",
                            "password"
                        ],
                        "type": "object"
                    }
                ],
                "description": "The user's current credentials, and a new password to assign to the user."
            },
            "VLAN": {
                "description": "The VLAN used for high availability.",
                "properties": {
                    "mtu": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "selfIps": {
                        "items": {
                            "$ref": "#/components/schemas/InstanceVlanSelfIPResponse"
                        },
                        "type": "array"
                    },
                    "tag": {
                        "type": "integer"
                    },
                    "taggedInterfaces": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "untaggedInterfaces": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "tag"
                ],
                "title": "HA VLAN",
                "type": "object"
            },
            "VelosProvider": {
                "properties": {
                    "id": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partition_address": {
                        "type": "string"
                    },
                    "partition_port": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VelosProviderAuthenticationRequest": {
                "properties": {
                    "partition_address": {
                        "type": "string"
                    },
                    "partition_password": {
                        "type": "string"
                    },
                    "partition_port": {
                        "type": "integer"
                    },
                    "partition_user": {
                        "type": "string"
                    }
                },
                "required": [
                    "partition_address",
                    "partition_port",
                    "partition_user",
                    "partition_password"
                ],
                "type": "object"
            },
            "VelosProviderImages": {
                "properties": {
                    "images": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "VelosProviderTenants": {
                "properties": {
                    "tenants": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ViolationsList": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/ViolationsList"
            },
            "VirtualServer": {
                "properties": {
                    "application": {
                        "example": "application_1",
                        "type": "string"
                    },
                    "as3_preview": {
                        "example": "http://localhost/v1/sessions/1/virtual_files/virtual_server_1/preview.json",
                        "format": "url",
                        "type": "string"
                    },
                    "as3_unsupported": {
                        "example": [
                            "ltm node /Common/1.2.3.4",
                            "net vlan /partition/vlan123"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "config_files": {
                        "additionalProperties": {
                            "format": "url",
                            "type": "string"
                        },
                        "example": {
                            "application_1/Virtuals/virtual_server_1/bigip.conf": "http://localhost/v1/sessions/1/virtual_files/virtual_server_1/bigip.conf",
                            "application_1/Virtuals/virtual_server_1/bigip_base.conf": "http://localhost/v1/sessions/1/virtual_files/virtual_server_1/bigip_base.conf"
                        },
                        "type": "object"
                    },
                    "deployable_objects": {
                        "$ref": "#/components/schemas/DeployableObjects"
                    },
                    "graph": {
                        "example": "http://localhost/v1/sessions/1/virtual_files/virtual_server_1/graph.svg",
                        "format": "url",
                        "type": "string"
                    },
                    "irules_count": {
                        "example": 0,
                        "type": "integer"
                    },
                    "last_modified": {
                        "example": "2021-01-28T15:24:05.029102Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/ObjectsMetadata"
                    },
                    "name": {
                        "example": "virtual_server_1",
                        "type": "string"
                    },
                    "security_issues": {
                        "example": [
                            "ltm profile client-ssl /Common/fips-profile"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AS3Status"
                    },
                    "url": {
                        "example": "http://localhost/v1/sessions/1/virtuals/virtual_server_1",
                        "format": "url",
                        "type": "string"
                    },
                    "virtuals_count": {
                        "example": 0,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WAFPolicySummary": {
                "properties": {
                    "applications_with_waf_policies": {
                        "description": "Total number of applications with attached WAF policies.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "blocking": {
                        "description": "Number of applications with WAF policies that have a blocking enforcement mode.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "mixed": {
                        "description": "Number of applications with WAF policies that have mixed enforcement modes.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "no_policies": {
                        "description": "Number of applications without a WAF policy.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "total_applications": {
                        "description": "Total number of applications.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "transparent": {
                        "description": "Number of applications with WAF policies that have a transparent enforcement mode.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WafAnalytics": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalytics"
            },
            "WafAnalyticsPercentageRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsPercentageRequest"
            },
            "WafAnalyticsTopRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsTopRequest"
            },
            "WafMultiplePoliciesRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafMultiplePoliciesRequest"
            },
            "WafPolicy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WafPolicyCompact"
                    },
                    {
                        "properties": {
                            "declaration": {
                                "$ref": "#/components/schemas/Declaration"
                            }
                        },
                        "required": [
                            "declaration"
                        ],
                        "type": "object"
                    }
                ],
                "description": "Defines WAF policy data."
            },
            "WafPolicyCompact": {
                "description": "Defines WAF policy data without declaration.",
                "properties": {
                    "application_language": {
                        "description": "The character encoding for the web application. The character encoding determines how the policy processes the character sets. The default is Auto detect.",
                        "example": "utf-8",
                        "type": "string"
                    },
                    "applications": {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/Applications"
                    },
                    "created_by": {
                        "description": "User ID or application name which created the policy/template.",
                        "type": "string"
                    },
                    "created_time": {
                        "description": "Time the policy/template was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "enforcement_mode": {
                        "description": "How BIG-IP MA processes a request that triggers a security policy violation.\n- **Blocking:** When the enforcement mode is set to blocking, any triggered violation is blocked (configured for blocking).\n- **Transparent:** When the enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.",
                        "enum": [
                            "blocking",
                            "transparent"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "description": "UUID of WAF template/policy.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "is_default_template": {
                        "description": "Defined whether template is the default template.",
                        "type": "boolean"
                    },
                    "last_deployed": {
                        "description": "Last time the policy was deployed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "last_modified": {
                        "description": "Last time the policy/template was modified.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "WAF template/policy name.",
                        "example": "entity_name",
                        "type": "string"
                    },
                    "tags": {
                        "description": "Tags for marking policies.",
                        "items": {
                            "example": "tag1",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "template_name": {
                        "description": "The name of the template upon which the policy is based.",
                        "example": "Advanced-Protection",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WafSinglePolicyRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafSinglePolicyRequest"
            },
            "WafTrafficLogsDeleteAllRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafTrafficLogsDeleteAllRequest"
            },
            "WafTrafficLogsDeleteByFilterRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafTrafficLogsDeleteByFilterRequest"
            },
            "WafTrafficLogsDeleteByIdRequest": {
                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafTrafficLogsDeleteByIdRequest"
            },
            "WafVersionInfo": {
                "properties": {
                    "schema_version": {
                        "example": "1.43",
                        "type": "string"
                    }
                },
                "required": [
                    "schema_version"
                ],
                "type": "object"
            },
            "checkSmtpConnectionResponse": {
                "description": "Successful SMTP server  connection response.",
                "properties": {
                    "reachable": {
                        "description": "true if SMTP connection is successful.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "200 if SMTP connection is successful.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "reachable",
                    "status"
                ],
                "type": "object"
            },
            "hal.AS3WorkflowVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AS3WorkflowVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.AcceptRequestTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AcceptRequestTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.AcceptRequestTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.AcceptRequestTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Alert": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Alert"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.AlertRulesResponse": {
                "$ref": "#/components/schemas/AlertRuleGroups"
            },
            "hal.AlertType": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AlertType"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.AlertTypes": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "types": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.AlertType"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.AlertVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AlertVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Alerts": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "alerts": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Alert"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.AllTemplateParams": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "templateParameters": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.TemplateParams"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.ApmPolicy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApmPolicy"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ApmVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApmVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Application": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Application"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ApplicationLanguagesList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApplicationLanguagesList"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ApplicationTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ApplicationTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ApplicationTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.ApplicationTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Applications": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "applications": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Application"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.AuthenticationResponse": {
                "$ref": "#/components/schemas/AuthenticationResponse"
            },
            "hal.Certificate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CertData"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.CertificateVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CertificateVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Certificates": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "certificates": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Certificate"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.ClonePolicyTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ClonePolicyTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ClonePolicyTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.ClonePolicyTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.CreateAlertResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.CreateAlertTypeResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.CreateNotificationConfigurationResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.CreateTemplateTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CreateTemplateRequest"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.CreateTemplateTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.CreateTemplateTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.DeleteAlertTypeResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.DeleteNotificationConfigurationsResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.DeleteQkviewResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeneralResponse"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeleteQkviewResponses": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "files": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.DeleteQkviewResponse"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.DeleteResponse": {
                "$ref": "#/components/schemas/DeleteCertIDList"
            },
            "hal.DeleteStatus": {
                "$ref": "#/components/schemas/DeleteStatus"
            },
            "hal.Deployment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Deployment"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeploymentStubVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeploymentStubVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeploymentTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeploymentTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeploymentTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "deployment_tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.DeploymentTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Deployments": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "deployments": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Deployment"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Device": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Device"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeviceDeleteTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeviceDeleteTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeviceDeleteTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.DeviceDeleteTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.DeviceDiscoveryTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeviceDiscoveryTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.DeviceDiscoveryTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.DeviceDiscoveryTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.DeviceGroup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeviceGroup"
                    },
                    {
                        "$ref": "#/components/schemas/hal.DeviceGroup._links"
                    }
                ]
            },
            "hal.DeviceGroup._links": {
                "description": "Includes a self link and a link to the instances in the group",
                "properties": {
                    "_links": {
                        "properties": {
                            "devices": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            },
                            "self": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "hal.DeviceGroups": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "groups": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.DeviceGroup"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.DeviceVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DeviceVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Devices": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "devices": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Device"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.EnforceReadyEntitiesTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EnforceReadyEntitiesTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.EnforceReadyEntitiesTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.EnforceReadyEntitiesTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.EvasionList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EvasionList"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.FastVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/FastVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ],
                "example": {
                    "_links": {
                        "self": {
                            "href": "/v1/version"
                        }
                    },
                    "schema_version": "1.2"
                }
            },
            "hal.File": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/File"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.FileOutput": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/FileOutput"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Files": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "files": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.File"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.GatewayVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GatewayVersionInfo"
                    },
                    {
                        "properties": {
                            "_links": {
                                "$ref": "#/components/schemas/hal._links.Singular"
                            }
                        }
                    }
                ]
            },
            "hal.GeneralResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.GeolocationsList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeolocationsList"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.GetAllInstanceLicensesResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "types": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.GetInstanceLicensesResponse"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.GetIHealthResponse": {
                "$ref": "#/components/schemas/GetIHealthResponse"
            },
            "hal.GetInstanceLicensesResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GetInstanceLicensesResponse"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.HAInstanceCreateTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/HAInstanceCreateTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.HAInstanceCreateTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.HAInstanceCreateTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.HAInstanceFailoverTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/HAInstanceFailoverTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ],
                "description": "Define a single HA instance failover task using hal+json format."
            },
            "hal.HAInstanceFailoverTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.HAInstanceFailoverTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Define a collection of BIG-IP Next HA instance failover tasks using hal+json format."
            },
            "hal.HealthSyncTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/HealthSyncTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.HealthSyncTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.HealthSyncTasks"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.HttpRFCList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/HttpRFCList"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceBackup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceBackup"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceBackupTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceBackupTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceBackupTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.InstanceBackupTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.InstanceBackups": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "backups": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.InstanceBackup"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.InstanceHealth": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceHealth"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceInterfaces": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceInterfaces"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceLicenseVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceLicenseVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceRestoreTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceRestoreTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.InstanceRestoreTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.InstanceRestoreTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.InstanceVlans": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceVlans"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LicenseTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LicenseTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LicenseTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.LicenseTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.LiveUpdateFile": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/LiveUpdateFile"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LiveUpdateFilePreview": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/LiveUpdateFilePreview"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LiveUpdateFiles": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "signatures": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.LiveUpdateFile"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.LiveUpdateInstallationTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LiveUpdateInstallationTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LiveUpdateInstallationTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.LiveUpdateInstallationTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.LiveUpdatePreviewTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LiveUpdatePreviewTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LiveUpdatePreviewTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.LiveUpdatePreviewTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.LiveUpdateUploadTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LiveUpdateUploadTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.LiveUpdateUploadTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.LiveUpdateUploadTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.ModifyAlertResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.ModifyAlertTypeResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.ModifyAlertsResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.ModifyNotificationConfigurationResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.ModifyNotificationConfigurationsResponse": {
                "$ref": "#/components/schemas/GeneralResponse"
            },
            "hal.NotificationConfiguration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NotificationsView"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.NotificationConfigurations": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "notification_configurations": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.NotificationConfiguration"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Policies": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "policies": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Policy"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PoliciesTagsList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PoliciesTagsList"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Policy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Policy"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyBuilderSettings": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyBuilderSettings"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyCompact": {
                "allOf": [
                    {
                        "$ref": "policy/apm-policies-list-schema.yaml#/components/schemas/PolicyCompact"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyDisallowedGeolocation": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyDisallowedGeolocation"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyDisallowedGeolocationList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "disallowed_geolocations": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicyDisallowedGeolocation"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyEnforcementReadiness": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyEnforcementReadiness"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyEvasionList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "evasion_violations": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicyEvasionViolation"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyEvasionViolation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PolicyEvasionViolation"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyFiletype": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyFiletype"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyFiletypeList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "filetypes": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicyFiletype"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyGeneralSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PolicyGeneralSettings"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyHttpRFCList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "http_rfc_violations": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicyHttpRFCViolation"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyHttpRFCViolation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PolicyHttpRFCViolation"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyIpAddress": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyIpAddressFull"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyIpAddressDetail": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyIpAddressFullWithRelated"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyIpAddressList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "ip_address_list": {
                                        "items": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/hal.PolicyIpAddress"
                                                },
                                                {
                                                    "properties": {
                                                        "id": {
                                                            "description": "IP address ID.",
                                                            "example": "1.2.3.4~255.255.255.255",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "policies": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.WafPolicyCompact"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyRequestLogger": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicyRequestLogger"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicySignature": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicySignature"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicySignatureList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "signatures": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicySignature"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicySignatureSet": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicySignatureSet"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicySignatureSetList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "signature-sets": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicySignatureSet"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicySignatureSetNoAccuracy": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicySignatureSetNoAccuracy"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicySuggestion": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicySuggestion"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicySuggestionList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "suggestions": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicySuggestion"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PolicyTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicyTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.PolicyViolation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PolicyViolation"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.PolicyViolationsList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "violations": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.PolicyViolation"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Qkview": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QkviewData"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.QkviewTaskCreated": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QkviewTaskCreatedResponse"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.QkviewVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/QkviewVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Qkviews": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "qkviews": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Qkview"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.ResourcePermission": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourcePermission"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ResourcePermissionGroup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourcePermissionGroup"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ResourcePermissionGroupResourcePermissionMap": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourcePermissionGroupResourcePermissionMap"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ResourcePermissionGroups": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "resourcePermissionGroups": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.ResourcePermissionGroup"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.ResourcePermissions": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "resourcePermissions": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.ResourcePermission"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Role": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Role"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.RoleGroup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RoleGroup"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.RoleGroupRoleMap": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RoleGroupRoleMap"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.RoleGroups": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "roleGroups": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.RoleGroup"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.RoleResourcePermissionGroupMap": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RoleResourcePermissionGroupMap"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Roles": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "roles": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Role"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.SMTPServer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SMTPServer"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SchemaTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SchemaTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SchemaTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "schema_tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.SchemaTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Session": {
                "allOf": [
                    {
                        "$ref": "session/apm-sessions-list-schema.yaml#/components/schemas/Session"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SessionList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "$ref": "#/components/schemas/SessionList"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.SessionMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SessionMessage"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SessionVariables": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SessionVariables"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Signature": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/Signature"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SignatureList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "signatures": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Signature"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.SignatureSet": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafSignatureSet"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SignatureSetList": {
                "allOf": [
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "signature-sets": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.SignatureSet"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    }
                ]
            },
            "hal.SsloVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SsloVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SystemInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SystemInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.SystemVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SystemVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Task": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.TaskCreatedResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TaskCreatedResponse"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Tasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Task"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Template": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Template"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ],
                "description": "Define a single template using hal+json format.",
                "example": {
                    "_links": {
                        "self": {
                            "href": "/templatelist/361fa2b5-fd50-46b2-acb2-19728bd0365d"
                        }
                    },
                    "body": "body",
                    "description": "an example template",
                    "file_type": "MST",
                    "id": "361fa2b5-fd50-46b2-acb2-19728bd0365d",
                    "last_updated": "2020-06-14 14:49:39.961714+00",
                    "name": "mstTemplate",
                    "published": true,
                    "set_name": "mstSet"
                }
            },
            "hal.TemplateList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "templates": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.WafPolicyCompact"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.TemplateParams": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TemplateParams"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.TemplateSets": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    },
                    {
                        "$ref": "#/components/schemas/TemplateSets"
                    }
                ],
                "description": "Define template sets using hal+json format.",
                "example": {
                    "_links": {
                        "self": {
                            "href": "/templatesets"
                        }
                    },
                    "templatesets": [
                        "set_name_1",
                        "set_name_2",
                        "set_name_3"
                    ]
                }
            },
            "hal.TemplateTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TemplateTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ],
                "description": "Define a single template task using hal+json format.",
                "example": {
                    "_links": {
                        "self": {
                            "href": "/template-tasks/361fa2b5-fd50-46b2-acb2-19728bd0365d"
                        }
                    },
                    "completed": "2022-01-20T18:12:57.967624Z",
                    "created": "2022-01-20T18:12:57.942606Z",
                    "failure_reason": "FAST-00003: Template func-test/tpl1 already exists. Review its name or set name",
                    "id": "361fa2b5-fd50-46b2-acb2-19728bd0365d",
                    "name": "create template func-test/tpl1",
                    "state": "ctCreateAndUpdateTemplateTask",
                    "status": "failed",
                    "task_type": "fast_create_template",
                    "updated": "2022-01-20T18:12:57.967624Z"
                }
            },
            "hal.TemplateTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.TemplateTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Define template tasks using hal+json format."
            },
            "hal.Templates": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "templates": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Template"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Define templates using hal+json format."
            },
            "hal.TrafficLog": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/TrafficLogHit"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.TrafficLogList": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "events": {
                                        "items": {
                                            "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/TrafficLog"
                                        },
                                        "type": "array"
                                    },
                                    "total_items": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.UpgradeInstanceTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UpgradeInstanceTask"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.UpgradeInstanceTasks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "tasks": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.UpgradeInstanceTask"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.UploadIHealthResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IHealthData"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.UploadIHealthResponses": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "files": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.UploadIHealthResponse"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.User": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.UserRoleGroupMap": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserRoleGroupMap"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.Users": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "users": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.User"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.VelosProvider": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/VelosProvider"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.VelosProviders": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    },
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "providers": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.VelosProvider"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "hal.Violation": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/Violation"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.ViolationList": {
                "allOf": [
                    {
                        "properties": {
                            "_embedded": {
                                "properties": {
                                    "violations": {
                                        "items": {
                                            "$ref": "#/components/schemas/hal.Violation"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Plural"
                    }
                ]
            },
            "hal.WAFPolicySummaryResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WAFPolicySummary"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafAnalyticsCount": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsCount"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafAnalyticsRange": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsRange"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafAnalyticsRating": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsRating"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafAnalyticsTopCount": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsTopCount"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafAnalyticsTrend": {
                "allOf": [
                    {
                        "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafAnalyticsTrend"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafPolicy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WafPolicy"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafPolicyCompact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WafPolicyCompact"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal.WafVersionInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WafVersionInfo"
                    },
                    {
                        "$ref": "#/components/schemas/hal._links.Singular"
                    }
                ]
            },
            "hal._links.Plural": {
                "properties": {
                    "_links": {
                        "properties": {
                            "first": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            },
                            "last": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            },
                            "next": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            },
                            "prev": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            },
                            "self": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            }
                        }
                    }
                }
            },
            "hal._links.Singular": {
                "properties": {
                    "_links": {
                        "properties": {
                            "self": {
                                "$ref": "#/components/schemas/hal.linkObject"
                            }
                        }
                    }
                }
            },
            "hal.linkObject": {
                "description": "hal+json Link Object",
                "properties": {
                    "href": {
                        "type": "string"
                    }
                },
                "required": [
                    "href"
                ],
                "type": "object"
            },
            "patchDeclarationDefinition": {
                "description": "The patch definition makes use of the standard JSON Patch design.",
                "properties": {
                    "edit_declaration": {
                        "$ref": "#/components/schemas/BigIpNextPatchDeclarationContent"
                    },
                    "target_address": {
                        "type": "string"
                    }
                },
                "required": [
                    "target_address",
                    "edit_declaration"
                ],
                "title": "Patch Declaration Definition for CM",
                "type": "object"
            },
            "resultDefinition": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "host": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "runTime": {
                        "type": "integer"
                    },
                    "tenant": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "serviceDefinition": {
                "description": "See documentation for information on the AS3 service definition",
                "type": "object"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "scheme": "basic",
                "type": "http"
            },
            "bearerAuth": {
                "bearerFormat": "JWT",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "description": "Enables the F5® BIG-IP® Next Central Manager to perform certain Gateway feature operations, such as to log in and log out a user.",
        "title": "BIG-IQ MBIP API",
        "version": "1.0.0"
    },
    "openapi": "3.0.1",
    "paths": {
        "/api/ado-query/openapi": {
            "get": {
                "description": "Returns OpenAPI specification for ADO query feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return OpenAPI specification.",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/application-alert-summary": {
            "get": {
                "operationId": "GetApplicationsAlertSummary",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationsAlertsSummaryResponse"
                                }
                            }
                        },
                        "description": "Summary of Applications Alerts."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns summary of applications alerts",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/application-health-summary": {
            "get": {
                "operationId": "GetApplicationsHealthSummary",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationsHealthSummaryResponse"
                                }
                            }
                        },
                        "description": "Summary of Applications Health."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns summary of applications health",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/applications-summary/waf": {
            "get": {
                "operationId": "ApplicationSummaryGet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ApplicationSummaryResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "success response status for retrieving metrics"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                },
                "summary": "Returns asdasa list of time series metrics",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/applications/health": {
            "get": {
                "operationId": "GetApplicationsHealth",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationsHealthResponse"
                                }
                            }
                        },
                        "description": "Applications Health."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns applications health",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/applications/health/sync-tasks": {
            "post": {
                "description": "Requests a task that bring an instance applications full health and store in Central Manager.",
                "operationId": "RunFullHealthSyncTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/HealthSyncRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/applications/health/sync-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                        }
                                    },
                                    "path": "/v1/applications/health/sync-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Featch applications full health statuses from instance and store in Central Manager.",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/applications/health/sync-tasks/{id}": {
            "get": {
                "description": "Requests a specific health-sync task.",
                "operationId": "GetFullHealthSyncTask",
                "parameters": [
                    {
                        "description": "UUID of health-sync task",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "//v1/applications/health/sync-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                        }
                                    },
                                    "completed": "2021-04-02T23:11:19.08911Z",
                                    "created": "2021-04-02T23:11:18.051859Z",
                                    "failure_reason": "",
                                    "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                    "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "state": "healthSyncDone",
                                    "status": "completed"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.HealthSyncTask"
                                }
                            }
                        },
                        "description": "A specific health-sync task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return health-sync task",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/applications/waf-policy-summary": {
            "get": {
                "operationId": "GetApplicationsWAFPolicySummary",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WAFPolicySummaryResponse"
                                }
                            }
                        },
                        "description": "Summary of WAF policies."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns summary of WAF policies attached to applications",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/metrics": {
            "get": {
                "operationId": "MetricsGet",
                "parameters": [
                    {
                        "description": "Defines one or more metrics to be returned. When groupBy is used only one metric should be used. An aggregation function can be added such as SUM, AVG, COUNT, MIN, MAX, RATE.",
                        "examples": {
                            "aggregated": {
                                "summary": "query aggregated value of a metric",
                                "value": "SUM(http.transactions)"
                            },
                            "multiple": {
                                "summary": "query multiple metrics",
                                "value": "cpu.idle,cpu.system"
                            },
                            "single": {
                                "summary": "query a single metric",
                                "value": "http.transactions"
                            }
                        },
                        "in": "query",
                        "name": "names",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A logical expression for filtering query results. consists of one or more predicates in the form of <dimension><operator><dimension value>.",
                        "examples": {
                            "equality": {
                                "description": "filter using an equality expression",
                                "value": "deviceId eq '91032542-C56B-EB96-6F19-E1BB685CF055'"
                            },
                            "inequality": {
                                "description": "filter using an inequality expression",
                                "value": "transactionOutcome neq 'incomplete'"
                            },
                            "multiplePredicates": {
                                "description": "multiple predicates",
                                "value": "(deviceId eq '91032542-C56B-EB96-6F19-E1BB685CF055') AND (cpu.core eq 'all')"
                            },
                            "numerical": {
                                "description": "filter using a numerical condition",
                                "value": "port gte 80"
                            }
                        },
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The start of the time window to include metrics from (inclusive).",
                        "in": "query",
                        "name": "start",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The end of the time window to include metrics from (non-inclusive) – default to “now”.",
                        "in": "query",
                        "name": "end",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Defines the returned data granularity.",
                        "in": "query",
                        "name": "resolution",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Defines if result should be returned aggregated.",
                        "in": "query",
                        "name": "aggregate",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/MetricsResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "success response status for retrieving metrics"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns a list of time series metrics",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/monitor": {
            "get": {
                "operationId": "ListMonitor",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/MonitorResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "description"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns last time device id received stats",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/ado-query/v1/monitor/{id}": {
            "get": {
                "operationId": "GetMonitor",
                "parameters": [
                    {
                        "description": "description",
                        "examples": {
                            "multiple": {
                                "summary": "query multiple",
                                "value": "111-222-333,999-888-777"
                            },
                            "single": {
                                "summary": "query single",
                                "value": "111-222-333"
                            }
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/MonitorResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "description"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns last time device id received stats",
                "tags": [
                    "AdoQueryFeature"
                ]
            }
        },
        "/api/alert/openapi": {
            "get": {
                "description": "request openapi specification for alert and notification feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "return openapi specification",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts": {
            "get": {
                "description": "request a list of all the alerts and notifications.",
                "operationId": "GetAllAlerts",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Alerts"
                                }
                            }
                        },
                        "description": "List of all alerts and notifications"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return all alerts",
                "tags": [
                    "AlertFeature"
                ]
            },
            "post": {
                "description": "stores aggregated alerts from aggregator services",
                "operationId": "CreateOrUpdateAlert",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAlertRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.CreateAlertResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "stores aggregated alerts",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/inactivate": {
            "post": {
                "description": "inactivate multiple alerts with given ids",
                "operationId": "InactivateAlerts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertIDList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyAlertsResponse"
                                }
                            }
                        },
                        "description": "Status of inactive alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "inactivate multiple",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/inactivate/{id}": {
            "parameters": [
                {
                    "description": "uuid of alert",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "request to inactivate a given alert",
                "operationId": "InactivateAlert",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyAlertResponse"
                                }
                            }
                        },
                        "description": "Status of inactivate alert"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "inactivate the alert",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/json-filters": {
            "post": {
                "description": "this a temporary API till odata search is fixed to search in between json and json array",
                "operationId": "GetFilteredAlerts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertJsonFilterList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Alerts"
                                }
                            }
                        },
                        "description": "List of all alerts and notifications"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "GET filtered output based on json and json array",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/rules": {
            "get": {
                "description": "request a list of all the alert rules.",
                "operationId": "GetAllAlertRules",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AlertRulesResponse"
                                }
                            }
                        },
                        "description": "List of all alert rules"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return all alert rules",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/seen": {
            "post": {
                "description": "changes alert status to seen for the given list of alert ids",
                "operationId": "SeenAlerts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertIDList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyAlertsResponse"
                                }
                            }
                        },
                        "description": "Status of seen alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "update multiple alerts to seen",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/seen/{id}": {
            "parameters": [
                {
                    "description": "uuid of alert",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "request to update the status of given alert to seen",
                "operationId": "SeenAlert",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyAlertResponse"
                                }
                            }
                        },
                        "description": "Status of seen alert"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "update alert status to seen",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/type": {
            "delete": {
                "description": "deletes alert type",
                "operationId": "DeleteAlertType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAlertTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteAlertTypeResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes alert type",
                "tags": [
                    "AlertFeature"
                ]
            },
            "post": {
                "description": "stores alert types",
                "operationId": "CreateAlertType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAlertTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.CreateAlertTypeResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "stores alert types",
                "tags": [
                    "AlertFeature"
                ]
            },
            "put": {
                "description": "updates alert type by name and source",
                "operationId": "ModifyAlertType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyAlertTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyAlertTypeResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "updates alert type",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/types": {
            "delete": {
                "description": "deletes alert type",
                "operationId": "DeleteAlertTypes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/DeleteAlertTypeRequest"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/hal.DeleteAlertTypeResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes alert types",
                "tags": [
                    "AlertFeature"
                ]
            },
            "get": {
                "description": "request a list of all the alert types.",
                "operationId": "GetAllAlertTypes",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AlertTypes"
                                }
                            }
                        },
                        "description": "List of all alerts and notifications"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return all alert typess",
                "tags": [
                    "AlertFeature"
                ]
            },
            "post": {
                "description": "stores alert types",
                "operationId": "CreateAlertTypes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/CreateAlertTypeRequest"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/hal.CreateAlertTypeResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "stores alert types",
                "tags": [
                    "AlertFeature"
                ]
            },
            "put": {
                "description": "updates alert type by name and source",
                "operationId": "ModifyAlertTypes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ModifyAlertTypeRequest"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/hal.ModifyAlertTypeResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "updates alert types",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/types/{id}": {
            "delete": {
                "description": "deletes alert type by id",
                "operationId": "DeleteAlertTypeByID",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteAlertTypeResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes alert type",
                "tags": [
                    "AlertFeature"
                ]
            },
            "get": {
                "description": "requests a specific alert type",
                "operationId": "GetAlertType",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AlertType"
                                }
                            }
                        },
                        "description": "specific alert type"
                    }
                },
                "summary": "return alert type",
                "tags": [
                    "AlertFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of alert type",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "updates alert type by id",
                "operationId": "ModifyAlertTypeByID",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyAlertTypeRequestByID"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyAlertTypeResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "updates alert type",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/alerts/{id}": {
            "get": {
                "description": "requests a specific alert",
                "operationId": "GetAlert",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Alert"
                                }
                            }
                        },
                        "description": "specific alert"
                    }
                },
                "summary": "return alert",
                "tags": [
                    "AlertFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of alert",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/alert/v1/notifications": {
            "delete": {
                "description": "deletes notification config",
                "operationId": "DeleteNotificationConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteNotificationConfigurationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteNotificationConfigurationsResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes notification config",
                "tags": [
                    "AlertFeature"
                ]
            },
            "get": {
                "description": "Request a list of all the notifications.",
                "operationId": "GetAllNotifications",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.NotificationConfigurations"
                                }
                            }
                        },
                        "description": "List of all notifications"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all notifications",
                "tags": [
                    "AlertFeature"
                ]
            },
            "post": {
                "description": "Creates a new Notification Configuration from data provided",
                "operationId": "CreateNotificationConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationConfigCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.CreateNotificationConfigurationResponse"
                                }
                            }
                        },
                        "description": "id of the created notification"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Creates new Notification Config",
                "tags": [
                    "AlertFeature"
                ]
            },
            "put": {
                "description": "Updates an existing NotificationConfiguration",
                "operationId": "UpdateNotificationConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationConfigUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyNotificationConfigurationsResponse"
                                }
                            }
                        },
                        "description": "id of the created notification"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Updates Notification Config",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/notifications/suppress": {
            "post": {
                "description": "Suppresses the notifications with given ids",
                "operationId": "SuppressNotifications",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationIDList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyNotificationConfigurationsResponse"
                                }
                            }
                        },
                        "description": "id of the created notification"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Suppress Notifications",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/notifications/suppress/{id}": {
            "parameters": [
                {
                    "description": "uuid of notification",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Request to suppress given notification",
                "operationId": "SuppressNotification",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyNotificationConfigurationResponse"
                                }
                            }
                        },
                        "description": "Status of seen alert"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Set notification to suppressed",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/notifications/unsuppress": {
            "post": {
                "description": "Unsuppress the notifications with given ids",
                "operationId": "UnSuppressNotifications",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationIDList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyNotificationConfigurationsResponse"
                                }
                            }
                        },
                        "description": "id of the created notification"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Unsuppress Notifications",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/notifications/unsuppress/{id}": {
            "parameters": [
                {
                    "description": "uuid of notification",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Request to unsuppress given notification",
                "operationId": "UnSuppressNotification",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyNotificationConfigurationResponse"
                                }
                            }
                        },
                        "description": "Status of seen alert"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Set notification to unsuppressed",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/notifications/{id}": {
            "delete": {
                "description": "deletes notification by id",
                "operationId": "DeleteNotificationConfigByID",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteNotificationConfigurationsResponse"
                                }
                            }
                        },
                        "description": "Status of delete notification"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes notification",
                "tags": [
                    "AlertFeature"
                ]
            },
            "get": {
                "description": "requests a specific notification",
                "operationId": "GetNotification",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertResponse"
                                }
                            }
                        },
                        "description": "specific notification"
                    }
                },
                "summary": "return notification",
                "tags": [
                    "AlertFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of notification",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "updates notification by id",
                "operationId": "ModifyNotificationConfigByID",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyNotificationConfigurationsRequestByID"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ModifyNotificationConfigurationsResponse"
                                }
                            }
                        },
                        "description": "Status of updated notification config by id"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "updates notification",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/alert/v1/version": {
            "get": {
                "description": "request the schema version of the alert and notification feature.",
                "operationId": "GetAlertSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AlertVersionInfo"
                                }
                            }
                        },
                        "description": "Alert and notification feature schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return schema version",
                "tags": [
                    "AlertFeature"
                ]
            }
        },
        "/api/apm/openapi": {
            "get": {
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "returns OpenAPI spec for APM",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/apm/v1/policies": {
            "get": {
                "operationId": "GetPolicies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "policies": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/policies/b6bd0706-2865-4b6f-97e0-aac23df94ed6"
                                                    }
                                                },
                                                "created": "2021-05-06T18:37:14.698167Z",
                                                "deploymentStatus": "DRAFT",
                                                "description": "Description for the policy.",
                                                "generation": 1,
                                                "name": "SAML SP Service Access Policy",
                                                "policyId": "b6bd0706-2865-4b6f-97e0-aac23df94ed6",
                                                "policyType": "PerSession",
                                                "updated": "2021-05-06T18:37:14.698167Z"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/policies"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyList"
                                }
                            }
                        },
                        "description": "Returns the list of APM Policies."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns the list of all APM Policies.",
                "tags": [
                    "ApmFeature"
                ]
            },
            "post": {
                "operationId": "CreatePolicy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApmPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApmPolicy"
                                }
                            }
                        },
                        "description": "Request to create the policy has been accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create an APM Policy.",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/apm/v1/policies/{policyId}": {
            "delete": {
                "operationId": "DeletePolicy",
                "responses": {
                    "202": {
                        "description": "Request to delete the policy has been accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete the APM policy",
                "tags": [
                    "ApmFeature"
                ]
            },
            "get": {
                "operationId": "GetPolicy",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/policies/b6bd0706-2865-4b6f-97e0-aac23df94ed6"
                                        }
                                    },
                                    "created": "2021-05-06T18:37:14.698167Z",
                                    "deploymentStatus": "DRAFT",
                                    "description": "Description for the policy.",
                                    "generation": 1,
                                    "name": "SAML SP Service Access Policy",
                                    "policyID": "b6bd0706-2865-4b6f-97e0-aac23df94ed6",
                                    "policyType": "PerSession",
                                    "properties": [
                                        {
                                            "configuration": {
                                                "inactivityTimeout": 0,
                                                "maxSessionTimeout": 0,
                                                "name": "SAML SP Service Access Policy",
                                                "policy": {
                                                    "content": "{\"name\": \"policyName\", \"start\": {\"name\": \"SAML_Auth\", \"service\": {\"name\": \"Sample_SAML_SP_Service\", \"spURI\": \"https://app.f5demo.com\", \"entityId\": \"app.f5demo.com\", \"idpConnectors\": [{\"name\": \"First_IDP_Connector\"}], \"attributeConsumingServices\": [{\"name\": \"First_SAML_ACS\", \"attributes\": [], \"serviceName\": \"Academic Journals R US\"}]}, \"nextItems\": []}}"
                                                },
                                                "policyType": "PerSession",
                                                "profileType": "ltm-apm",
                                                "scope": "profile",
                                                "timeout": 200
                                            }
                                        }
                                    ],
                                    "updated": "2021-05-06T18:37:14.698167Z"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApmPolicy"
                                }
                            }
                        },
                        "description": "Returns the APM policy in a json format."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns the APM policy in a json format.",
                "tags": [
                    "ApmFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Unique ID for the policy.",
                    "in": "path",
                    "name": "policyId",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "operationId": "UpdatePolicy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApmPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApmPolicy"
                                }
                            }
                        },
                        "description": "Request to update the policy has been accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update the APM policy",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/apm/v1/sessions": {
            "get": {
                "operationId": "GetAllSessions",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/sessions/b6bd0706-2865-4b6f-97e0-aac23df94ed6"
                                        }
                                    },
                                    "clientIp": "172.18.1.96",
                                    "expirationTime": "2022-06-09T18:00:55Z",
                                    "hostname": "big-ip-next.com",
                                    "instanceId": "990cfa6e-e9cb-4e0d-bb1b-1dcd55f978d2",
                                    "policyName": "Start_Allow_Policy_bh_1",
                                    "sessionId": "48acfb53",
                                    "startTime": "2022-06-09T17:45:38Z",
                                    "status": "established",
                                    "user": ""
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SessionList"
                                }
                            }
                        },
                        "description": "Returns the list of active sessions on all discovered instances."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns the list of active sessions on all discovered instances",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/apm/v1/sessions/{instanceId}": {
            "get": {
                "operationId": "GetSessions",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/sessions/b6bd0706-2865-4b6f-97e0-aac23df94ed6"
                                        }
                                    },
                                    "clientIp": "172.18.1.96",
                                    "expirationTime": "2022-06-09T18:00:55Z",
                                    "hostname": "big-ip-next.com",
                                    "instanceId": "990cfa6e-e9cb-4e0d-bb1b-1dcd55f978d2",
                                    "policyName": "Start_Allow_Policy_bh_1",
                                    "sessionId": "48acfb53",
                                    "startTime": "2022-06-09T17:45:38Z",
                                    "status": "established",
                                    "user": ""
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SessionList"
                                }
                            }
                        },
                        "description": "Returns the list of active sessions in a json format."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns the list of active sessions in a json format.",
                "tags": [
                    "ApmFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Unique BIG-IP Next instance ID for the session in which it is generated.",
                    "in": "path",
                    "name": "instanceId",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/apm/v1/sessions/{instanceId}/{sessionId}": {
            "delete": {
                "operationId": "TerminateSession",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "message": "Session <sessionId> successfully terminated on BIG-IP Next instance <instanceId>."
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SessionMessage"
                                }
                            }
                        },
                        "description": "Active session on the BIG-IP Next instance is terminated."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Terminate the active session on the BIG-IP Next instance",
                "tags": [
                    "ApmFeature"
                ]
            },
            "get": {
                "operationId": "GetSession",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/sessions/b6bd0706-2865-4b6f-97e0-aac23df94ed6"
                                        }
                                    },
                                    "clientIp": "172.18.1.96",
                                    "expirationTime": "2022-06-09T18:00:55Z",
                                    "hostname": "big-ip-next.com",
                                    "policyName": "Start_Allow_Policy_bh_1",
                                    "sessionId": "48acfb53",
                                    "startTime": "2022-06-09T17:45:38Z",
                                    "status": "established",
                                    "user": ""
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Session"
                                }
                            }
                        },
                        "description": "Returns the active session in a json format."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns the active session in a json format.",
                "tags": [
                    "ApmFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Unique BIG-IP Next instance ID for the session in which it is generated.",
                    "in": "path",
                    "name": "instanceId",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "Unique session ID for the session on the BIG-IP Next instance.",
                    "in": "path",
                    "name": "sessionId",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/apm/v1/sessions/{instanceId}/{sessionId}/variables": {
            "get": {
                "operationId": "GetSessionVariables",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "session.access.named_scope": "",
                                    "session.access.profile": "297f395d-ebdf-548c-a7eb-38299270f1e9",
                                    "session.access.profile_name": "my_access_policy",
                                    "session.access.profileid": "297f395d-ebdf-548c-a7eb-38299270f1e9",
                                    "session.access.profiletype": "2",
                                    "session.access.scope": "2",
                                    "session.client.activex": "0",
                                    "session.client.browscap_info": "uimode=0&ctype=unknown&cversion=0&cjs=0&cactivex=0&cplugin=0&cplatform=unknown&cpu=unknown&ccustom_protocol=0",
                                    "session.client.cpu": "unknown",
                                    "session.client.custom_protocol": "0",
                                    "session.client.js": "0",
                                    "session.client.platform": "unknown",
                                    "session.client.plugin": "0",
                                    "session.client.type": "unknown",
                                    "session.client.version": "0",
                                    "session.createdfrom": "ACCESS",
                                    "session.edgeclient.scripting.logoff.params": "",
                                    "session.ha_unit": " 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000",
                                    "session.inactivity_timeout": "900",
                                    "session.keydb.current": "532a43389615110f459da9d2adbb118e",
                                    "session.keydb.final": "fdcdb63fd9a1a6066d32624fadbb118e",
                                    "session.logon.last.username": "joe",
                                    "session.max_session_timeout": "604800",
                                    "session.policy.result": "not_started",
                                    "session.server.landinguri": "/",
                                    "session.server.listener.name": "30d1132b-c203-5979-bb5b-00071d6551df",
                                    "session.server.network.name": "10.0.66.159",
                                    "session.server.network.port": "80",
                                    "session.server.network.protocol": "http",
                                    "session.snapshotid": "6d12e33910f_1ooooooooooooooooooo",
                                    "session.state": "allow",
                                    "session.stats.bytes.in": "0",
                                    "session.stats.bytes.out": "0",
                                    "session.stats.egress.compressed": "0",
                                    "session.stats.egress.raw": "0",
                                    "session.stats.ingress.compressed": "0",
                                    "session.stats.ingress.raw": "0",
                                    "session.stats.packets.in": "0",
                                    "session.stats.packets.out": "0",
                                    "session.timeout": "eval_timed_out",
                                    "session.ui.lang": "en",
                                    "session.ui.mode": "0",
                                    "session.user.agent": "curl/7.68.0",
                                    "session.user.clientip": "201.12.12.10",
                                    "session.user.display_sessionid": "adbb118e",
                                    "session.user.expirationtime": "1654568309",
                                    "session.user.sessionid": "adbb118e",
                                    "session.user.starttime": "1654562309"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SessionVariables"
                                }
                            }
                        },
                        "description": "Returns the active session variables in a json format."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns the active session variables in a json format.",
                "tags": [
                    "ApmFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Unique BIG-IP Next instance ID for the session in which it is generated.",
                    "in": "path",
                    "name": "instanceId",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "Unique session ID for the session on the BIG-IP Next instance.",
                    "in": "path",
                    "name": "sessionId",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/apm/v1/tasks/export/saml-sp": {
            "post": {
                "operationId": "ExportSamlSp",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "acsBinding": "http-artifact",
                                "allowNameIdentifierCreation": true,
                                "authCtxComparisonType": "exact",
                                "entityId": "https://access.testing.com",
                                "forceAuthn": false,
                                "isAuthnRequestSigned": true,
                                "name": "testSamlSpExport",
                                "nameIdFormat": "emailAddress",
                                "nameIdSpNameQualifier": "testNameIdSp",
                                "providerName": "ProviderName",
                                "relayState": "RelayState",
                                "spURI": "https://access.spurittesingig.com",
                                "wantAssertionEncrypted": false,
                                "wantAssertionSigned": true
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ExportSamlSpRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "metadata": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <EntityDescription xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"fd9f2d4d-b781-4609-8806-3ff378d4530d\" entityID=\"https://access.testing.com\">\n   <SPSSODescriptor AuthnRequestsSigned=\"true\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"></SPSSODescriptor>\n   <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://access.spurittesingig.com/saml/sp/profile/post/sls\" ResponseLocation=\"https://access.spurittesingig.com/saml/sp/profile/post/slr\"></SingleLogoutService>\n   <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://access.spurittesingig.com/saml/sp/profile/redirect/sls\" ResponseLocation=\"https://access.spurittesingig.com/saml/sp/profile/redirect/slr\"></SingleLogoutService>\n   <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress</NameIDFormat>\n   <AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:http-artifact\" Location=\"https://access.spurittesingig.com/saml/sp/profile/post/acs\" Index=\"0\" isDefault=\"true\"></AssertionConsumerService>\n </EntityDescription>",
                                    "name": "testSamlSpExport"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ExportSamlSpResponse"
                                }
                            }
                        },
                        "description": "Return contents of a service provider xml metadata."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Read service provider details from JSON and returns service provider metadata.",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/apm/v1/tasks/import/idp-connector": {
            "post": {
                "operationId": "ImportIdpConnector",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportIdpConnectorRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "policy/profile/external-servers/saml-idp-connector.yaml#/components/schemas/saml-idp-connector"
                                }
                            }
                        },
                        "description": "Return contents of an Idp connector."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Extract identity provider details from metadata and returns idpConnector as JSON.",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/apm/v1/version": {
            "get": {
                "operationId": "GetApmSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApmVersionInfo"
                                }
                            }
                        },
                        "description": "APM schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns apm schema version",
                "tags": [
                    "ApmFeature"
                ]
            }
        },
        "/api/as3-workflow/openapi": {
            "get": {
                "description": "Requests the OpenAPI specification of AS3 workflow feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification response"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/deployment-tasks": {
            "get": {
                "description": "Requests a list of all AS3 workflow deployment tasks.",
                "operationId": "GetDeploymentTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/deployment-tasks/e7d28575-5076-4db2-b2a9-3eb42092996a"
                                                    }
                                                },
                                                "completed": "2021-09-20T12:13:38.231776-07:00",
                                                "created": "2021-09-20T12:13:34.88109-07:00",
                                                "deviceId": "d843528f-3d2f-4a58-a87e-7964bcb4b02f",
                                                "docId": "1cee64f7-78bf-457d-a5c7-4aeb372eb78e",
                                                "failure_reason": "unable to find the tenant name",
                                                "id": "e7d28575-5076-4db2-b2a9-3eb42092996a",
                                                "name": "",
                                                "result": {},
                                                "state": "dpDoDeployment",
                                                "status": "failed",
                                                "wfType": "as3"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/deployment-tasks/71dae484-60f0-48a5-9ed9-287a8ee06717"
                                                    }
                                                },
                                                "completed": "2021-09-20T12:09:17.472756-07:00",
                                                "created": "2021-09-20T12:09:15.406312-07:00",
                                                "deviceId": "d843528f-3d2f-4a58-a87e-7964bcb4b02f",
                                                "docId": "1cee64f7-78bf-457d-a5c7-4aeb372eb78e",
                                                "failure_reason": "",
                                                "id": "71dae484-60f0-48a5-9ed9-287a8ee06717",
                                                "name": "",
                                                "result": {
                                                    "code": 200,
                                                    "declaration": {
                                                        "class": "ADC",
                                                        "id": "qVRsrYut-TLsi-ZGSN-PVSB-zxyBRoVGtgCl",
                                                        "schemaVersion": "3.12.0",
                                                        "tActodryLegal": {
                                                            "class": "Tenant",
                                                            "leagalApp": {
                                                                "class": "Application",
                                                                "leagalApp_web_pool": {
                                                                    "class": "Pool",
                                                                    "loadBalancingMode": "round-robin",
                                                                    "members": [
                                                                        {
                                                                            "serverAddresses": [
                                                                                "10.20.5.8"
                                                                            ],
                                                                            "servicePort": 80
                                                                        }
                                                                    ],
                                                                    "monitors": [
                                                                        "http"
                                                                    ]
                                                                },
                                                                "serviceMain": {
                                                                    "class": "Service_HTTP",
                                                                    "enable": true,
                                                                    "persistenceMethods": [
                                                                        "source-address"
                                                                    ],
                                                                    "pool": "leagalApp_web_pool",
                                                                    "snat": "auto",
                                                                    "virtualAddresses": [
                                                                        "100.7.8.9"
                                                                    ],
                                                                    "virtualPort": 80
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "message": "success"
                                                },
                                                "state": "dpDone",
                                                "status": "completed",
                                                "wfType": "as3"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/deployment-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeploymentTasks"
                                }
                            }
                        },
                        "description": "List of all AS3 workflow deployment tasks"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all deployment tasks",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/deployment-tasks/{taskID}": {
            "get": {
                "description": "Requests a specific AS3 workflow deployment task.",
                "operationId": "GetDeploymentTask",
                "parameters": [
                    {
                        "description": "UUID of deployment task",
                        "in": "path",
                        "name": "taskID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/deployment-tasks/b52091bd-8dab-48f8-adf6-18a928a00b7e"
                                        }
                                    },
                                    "completed": "2021-03-10T01:18:38.957089Z",
                                    "created": "2021-03-10T01:18:38.689427Z",
                                    "created_deployment_id": "8db6f770-46f2-4045-97e3-30c0d098a5f2,",
                                    "created_deployment_path": "/v1/deployments/8db6f770-46f2-4045-97e3-30c0d098a5f2,",
                                    "device_id": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39",
                                    "failure_reason": "",
                                    "id": "b52091bd-8dab-48f8-adf6-18a928a00b7e",
                                    "name": "",
                                    "result": {},
                                    "state": "dpDone",
                                    "status": "completed",
                                    "template_params_id": "8ea27944-2e7b-44f6-a532-750c66e1fd35"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeploymentTask"
                                }
                            }
                        },
                        "description": "Specified AS3 workflow deployment task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a deployment task",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/deployments": {
            "get": {
                "description": "Requests a list of all AS3 deployments.",
                "operationId": "GetDeployments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "deployments": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/deployments/1b2e755b-d88d-4e42-8fb8-ae93452dba50"
                                                    }
                                                },
                                                "created": "2021-03-09T23:23:31.087933Z",
                                                "description": "simple http deployment",
                                                "device_id": "4c97535d-7b79-4027-9950-2c01dc8a0e6c",
                                                "id": "1b2e755b-d88d-4e42-8fb8-ae93452dba50",
                                                "name": "http-lb-deployment",
                                                "template_params_id": "03291b29-a7b9-4742-acfd-fb2bb1e8483c",
                                                "template_params_version": 1,
                                                "tenant_name": "TenantName1"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/deployments/e412dff4-063e-429a-a48d-ae95e9ac30e8"
                                                    }
                                                },
                                                "created": "2021-04-09T23:23:31.998933Z",
                                                "description": "simple AS3 deployment",
                                                "device_id": "8c97535d-7b79-4027-9950-2c01dc8a0e8a",
                                                "id": "e412dff4-063e-429a-a48d-ae95e9ac30e8",
                                                "name": "simple-http-deployment",
                                                "template_params_id": "73291b29-a7b9-4742-acfd-fb2bb1e8483c",
                                                "template_params_version": 2,
                                                "tenant_name": "TenantName2"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/deployments"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Deployments"
                                }
                            }
                        },
                        "description": "List of all AS3 deployments"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all AS3 deployments",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "post": {
                "description": "Creates an AS3 workflow deployment.",
                "operationId": "CreateDeploymentTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "device_id": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39",
                                "template_params_id": "8ea27944-2e7b-44f6-a532-750c66e1fd35",
                                "wf_type": "as3"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateDeploymentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/DeploymentTaskCreated"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a deployment",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/deployments/dry-run": {
            "post": {
                "description": "Creates an AS3 workflow dry-run without deploying the task.",
                "operationId": "CreateDryRunTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "device_id": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39",
                                "template_params_id": "8ea27944-2e7b-44f6-a532-750c66e1fd35",
                                "wf_type": "as3"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateDeploymentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/DeploymentTaskCreated"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create an AS3 workflow dry-run. Dry-run sends the declaration through all validation checks but does not attempt to deploy the configuration on the target device",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/deployments/{deploymentID}": {
            "delete": {
                "description": "Removes a specific AS3 application deployment.",
                "operationId": "DeleteDeploymentTask",
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/DeploymentTaskCreated"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete AS3 application deployment",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "get": {
                "description": "Requests a specific AS3 deployment.",
                "operationId": "GetDeployment",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/deployments/1b2e755b-d88d-4e42-8fb8-ae93452dba50"
                                        }
                                    },
                                    "created": "2021-03-09T23:23:31.087933Z",
                                    "description": "simple http deployment",
                                    "device_id": "4c97535d-7b79-4027-9950-2c01dc8a0e6c",
                                    "id": "1b2e755b-d88d-4e42-8fb8-ae93452dba50",
                                    "name": "http-lb-deployment",
                                    "template_params_id": "03291b29-a7b9-4742-acfd-fb2bb1e8483c",
                                    "template_params_version": 1,
                                    "tenant_name": "TenantName"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Deployment"
                                }
                            }
                        },
                        "description": "Specific AS3 deployment"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a deployment",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of AS3 deployment",
                    "in": "path",
                    "name": "deploymentID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Edits a specific AS3 application deployment.",
                "operationId": "EditDeploymentTask",
                "parameters": [
                    {
                        "description": "The action to be performed during deployment. This may be a deploy or dry-run action. If the action parameter is omitted, then a deploy action is performed by default.",
                        "examples": {
                            "example1": {
                                "value": "action=deploy"
                            },
                            "example2": {
                                "value": "action=dry-run"
                            }
                        },
                        "in": "query",
                        "name": "action",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "template_params_id": "8ea27944-2e7b-44f6-a532-750c66e1fd35",
                                "wf_type": "as3"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/EditDeploymentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/DeploymentTaskCreated"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Edit AS3 application deployment",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/parameters": {
            "get": {
                "description": "Requests a list of all AS3 workflow template parameters.",
                "operationId": "GetAllTemplateParams",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "templateParameters": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/parameters/ca7d0609-59aa-4c28-81ee-941ef7e40484"
                                                    }
                                                },
                                                "created": "2021-06-04T05:39:14.424594Z",
                                                "description": null,
                                                "id": "ca7d0609-59aa-4c28-81ee-941ef7e40484",
                                                "name": "example-template-parameters",
                                                "parameters": {
                                                    "application_name": "ApplicationName",
                                                    "server_addresses": [
                                                        "10.11.22.33"
                                                    ],
                                                    "service_port": 80,
                                                    "tenant_name": "TenantName",
                                                    "virtual_address": "10.22.11.1",
                                                    "virtual_port": 20
                                                },
                                                "sourceDeviceID": "ceed034c-07a4-45d6-a3eb-82ef2b3b5c3c",
                                                "templateID": "5d58225e-98e5-4802-97ca-2f7b7a88342f",
                                                "version": "1",
                                                "wfType": "as3"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/parameters"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AllTemplateParams"
                                }
                            }
                        },
                        "description": "List of all AS3 workflow template parameters"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all template parameters",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "post": {
                "description": "Creates the AS3 workflow template parameters.",
                "operationId": "CreateTemplateParams",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "example1": {
                                    "value": {
                                        "description": "A set of template parameters used to deploy an application based on a template.",
                                        "name": "AS3 template parameters based on a template",
                                        "parameters": {
                                            "application_name": "ApplicationName",
                                            "server_addresses": [
                                                "1.2.3.1",
                                                "1.2.3.2"
                                            ],
                                            "service_port": 1234,
                                            "tenant_name": "TenantName",
                                            "virtual_address": "4.3.2.1",
                                            "virtual_port": 4321
                                        },
                                        "template_id": "e412dff4-063e-429a-a48d-ae95e9ac30e8"
                                    }
                                },
                                "example2": {
                                    "value": {
                                        "description": "A set of template parameters used to deploy an application",
                                        "name": "AS3 template parameters with blank parameters",
                                        "parameters": {},
                                        "template_id": "e412dff4-063e-429a-a48d-ae95e9ac30e8"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateTemplateParamsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/parameters"
                                        }
                                    },
                                    "id": "ca7d0609-59aa-4c28-81ee-941ef7e40484",
                                    "name": "example-template-parameters",
                                    "parameters": {
                                        "application_name": "ApplicationName",
                                        "server_addresses": [
                                            "1.2.3.1",
                                            "1.2.3.2"
                                        ],
                                        "service_port": 1234,
                                        "tenant_name": "TenantName",
                                        "virtual_address": "4.3.2.1",
                                        "virtual_port": 4321
                                    },
                                    "source_device_id": "ceed034c-07a4-45d6-a3eb-82ef2b3b5c3c",
                                    "template_id": "5d58225e-98e5-4802-97ca-2f7b7a88342f"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateParams"
                                }
                            }
                        },
                        "description": "AS3 Workflow template parameters created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create template parameters",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/parameters/{paramsID}": {
            "delete": {
                "description": "Removes a specific AS3 workflow template parameters.",
                "operationId": "DeleteTemplateParams",
                "parameters": [
                    {
                        "description": "UUID of AS3 workflow template parameters",
                        "in": "path",
                        "name": "paramsID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted AS3 workflow template parameters"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove template parameters",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "get": {
                "description": "Requests specific AS3 workflow template parameters.",
                "operationId": "GetTemplateParams",
                "parameters": [
                    {
                        "description": "UUID of the AS3 workflow template parameters",
                        "in": "path",
                        "name": "paramsID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "description": "A set of template parameters used to deploy an application based on a template.",
                                    "name": "AS3 template parameters based on a template",
                                    "parameters": {
                                        "application_name": "ApplicationName",
                                        "server_addresses": [
                                            "1.2.3.1",
                                            "1.2.3.2"
                                        ],
                                        "service_port": 1234,
                                        "tenant_name": "TenantName",
                                        "virtual_address": "4.3.2.1",
                                        "virtual_port": 4321
                                    },
                                    "source_device_id": "92cbcfd2-16f6-4f49-98cd-545ca92b81f1",
                                    "template_id": "e412dff4-063e-429a-a48d-ae95e9ac30e8"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateParams"
                                }
                            }
                        },
                        "description": "Specified AS3 workflow template parameters"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return specific template parameters",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "put": {
                "description": "Updates specific AS3 workflow template parameters.",
                "operationId": "UpdateTemplateParams",
                "parameters": [
                    {
                        "description": "UUID of AS3 workflow template parameters",
                        "in": "path",
                        "name": "paramsID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "id": "8ea27944-2e7b-44f6-a532-750c66e1fd35",
                                "name": "example-template-parameters",
                                "parameters": {
                                    "application_name": "ApplicationName",
                                    "server_addresses": [
                                        "10.11.22.33"
                                    ],
                                    "service_port": 80,
                                    "tenant_name": "TenanatName",
                                    "virtual_address": "10.22.11.1",
                                    "virtual_port": 20
                                },
                                "source_device_id": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/TemplateParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/parameters/ca7d0609-59aa-4c28-81ee-941ef7e40484"
                                        }
                                    },
                                    "description": "",
                                    "id": "ca7d0609-59aa-4c28-81ee-941ef7e40484",
                                    "name": "example-template-parameters",
                                    "parameters": {
                                        "application_name": "ApplicationName",
                                        "server_addresses": [
                                            "10.11.22.33"
                                        ],
                                        "service_port": 80,
                                        "tenant_name": "TenantName",
                                        "virtual_address": "10.22.11.1",
                                        "virtual_port": 20
                                    },
                                    "source_device_id": "ceed034c-07a4-45d6-a3eb-82ef2b3b5c3c",
                                    "template_id": "5d58225e-98e5-4802-97ca-2f7b7a88342f"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateParams"
                                }
                            }
                        },
                        "description": "Updated AS3 workflow template parameters"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "The operation is not permitted because it would change the template. You cannot change the template.",
                                    "status": 400
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update template parameters",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/schemas": {
            "get": {
                "description": "Requests a list of all AS3 workflow schema tasks.",
                "operationId": "GetSchemaTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/schemas/c406e4c6-0fea-4cf9-972c-4ebfb1635a7c"
                                                    }
                                                },
                                                "completed": "2021-03-10T00:51:44.63985Z",
                                                "created": "2021-03-10T00:51:43.471166Z",
                                                "deviceId": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39",
                                                "failureReason": "",
                                                "id": "c406e4c6-0fea-4cf9-972c-4ebfb1635a7c",
                                                "name": "",
                                                "parameters": {
                                                    "definitions": {},
                                                    "description": "Example AS3\napplication",
                                                    "properties": {
                                                        "application_name": {
                                                            "default": "",
                                                            "type": "string"
                                                        },
                                                        "network_name": {
                                                            "default": "",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "application_name",
                                                        "network_name"
                                                    ],
                                                    "title": "Example\nAS3 application",
                                                    "type": "object"
                                                },
                                                "state": "csUpdatingTask",
                                                "status": "completed",
                                                "templateId": "e412dff4-063e-429a-a48d-ae95e9ac30e8",
                                                "wfType": "as3"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/schemas"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SchemaTasks"
                                }
                            }
                        },
                        "description": "List of all AS3 workflow schema tasks"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all schema tasks",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "post": {
                "description": "Creates an AS3 workflow schema.",
                "operationId": "CreateSchemaTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "device_id": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39",
                                "template_id": "e412dff4-063e-429a-a48d-ae95e9ac30e8",
                                "wf_type": "as3"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateSchemaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/schemas"
                                        }
                                    },
                                    "path": "/v1/schemas/c406e4c6-0fea-4cf9-972c-4ebfb1635a7c"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Request accepted and schema task created. Poll the link in the response to confirm the task status."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "code": 400,
                                            "message": "Request body has an error: doesn't match the schema: Error at \"/template_id\":JSON string doesn't match the format 'uuid (regular expression `^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$`)'"
                                        }
                                    },
                                    "example2": {
                                        "value": {
                                            "message": "unknown device ID 89f7b652-b0f3-49bc-8019-8d5fc486b653",
                                            "status": 400
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a schema",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/schemas/{taskID}": {
            "get": {
                "description": "Requests a specific AS3 workflow schema task.",
                "operationId": "GetSchemaTask",
                "parameters": [
                    {
                        "description": "UUID of schema task",
                        "in": "path",
                        "name": "taskID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/schemas/c406e4c6-0fea-4cf9-972c-4ebfb1635a7c"
                                                }
                                            },
                                            "completed": "2021-03-10T00:51:44.63985Z",
                                            "created": "2021-03-10T00:51:43.471166Z",
                                            "deviceId": "6ecdbb6f-dba0-4215-9fc8-f3f5dd7a7e39",
                                            "failureReason": "",
                                            "id": "c406e4c6-0fea-4cf9-972c-4ebfb1635a7c",
                                            "name": "",
                                            "parameters": {
                                                "definitions": {},
                                                "description": "Example AS3 application",
                                                "properties": {
                                                    "application_name": {
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "network_name": {
                                                        "default": "",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "application_name",
                                                    "network_name"
                                                ],
                                                "title": "Example\nAS3 application",
                                                "type": "object"
                                            },
                                            "state": "csUpdatingTask",
                                            "status": "completed",
                                            "templateId": "e412dff4-063e-429a-a48d-ae95e9ac30e8",
                                            "wfType": "as3"
                                        }
                                    },
                                    "example2": {
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/schemas/c572d8a5-817d-47dd-878d-0208c728e778"
                                                }
                                            },
                                            "completed": "2021-03-11T16:14:48.229622Z",
                                            "created": "2021-03-11T16:14:48.114078Z",
                                            "deviceId": "387f2029-4b62-421b-89d2-4fa91cec6b48",
                                            "failureReason": "unknown template ID 152e3043-0166-41ef-a86b-68b16671db97",
                                            "id": "c572d8a5-817d-47dd-878d-0208c728e778",
                                            "name": "",
                                            "parameters": null,
                                            "state": "csGettingTemplate",
                                            "status": "failed",
                                            "templateId": "152e3043-0166-41ef-a86b-68b16671db97",
                                            "wfType": "as3"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SchemaTask"
                                }
                            }
                        },
                        "description": "Specific AS3 workflow schema task"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a schema task",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/template-tasks": {
            "get": {
                "description": "Requests a list of all AS3 workflow template tasks.",
                "operationId": "GetTemplateTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/template-tasks/88daf51f-337b-482c-a838-f029d09bdd15"
                                                    }
                                                },
                                                "completed": "2021-03-30T18:01:04.690542Z",
                                                "content": "template: |\n{\n  \"class\": \"AS3\",\n    \"action\": \"deploy\",\n    \"persist\": true,\n    \"declaration\": {\n      \"class\": \"ADC\",\n      \"schemaVersion\": \"3.0.0\",\n      \"{{tenant_name}}\": {\n        \"class\": \"Tenant\",\n        \"{{application_name}}\": {\n          \"class\": \"Application\",\n          \"template\": \"http\",\n          \"serviceMain\": {\n            \"class\": \"Service_HTTP\",\n            \"virtualPort\": {{virtual_port::integer}},\n            \"virtualAddresses\": [\"{{virtual_address}}\"],\n            \"pool\": \"{{application_name}}_web_pool\"\n          },\n          \"{{application_name}}_web_pool\": {\n            \"class\": \"Pool\",\n            \"monitors\": [\n              \"http\"\n            ],\n            \"members\": [\n              {\n                \"servicePort\": {{service_port::integer}},\n                \"serverAddresses\": {{server_addresses::array}}\n              }\n          ]\n        }\n      }\n    }\n  }\n}",
                                                "created": "2021-03-30T18:01:04.323932Z",
                                                "created_template_id": "56cd7436-b5ee-4be4-8680-70210515dda7",
                                                "created_template_path": "/v1/templates/56cd7436-b5ee-4be4-8680-70210515dda7",
                                                "description": "",
                                                "failure_reason": "",
                                                "id": "88daf51f-337b-482c-a838-f029d09bdd15",
                                                "name": "example-AS3-template",
                                                "state": "csUpdatingTemplateTask",
                                                "status": "completed",
                                                "type": "as3"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/template-tasks/227b7b21-ff4b-4431-a6b0-1382a80276bc"
                                                    }
                                                },
                                                "completed": "2021-03-30T18:37:54.207792Z",
                                                "created": "2021-03-30T18:37:54.167755Z",
                                                "description": "",
                                                "failure_reason": "Message requires a template string and optionally a parameters object",
                                                "id": "227b7b21-ff4b-4431-a6b0-1382a80276bc",
                                                "name": "example-template",
                                                "state": "csValidatingTemplate",
                                                "status": "failed",
                                                "type": "as3"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/template-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.CreateTemplateTasks"
                                }
                            }
                        },
                        "description": "List of all template tasks"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all template tasks",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/template-tasks/{id}": {
            "get": {
                "description": "Requests a specific AS3 workflow template task.",
                "operationId": "GetTemplateTask",
                "parameters": [
                    {
                        "description": "UUID of template task",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/template-tasks/529dc4b2-04a8-440c-98ce-dd57ebb93fe1"
                                                }
                                            },
                                            "completed": "2021-04-02T05:41:15.28481Z",
                                            "content": "template: |\n      {\n        \"operations\": [\n          {\n            \"method\": \"PUT\",\n            \"path\": \"/applications\",\n            \"body\": {\n              \"name\": \"{{application_name}}\"\n            }\n          },\n          {\n            \"method\": \"PUT\",\n            \"path\": \"/networks\",\n            \"body\": {\n              \"name\": \"{{network_name}}\"\n            }\n          }\n        ]\n      }",
                                            "created": "2021-04-02T05:41:14.862024Z",
                                            "created_template_id": "f7b245e5-0889-4729-9fb9-bc5d2a76ffa4",
                                            "created_template_path": "/v1/templates/f7b245e5-0889-4729-9fb9-bc5d2a76ffa4",
                                            "description": "sample",
                                            "failure_reason": "",
                                            "id": "529dc4b2-04a8-440c-98ce-dd57ebb93fe1",
                                            "name": "example-template",
                                            "state": "csUpdatingTemplateTask",
                                            "status": "completed",
                                            "type": "as3"
                                        }
                                    },
                                    "example2": {
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/template-tasks/227b7b21-ff4b-4431-a6b0-1382a80276bc"
                                                }
                                            },
                                            "completed": "2021-03-30T18:37:54.207792Z",
                                            "created": "2021-03-30T18:37:54.167755Z",
                                            "failure_reason": "Message requires a template string and optionally a parameters object",
                                            "id": "227b7b21-ff4b-4431-a6b0-1382a80276bc",
                                            "name": "example-template",
                                            "state": "csValidatingTemplate",
                                            "status": "failed",
                                            "type": "as3"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.CreateTemplateTask"
                                }
                            }
                        },
                        "description": "A create template task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a template task",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/templates": {
            "get": {
                "description": "Requests a list of all AS3 workflow templates.",
                "operationId": "GetTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "templates": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/templates/0b2e755b-d88d-4e42-8fb8-ae93452dba50"
                                                    }
                                                },
                                                "content": "template: |\n      {\n        \"class\": \"AS3\",\n          \"action\": \"deploy\",\n          \"persist\": true,\n          \"declaration\": {\n            \"class\": \"ADC\",\n            \"schemaVersion\": \"3.0.0\",\n            \"{{tenant_name}}\": {\n              \"class\": \"Tenant\",\n              \"{{application_name}}\": {\n                \"class\": \"Application\",\n                \"template\": \"http\",\n                \"serviceMain\": {\n                  \"class\": \"Service_HTTP\",\n                  \"virtualPort\": {{virtual_port::integer}},\n                  \"virtualAddresses\": [\"{{virtual_address}}\"],\n                  \"pool\": \"{{application_name}}_web_pool\"\n                },\n                \"{{application_name}}_web_pool\": {\n                  \"class\": \"Pool\",\n                  \"monitors\": [\n                    \"http\"\n                  ],\n                  \"members\": [\n                    {\n                      \"servicePort\": {{service_port::integer}},\n                      \"serverAddresses\": {{server_addresses::array}}\n                    }\n                ]\n              }\n            }\n          }\n        }\n      }",
                                                "created": "2021-03-09T23:23:31.087933Z",
                                                "description": "simple http load balancer",
                                                "id": "0b2e755b-d88d-4e42-8fb8-ae93452dba50",
                                                "name": "http-lb",
                                                "published": false,
                                                "type": "as3"
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Templates"
                                }
                            }
                        },
                        "description": "List of all AS3 workflow templates"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all templates",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "post": {
                "description": "Creates an AS3 workflow template.",
                "operationId": "RunCreateTemplateTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "content": "template: |\n  {\n    \"class\": \"AS3\",\n      \"action\": \"deploy\",\n      \"persist\": true,\n      \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.0.0\",\n        \"{{tenant_name}}\": {\n          \"class\": \"Tenant\",\n          \"{{application_name}}\": {\n            \"class\": \"Application\",\n            \"template\": \"http\",\n            \"serviceMain\": {\n              \"class\": \"Service_HTTP\",\n              \"virtualPort\": {{virtual_port::integer}},\n              \"virtualAddresses\": [\"{{virtual_address}}\"],\n              \"pool\": \"{{application_name}}_web_pool\"\n            },\n            \"{{application_name}}_web_pool\": {\n              \"class\": \"Pool\",\n              \"monitors\": [\n                \"http\"\n              ],\n              \"members\": [\n                {\n                  \"servicePort\": {{service_port::integer}},\n                  \"serverAddresses\": {{server_addresses::array}}\n                }\n            ]\n          }\n        }\n      }\n    }\n  }",
                                "description": "optional template description",
                                "name": "example-AS3-template",
                                "published": false,
                                "type": "as3"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "request body has an error doesn't match the schema: Error at 'type:' value is not one of the allowed values",
                                    "status": 400
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a template",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/templates/{templateID}": {
            "delete": {
                "description": "Removes a specific AS3 workflow template.",
                "operationId": "DeleteTemplate",
                "responses": {
                    "204": {
                        "description": "template deleted succesfully"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a template",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "get": {
                "description": "Requests a specific AS3 workflow template.",
                "operationId": "GetTemplate",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/templates/0b2e755b-d88d-4e42-8fb8-ae93452dba50"
                                        }
                                    },
                                    "content": "template: |\n      {\n        \"class\": \"AS3\",\n          \"action\": \"deploy\",\n          \"persist\": true,\n          \"declaration\": {\n            \"class\": \"ADC\",\n            \"schemaVersion\": \"3.0.0\",\n            \"{{tenant_name}}\": {\n              \"class\": \"Tenant\",\n              \"{{application_name}}\": {\n                \"class\": \"Application\",\n                \"template\": \"http\",\n                \"serviceMain\": {\n                  \"class\": \"Service_HTTP\",\n                  \"virtualPort\": {{virtual_port::integer}},\n                  \"virtualAddresses\": [\"{{virtual_address}}\"],\n                  \"pool\": \"{{application_name}}_web_pool\"\n                },\n                \"{{application_name}}_web_pool\": {\n                  \"class\": \"Pool\",\n                  \"monitors\": [\n                    \"http\"\n                  ],\n                  \"members\": [\n                    {\n                      \"servicePort\": {{service_port::integer}},\n                      \"serverAddresses\": {{server_addresses::array}}\n                    }\n                ]\n              }\n            }\n          }\n        }\n      }",
                                    "description": "simple http load balancer",
                                    "id": "0b2e755b-d88d-4e42-8fb8-ae93452dba50",
                                    "name": "http-lb",
                                    "published": false,
                                    "wf_type": "as3"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Template"
                                }
                            }
                        },
                        "description": "Specific AS3 workflow template"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a template",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of AS3 workflow template",
                    "in": "path",
                    "name": "templateID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Edits an AS3 workflow template.",
                "operationId": "RunEditTemplateTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "content": "template: |\n  {\n    \"class\": \"AS3\",\n      \"action\": \"deploy\",\n      \"persist\": true,\n      \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.0.0\",\n        \"{{tenant_name}}\": {\n          \"class\": \"Tenant\",\n          \"{{application_name}}\": {\n            \"class\": \"Application\",\n            \"template\": \"http\",\n            \"serviceMain\": {\n              \"class\": \"Service_HTTP\",\n              \"virtualPort\": {{virtual_port::integer}},\n              \"virtualAddresses\": [\"{{virtual_address}}\"],\n              \"pool\": \"{{application_name}}_web_pool\"\n            },\n            \"{{application_name}}_web_pool\": {\n              \"class\": \"Pool\",\n              \"monitors\": [\n                \"http\"\n              ],\n              \"members\": [\n                {\n                  \"servicePort\": {{service_port::integer}},\n                  \"serverAddresses\": {{server_addresses::array}}\n                }\n            ]\n          }\n        }\n      }\n    }\n  }",
                                "description": "An updated description",
                                "name": "example-AS3-template",
                                "published": true,
                                "type": "as3"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/EditTemplateTask"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "failed to edit template.",
                                    "status": 400
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "bad request"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Edit a template",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/as3-workflow/v1/version": {
            "get": {
                "description": "Requests the AS3 workflow schema version.",
                "operationId": "GetAS3WorkflowSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AS3WorkflowVersionInfo"
                                }
                            }
                        },
                        "description": "AS3 Workflow schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return schema version",
                "tags": [
                    "AS3WorkflowFeature"
                ]
            }
        },
        "/api/certificate/openapi": {
            "get": {
                "description": "requests OpenAPI specification for certificate feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "return OpenAPI specification",
                "tags": [
                    "CertificateFeature"
                ]
            }
        },
        "/api/certificate/v1/certificates": {
            "delete": {
                "description": "deletes the list of certificates",
                "operationId": "DeleteCertificates",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CertIDList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteResponse"
                                }
                            }
                        },
                        "description": "lists all certificates with delete status"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes the list of certificates",
                "tags": [
                    "CertificateFeature"
                ]
            },
            "get": {
                "description": "requests a list of all the certificates",
                "operationId": "GetAllCertificates",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Certificates"
                                }
                            }
                        },
                        "description": "list of all certificates and keys"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "returns all certificates",
                "tags": [
                    "CertificateFeature"
                ]
            }
        },
        "/api/certificate/v1/certificates/create": {
            "post": {
                "description": "requests to create certificate, key and csr",
                "operationId": "RunCertificateTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "common_name": "bigq.com",
                                "duration_in_days": 90,
                                "issuer": "Self",
                                "key_type": "RSA",
                                "name": "test_crt"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CertificateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "create certificate/key/csr",
                "tags": [
                    "CertificateFeature"
                ]
            }
        },
        "/api/certificate/v1/certificates/import": {
            "post": {
                "description": "requests to import certificates/keys",
                "operationId": "RunImport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "common_name": "bigq.com",
                                "issuer": "Self",
                                "key_type": "RSA",
                                "name": "test_crt"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ImportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "import certificate/key",
                "tags": [
                    "CertificateFeature"
                ]
            }
        },
        "/api/certificate/v1/certificates/renew": {
            "post": {
                "description": "requests to renew certificates.",
                "operationId": "RunRenew",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "common_name": "bigq.com",
                                "id": "43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/RenewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "renew certificate.",
                "tags": [
                    "CertificateFeature"
                ]
            }
        },
        "/api/certificate/v1/certificates/{id}": {
            "delete": {
                "description": "deletes a specific certificate",
                "operationId": "DeleteCertificate",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteStatus"
                                }
                            }
                        },
                        "description": "certificates delete status"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "deletes certificate",
                "tags": [
                    "CertificateFeature"
                ]
            },
            "get": {
                "description": "requests a specific certificate",
                "operationId": "GetCertificate",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Certificate"
                                }
                            }
                        },
                        "description": "specific certificate"
                    }
                },
                "summary": "return certificate",
                "tags": [
                    "CertificateFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of certificate",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/certificate/v1/certificates/{id}/{topic}": {
            "get": {
                "description": "requests a specific certificate content",
                "operationId": "GetContent",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CertificateContent"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return certificate content",
                "tags": [
                    "CertificateFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of certificate",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "cert or key or csr",
                    "in": "path",
                    "name": "topic",
                    "required": true,
                    "schema": {
                        "enum": [
                            "crt",
                            "key",
                            "csr"
                        ],
                        "type": "string"
                    }
                }
            ]
        },
        "/api/certificate/v1/version": {
            "get": {
                "description": "requests the schema version of the certificate feature.",
                "operationId": "GetCertificateSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.CertificateVersionInfo"
                                }
                            }
                        },
                        "description": "certificate feature schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return schema version",
                "tags": [
                    "CertificateFeature"
                ]
            }
        },
        "/api/change-password": {
            "post": {
                "description": "Request to replace a temporary password with a new password.",
                "operationId": "DoChangePassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "username": "admin1"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Password change was successful."
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePasswordResponse"
                                }
                            }
                        },
                        "description": "A response to notify the user that the password successfully changed."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Changes the temp password to the new password",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/deployment-stub/openapi": {
            "get": {
                "description": "request openapi specification for deployment stub feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "return openapi specification",
                "tags": [
                    "DeploymentStubFeature"
                ]
            }
        },
        "/api/deployment-stub/v1/applications": {
            "get": {
                "description": "gives a list of all deployed applications.",
                "operationId": "GetAllDeployedApps",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "applications": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/applications/22a5be0d-da2f-4711-a51f-58f877706e76"
                                                    }
                                                },
                                                "address": "10.218.133.236",
                                                "health": "Good",
                                                "id": "22a5be0d-da2f-4711-a51f-58f877706e76",
                                                "instance_id": "5f74eaf2-8c5e-4f07-8f00-42444aa57348",
                                                "last_updated": "2022-08-04T14:05:04.818409+05:30",
                                                "location": "mbip.01.seattle",
                                                "name": "WebApp01",
                                                "parameters": {
                                                    "application_name": "http1",
                                                    "server_addresses": [
                                                        "20.20.20.4"
                                                    ],
                                                    "service_port": 8090,
                                                    "tenant_name": "t1",
                                                    "virtual_address": "10.10.10.20",
                                                    "virtual_port": 80
                                                },
                                                "security_policies": [
                                                    {
                                                        "enforcement_mode": "blocking",
                                                        "id": "72a7ad4b-0533-40cf-80d3-004ab2168531",
                                                        "policy": "WAF"
                                                    },
                                                    {
                                                        "id": "5741c3f0-12e4-4444-923d-e6aa77035866",
                                                        "policy": "ACCESS"
                                                    }
                                                ],
                                                "status": "Deployed",
                                                "tenant_name": "Tenant_8",
                                                "type": "AS3"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/applications"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Applications"
                                }
                            }
                        },
                        "description": "List of all applications"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "returns all deployed applications.",
                "tags": [
                    "DeploymentStubFeature"
                ]
            }
        },
        "/api/deployment-stub/v1/version": {
            "get": {
                "description": "request the schema version of the deployment-stub feature.",
                "operationId": "GetDeploymentStubSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeploymentStubVersionInfo"
                                }
                            }
                        },
                        "description": "deployment-stub feature schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return schema version",
                "tags": [
                    "DeploymentStubFeature"
                ]
            }
        },
        "/api/device/openapi": {
            "get": {
                "description": "Requests the OpenAPI specification of the instance feature of BIG-IP Next Central Manager.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "The OpenAPI specification of the instance feature of BIG-IP Next Central Manager."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/backup-tasks": {
            "get": {
                "description": "Requests a list of BIG-IP Next instance backup tasks.",
                "operationId": "GetInstanceBackupTasks",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/backup-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                                    }
                                                },
                                                "completed": "2021-04-02T23:12:18.051859Z",
                                                "created": "2021-04-02T23:11:18.051859Z",
                                                "failure_reason": "",
                                                "file_name": "c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-11-19.backup",
                                                "file_path": "storage/backups",
                                                "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                                "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                "instance_name": "us-west-sea-bigip-2a",
                                                "state": "backupDone",
                                                "status": "completed"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/backup-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceBackupTasks"
                                }
                            }
                        },
                        "description": "List of all the BIG-IP Next instance backup tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all BIG-IP Next instance backup tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/backup-tasks/{id}": {
            "get": {
                "description": "Requests a specific BIG-IP Next instance backup task.",
                "operationId": "GetInstanceBackupTask",
                "parameters": [
                    {
                        "description": "The UUID of an instance backup task.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "href": "/v1/backup-tasks/918425aa-580b-42f5-9893-9292c6622c8b",
                                        "self": null
                                    },
                                    "completed": "2021-04-02T23:12:18.051859Z",
                                    "created": "2021-04-02T23:11:18.051859Z",
                                    "failure_reason": "",
                                    "file_name": "c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-11-19.backup",
                                    "file_path": "storage/backups",
                                    "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                    "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "instance_name": "us-west-sea-bigip-2a",
                                    "state": "backupDone",
                                    "status": "completed"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceBackupTask"
                                }
                            }
                        },
                        "description": "A specific BIG-IP Next instance backup task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a BIG-IP Next instance backup task",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/backups": {
            "get": {
                "description": "Requests a list of backup files for managed BIG-IP Next instances.",
                "operationId": "GetInstanceBackups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "backups": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/backups/c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-05-03.backup"
                                                    }
                                                },
                                                "file_date": "2021-04-02T23:05:03.395725Z",
                                                "file_name": "c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-05-03.backup",
                                                "file_size": "5368709120",
                                                "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                "instance_name": "us-west-sea-bigip-2a"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/backups"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceBackups"
                                }
                            }
                        },
                        "description": "List of all backup files for BIG-IP Next instances under management."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return backup file information for all BIG-IP Next instances",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "post": {
                "description": "Requests a backup be performed on multiple BIG-IP Next instances.",
                "operationId": "RunBatchBackupTasks",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "instance_ids": [
                                    "c30cbb1e-899e-4c0e-8969-ace06c62ea82",
                                    "00000000-0000-1000-8000-000000000000",
                                    "4e63429e-1b66-4ba6-ab18-5b0a3e113a3d"
                                ]
                            },
                            "schema": {
                                "$ref": "#/components/schemas/BatchBackupTasksRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "created": "2021-04-02T23:11:18.051859Z",
                                    "failure_reason": "00000000-0000-1000-8000-000000000000 failed: unknown instance ID",
                                    "status": "completed",
                                    "tasks": [
                                        {
                                            "instance_id": "c30cbb1e-899e-4c0e-8969-ace06c62ea82",
                                            "path": "/v1/backup-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                        },
                                        {
                                            "instance_id": "4e63429e-1b66-4ba6-ab18-5b0a3e113a3d",
                                            "path": "/v1/backup-tasks/580b42f5-9184-25aa-2c8b-98939292c662"
                                        }
                                    ]
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/BatchBackupTasksCreated"
                                }
                            }
                        },
                        "description": "A list that associates each successfully-started backup task ID with the corresponding BIG-IP Next instance ID."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Back up multiple BIG-IP Next instances",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/backups/{file_name}": {
            "get": {
                "description": "Requests the specified backup file for a managed BIG-IP Next instance.",
                "operationId": "GetInstanceBackup",
                "parameters": [
                    {
                        "description": "The name of a BIG-IP Next instance backup file.",
                        "in": "path",
                        "name": "file_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/backups/c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-05-03.backup"
                                        }
                                    },
                                    "file_date": "2021-04-02T23:05:03.395725Z",
                                    "file_name": "c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-05-03.backup",
                                    "file_size": "5368709120",
                                    "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "instance_name": "us-west-sea-bigip-2a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceBackup"
                                }
                            }
                        },
                        "description": "The latest backup file and backup task results for a specific managed BIG-IP Next instance."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return backup information for a managed BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/deletion-tasks": {
            "get": {
                "description": "Requests a list of BIG-IP Next instance deletion tasks.",
                "operationId": "GetDeviceDeleteTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/deletion-tasks/e8dd5c25-3357-4a05-825d-b183f6999b3e"
                                                    }
                                                },
                                                "address": "10.145.66.196",
                                                "completed": "2021-04-07T17:48:45.630172Z",
                                                "created": "2021-04-07T17:48:45.113981Z",
                                                "device_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                "failure_reason": "",
                                                "id": "e8dd5c25-3357-4a05-825d-b183f6999b3e",
                                                "state": "deletingDevice",
                                                "status": "completed"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/deletion-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceDeleteTasks"
                                }
                            }
                        },
                        "description": "List of all BIG-IP Next instance deletion tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all BIG-IP Next instance deletion tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/deletion-tasks/{id}": {
            "get": {
                "description": "Requests details for a BIG-IP Next instance deletion task.",
                "operationId": "GetDeviceDeleteTask",
                "parameters": [
                    {
                        "description": "UUID of task",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/deletion-tasks/e8dd5c25-3357-4a05-825d-b183f6999b3e"
                                        }
                                    },
                                    "address": "10.145.66.196",
                                    "completed": "2021-04-07T17:48:45.630172Z",
                                    "created": "2021-04-07T17:48:45.113981Z",
                                    "device_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "failure_reason": "",
                                    "id": "e8dd5c25-3357-4a05-825d-b183f6999b3e",
                                    "state": "deletingDevice",
                                    "status": "completed"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceDeleteTask"
                                }
                            }
                        },
                        "description": "A specific BIG-IP Next instance deletion task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a BIG-IP Next instance deletion task",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/discovery-tasks": {
            "get": {
                "description": "Requests a list of discovery tasks for all managed BIG-IP Next instances.",
                "operationId": "GetDeviceDiscoveryTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/discovery-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                                    }
                                                },
                                                "address": "10.145.10.1",
                                                "completed": "2021-04-02T23:11:19.08911Z",
                                                "created": "2021-04-02T23:11:18.051859Z",
                                                "device_group": "default",
                                                "device_user": "admin",
                                                "discovered_device_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                "discovered_device_path": "/v1/inventory/c9796e86-21f7-4182-be1c-c737ed430242",
                                                "failure_reason": "",
                                                "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                                "port": 5443,
                                                "state": "addingDeviceToGroup",
                                                "status": "completed"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/discovery-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceDiscoveryTasks"
                                }
                            }
                        },
                        "description": "A list of discovery tasks for all managed BIG-IP Next instances."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all BIG-IP Next instance discovery tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/discovery-tasks/{id}": {
            "get": {
                "description": "Requests a specific discovery task for a BIG-IP Next instance.",
                "operationId": "GetDeviceDiscoveryTask",
                "parameters": [
                    {
                        "description": "The UUID of a BIG-IP Next instance discovery task.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/discovery-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                        }
                                    },
                                    "address": "10.145.10.1",
                                    "completed": "2021-04-02T23:11:19.08911Z",
                                    "created": "2021-04-02T23:11:18.051859Z",
                                    "device_group": "default",
                                    "device_user": "admin",
                                    "discovered_device_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "discovered_device_path": "/v1/inventory/c9796e86-21f7-4182-be1c-c737ed430242",
                                    "failure_reason": "",
                                    "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                    "port": 5443,
                                    "state": "addingDeviceToGroup",
                                    "status": "completed"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceDiscoveryTask"
                                }
                            }
                        },
                        "description": "Specific BIG-IP Next instance discovery task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a BIG-IP Next instance discovery task",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/groups": {
            "get": {
                "description": "Requests a list of all instance groups.",
                "operationId": "ListDeviceGroups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "groups": [
                                            {
                                                "_links": {
                                                    "devices": {
                                                        "href": "/v1/groups/4ffa1086-2316-4bb8-962b-09c5d2c7d721/devices"
                                                    },
                                                    "self": {
                                                        "href": "/v1/groups/4ffa1086-2316-4bb8-962b-09c5d2c7d721"
                                                    }
                                                },
                                                "id": "4ffa1086-2316-4bb8-962b-09c5d2c7d721",
                                                "name": "default"
                                            },
                                            {
                                                "_links": {
                                                    "devices": {
                                                        "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d/devices"
                                                    },
                                                    "self": {
                                                        "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d"
                                                    }
                                                },
                                                "id": "e92346e4-1b66-4ba6-ab18-5b0a3e113a3d",
                                                "name": "test-group"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/groups"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceGroups"
                                }
                            }
                        },
                        "description": "List of all instance groups."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all instance groups",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "post": {
                "description": "Creates a new instance group.",
                "operationId": "CreateDeviceGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "test-group"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/DeviceGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d"
                                        }
                                    },
                                    "id": "e92346e4-1b66-4ba6-ab18-5b0a3e113a3d",
                                    "name": "test-group"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceGroup"
                                }
                            }
                        },
                        "description": "New instance group."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a new instance group",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/groups/{groupID}/devices/{instanceID}": {
            "delete": {
                "description": "Removes a BIG-IP Next instance from an instance group.",
                "operationId": "RemoveDeviceFromGroup",
                "responses": {
                    "204": {
                        "description": "A BIG-IP Next instance was successfully removed from an instance group."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove an instance from instance group",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "get": {
                "description": "Requests a specific BIG-IP Next instance in an instance group.",
                "operationId": "GetDeviceInGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d/devices/c30cbb1e-899e-4c0e-8969-ace06c62ea82"
                                        }
                                    },
                                    "address": "10.145.10.1",
                                    "id": "c30cbb1e-899e-4c0e-8969-ace06c62ea82",
                                    "port": 5443
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Device"
                                }
                            }
                        },
                        "description": "A specific BIG-IP Next instance in an instance group."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an instance of an instance group",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of an instance group.",
                    "in": "path",
                    "name": "groupID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "instanceID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/groups/{id}": {
            "delete": {
                "description": "Removes an instance group.",
                "operationId": "DeleteDeviceGroup",
                "responses": {
                    "204": {
                        "description": "The instance group was removed successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove an instance group",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "get": {
                "description": "Requests a specific instance group.",
                "operationId": "GetDeviceGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "devices": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d/devices"
                                        },
                                        "self": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d"
                                        }
                                    },
                                    "id": "e92346e4-1b66-4ba6-ab18-5b0a3e113a3d",
                                    "name": "test-group"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceGroup"
                                }
                            }
                        },
                        "description": "A specific instance group."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an instance group",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of an instance group.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific instance group.",
                "operationId": "UpdateDeviceGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "renamed-group"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/DeviceGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d"
                                        }
                                    },
                                    "id": "e92346e4-1b66-4ba6-ab18-5b0a3e113a3d",
                                    "name": "renamed-group"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceGroup"
                                }
                            }
                        },
                        "description": "Updated instance group."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update an instance group",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/groups/{id}/devices": {
            "get": {
                "description": "Lists all instances in an instance group.",
                "operationId": "ListDevicesInGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "devices": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d/devices/c30cbb1e-899e-4c0e-8969-ace06c62ea82"
                                                    }
                                                },
                                                "address": "10.145.10.1",
                                                "id": "c30cbb1e-899e-4c0e-8969-ace06c62ea82",
                                                "port": 5443
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d/devices"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Devices"
                                }
                            }
                        },
                        "description": "List of all instances in an instance group."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all instances in instance group",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of an instance group.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds an instance to an instance group.",
                "operationId": "AddDeviceToGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "id": "c30cbb1e-899e-4c0e-8969-ace06c62ea82"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/groups/e92346e4-1b66-4ba6-ab18-5b0a3e113a3d/devices"
                                        }
                                    },
                                    "id": "c30cbb1e-899e-4c0e-8969-ace06c62ea82"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Device"
                                }
                            }
                        },
                        "description": "Instance added to an instance group."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Add an instance to instance group",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/ha-creation-tasks": {
            "get": {
                "description": "Requests a list of all BIG-IP Next HA instance creation tasks.",
                "operationId": "GetHAInstanceCreateTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.HAInstanceCreateTasks"
                                }
                            }
                        },
                        "description": "List of all the BIG-IP Next HA instance creation tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all BIG-IP Next HA instance creation tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/ha-creation-tasks/{id}": {
            "get": {
                "description": "Requests a specific BIG-IP Next HA instance creation task.",
                "operationId": "GetHAInstanceCreateTask",
                "parameters": [
                    {
                        "description": "The UUID of a BIG-IP Next HA instance creation task.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.HAInstanceCreateTask"
                                }
                            }
                        },
                        "description": "A BIG-IP Next HA instance creation task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a BIG-IP Next HA instance creation task",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/ha-failover-tasks": {
            "get": {
                "description": "Requests a list of all BIG-IP Next HA instance failover tasks.",
                "operationId": "GetHAInstanceFailoverTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.HAInstanceFailoverTasks"
                                }
                            }
                        },
                        "description": "List of all the BIG-IP Next HA instance failover tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all BIG-IP Next HA instance failover tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/ha-failover-tasks/{id}": {
            "get": {
                "description": "Requests a specific BIG-IP Next HA instance failover task.",
                "operationId": "GetHAInstanceFailoverTask",
                "parameters": [
                    {
                        "description": "The UUID of BIG-IP Next HA instance failover task",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.HAInstanceFailoverTask"
                                }
                            }
                        },
                        "description": "Requested BIG-IP Next HA instance failover task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return BIG-IP Next HA instance failover task",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/instances/authenticate": {
            "post": {
                "description": "Verifies that you can use the provided username and password to reach and then authenticate with a BIG-IP Next instance.",
                "operationId": "ValidateInstanceAuthenticity",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "address": "10.145.10.1",
                                "password": "admin@123!",
                                "port": 5443,
                                "username": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/InstanceAuthenticityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceAuthenticityResponse"
                                }
                            }
                        },
                        "description": "Authentication results for the credentials of a BIG-IP Next instance."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Verifies reachability and authentication of a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/instances/{instanceID}/interfaces": {
            "get": {
                "description": "Requests names of all network interfaces (except management interface) on a BIG-IP Next instance.",
                "operationId": "GetNetworkInterfaces",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceInterfaces"
                                }
                            }
                        },
                        "description": "Returns a list of network interfaces that are on a BIG-IP Next instance."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns network interfaces available on a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "instanceID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/instances/{instanceID}/trafficvlans": {
            "get": {
                "description": "Requests all VLANs used for traffic for a BIG-IP Next HA instance",
                "operationId": "GetTrafficVlans",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceVlans"
                                }
                            }
                        },
                        "description": "VLANs used for traffic for a BIG-IP Next HA instance"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns all VLANs used for traffic for a BIG-IP Next HA instance",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "instanceID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/inventory": {
            "get": {
                "description": "Requests a list of all managed BIG-IP Next instances.",
                "operationId": "ListDevices",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "$ref": "#/components/parameters/healthCheckParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "examples": {
                                    "example1": {
                                        "summary": "A list of managed BIG-IP Next instances",
                                        "value": {
                                            "_embedded": {
                                                "devices": [
                                                    {
                                                        "_links": {
                                                            "self": {
                                                                "href": "/v1/inventory/c9796e86-21f7-4182-be1c-c737ed430242"
                                                            }
                                                        },
                                                        "address": "10.145.10.1",
                                                        "certificate_validated": "2021-05-04T00:05:43.1025576Z",
                                                        "certificate_validation_error": "x509: cannot validate certificate for 10.145.10.1 because it doesn't contain any IP SANs",
                                                        "certificate_validity": false,
                                                        "hostname": "mbip94.sample.com",
                                                        "id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                        "mode": "STANDALONE",
                                                        "platform_type": "ve",
                                                        "port": 5443,
                                                        "version": "2022-07.0.7.0-2.1.8"
                                                    },
                                                    {
                                                        "_links": {
                                                            "self": {
                                                                "href": "/v1/inventory/b8796e86-21f7-4182-be1c-c737ed430543"
                                                            }
                                                        },
                                                        "address": "10.145.10.2",
                                                        "certificate_validated": "2021-05-04T00:05:43.1025576Z",
                                                        "certificate_validation_error": "x509: cannot validate certificate for 10.145.10.2 because it doesn't contain any IP SANs",
                                                        "certificate_validity": false,
                                                        "hostname": "mbip-cluster.sample.com",
                                                        "id": "b8796e86-21f7-4182-be1c-c737ed430543",
                                                        "mode": "HA",
                                                        "platform_type": "velos",
                                                        "port": 5443,
                                                        "version": "2022-07.0.7.0-2.1.8"
                                                    }
                                                ]
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/inventory"
                                                }
                                            }
                                        }
                                    },
                                    "example2": {
                                        "summary": "A list of BIG-IP Next instances and their health status",
                                        "value": {
                                            "_embedded": {
                                                "devices": [
                                                    {
                                                        "_links": {
                                                            "self": {
                                                                "href": "/v1/inventory/8e09491e-f2b0-4b82-ba83-ad75e940831a"
                                                            }
                                                        },
                                                        "address": "10.145.77.26",
                                                        "hostname": "mbip-1.sample.com",
                                                        "id": "8e09491e-f2b0-4b82-ba83-ad75e940831a",
                                                        "mode": "STANDALONE",
                                                        "platform_type": "ve",
                                                        "port": 5443,
                                                        "status": "HEALTHY",
                                                        "version": "2021.09.0.5.0"
                                                    }
                                                ]
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/inventory"
                                                }
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Devices"
                                }
                            }
                        },
                        "description": "List of all managed BIG-IP Next instances."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all managed BIG-IP Next instances",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "post": {
                "description": "Requests a task to add (discover) a BIG-IP Next instance to BIG-IP Next Central Manager for management.",
                "operationId": "RunDeviceDiscoveryTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "address": "10.145.10.1",
                                "device_password": "admin",
                                "device_user": "admin",
                                "management_password": "admin",
                                "management_user": "sample_mgmt_admin",
                                "port": 5443
                            },
                            "schema": {
                                "$ref": "#/components/schemas/DeviceDiscoveryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/discovery-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                        }
                                    },
                                    "path": "/v1/discovery-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Successful response."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Discover and bring a BIG-IP Next instance under management",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/inventory/{id}": {
            "delete": {
                "description": "Deletes a a BIG-IP Next instance from BIG-IP Next Central Manager.",
                "operationId": "DeleteDevice",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "device_password": "admin",
                                "device_user": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/DeviceDeleteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "get": {
                "description": "Requests a specific managed BIG-IP Next instance.",
                "operationId": "GetDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "examples": {
                                    "example1": {
                                        "summary": "A standalone BIG-IP Next instance",
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/inventory/c9796e86-21f7-4182-be1c-c737ed430242"
                                                }
                                            },
                                            "address": "10.145.10.1",
                                            "certificate_validated": "2021-05-04T00:05:43.1025576Z",
                                            "certificate_validation_error": "x509: cannot validate certificate for 10.145.10.1 because it doesn't contain any IP SANs",
                                            "certificate_validity": false,
                                            "hostname": "mbip1.sample.com",
                                            "id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                            "mode": "STANDALONE",
                                            "platform_type": "ve",
                                            "port": 5443,
                                            "version": "2022-07.0.7.0-2.1.8"
                                        }
                                    },
                                    "example2": {
                                        "summary": "An HA BIG-IP Next instance",
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/inventory/d9796e86-21f7-4182-be1c-c737ed4302543"
                                                }
                                            },
                                            "address": "10.145.10.2",
                                            "certificate_validated": "2021-05-04T00:05:43.1025576Z",
                                            "certificate_validation_error": "x509: cannot validate certificate for 10.145.10.2 because it doesn't contain any IP SANs",
                                            "certificate_validity": false,
                                            "hostname": "mbip-cluster.sample.com",
                                            "id": "d9796e86-21f7-4182-be1c-c737ed4302543",
                                            "mode": "HA",
                                            "platform_type": "velos",
                                            "port": 5443,
                                            "version": "2022-07.0.7.0-2.1.8"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Device"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        },
                        "description": "A managed BIG-IP Next instance."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a managed BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/inventory/{id}/backup": {
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Requests a backup of a BIG-IP Next instance.",
                "operationId": "RunInstanceBackupTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceBackupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Back up a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/inventory/{id}/ha": {
            "parameters": [
                {
                    "description": "The UUID of an active BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Requests a task to create a BIG-IP Next HA instance from two managed standalone BIG-IP Next instances.",
                "operationId": "RunHAInstanceCreateTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HAInstanceCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/ha-creation-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                        }
                                    },
                                    "path": "/v1/ha-creation-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a BIG-IP Next HA instance from two standalone BIG-IP Next instances",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/inventory/{id}/ha/failover": {
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next HA instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Requests a task to force failover from the primary to the standby node in a BIG-IP Next HA instance.",
                "operationId": "RunHAInstanceFailoverTask",
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/ha-failover-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                        }
                                    },
                                    "path": "/v1/ha-failover-tasks/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Force failover to the standby node in a BIG-IP Next HA instance",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/inventory/{id}/health": {
            "get": {
                "description": "Requests the health of a BIG-IP Next HA or standalone instance.",
                "operationId": "GetInstanceState",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/inventory/c9796e86-21f7-4182-be1c-c737ed430242/health"
                                                }
                                            },
                                            "id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                            "mode": "HA",
                                            "node_count": 2,
                                            "nodes": [
                                                {
                                                    "address": "10.145.74.184",
                                                    "hostname": "mbip184.sample.com",
                                                    "isHealthy": true,
                                                    "machine_id": "4e3b2467-a9ec-4a50-afb2-6cc871042f06",
                                                    "state": "ACTIVE",
                                                    "system_id": "6b792542-3f07-eadc-b5ae-19b73ab0ac56"
                                                },
                                                {
                                                    "address": "10.145.77.174",
                                                    "hostname": "mbip174.sample.com",
                                                    "isHealthy": true,
                                                    "machine_id": "e1e82542-b530-1766-ee4f-c29c56165783",
                                                    "state": "STANDBY",
                                                    "system_id": "7d852542-4c3f-266d-5e58-83110bb5941b"
                                                }
                                            ],
                                            "status": "HEALTHY"
                                        }
                                    },
                                    "example2": {
                                        "value": {
                                            "_links": {
                                                "id": "77b9c639-aaf3-4753-a292-2d551b33384f",
                                                "mode": "STANDALONE",
                                                "node_count": 1,
                                                "nodes": [
                                                    {
                                                        "address": "10.145.74.115",
                                                        "hostname": "mbip.sample.com",
                                                        "machine_id": "2c9f6aa0-293a-4032-8298-c66bc53166e7",
                                                        "system_id": "88152542-b84b-3075-8646-0e08970f91ed"
                                                    }
                                                ],
                                                "self": {
                                                    "href": "/v1/inventory/77b9c639-aaf3-4753-a292-2d551b33384f/health"
                                                },
                                                "status": "HEALTHY"
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceHealth"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceHealth"
                                }
                            }
                        },
                        "description": "Health status for a BIG-IP Next instance in HA or standalone mode and with address and hostname information."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return health of a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/inventory/{id}/restore": {
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Requests a restore of a BIG-IP Next instance.",
                "operationId": "RunInstanceRestoreTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceRestoreRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Restore a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/inventory/{id}/upgrade": {
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Requests an upgrade for a BIG-IP Next instance.",
                "operationId": "RunUpgradeInstanceTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "image_name": "f5-mov-tarball-v1.10.2",
                                "partition_address": "10.144.191.22",
                                "partition_password": "site02!",
                                "partition_port": 8888,
                                "partition_user": "admin",
                                "tenant_name": "mbip-on-velos"
                            },
                            "schema": {
                                "discriminator": {
                                    "mapping": {
                                        "ve": "#/components/schemas/UpgradeVeInstanceRequest",
                                        "velos": "#/components/schemas/UpgradeVelosInstanceRequest"
                                    },
                                    "propertyName": "upgrade_type"
                                },
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/UpgradeVelosInstanceRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpgradeVeInstanceRequest"
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Upgrade an a BIG-IP Next instance",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/inventory/{id}/validate-cert": {
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Validates the certificate of a BIG-IP Next instance with a TLS handshake.",
                "operationId": "ValidateDeviceCert",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/inventory/b1456795-a5c4-408d-b62b-dd0372a246f1/validate-cert"
                                        }
                                    },
                                    "address": "10.145.10.1",
                                    "certificate_validated": "2021-05-04T01:05:43.1025576Z",
                                    "certificate_validity": true,
                                    "hostname": "mbip94.sample.com",
                                    "id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "port": 5443
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Device"
                                }
                            }
                        },
                        "description": "Validate a BIG-IP Next Instance's certificate."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Validate instance certificate",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/providers/types": {
            "get": {
                "description": "Requests a list of all supported provider types.",
                "operationId": "ListProviderTypes",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "summary": "A list of supported provider types",
                                    "value": {
                                        "types": [
                                            {
                                                "name": "F5 VELOS"
                                            },
                                            {
                                                "name": "AWS"
                                            },
                                            {
                                                "name": "VMWare"
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderTypes"
                                }
                            }
                        },
                        "description": "List of all supported provider types."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "List provider types",
                "tags": [
                    "SharedResources"
                ]
            }
        },
        "/api/device/v1/providers/velos": {
            "get": {
                "description": "Respond with a list of all F5 VELOS chassis partitions.",
                "operationId": "ListVelosProviders",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "summary": "A list of VELOS chassis partitions",
                                    "value": {
                                        "_embedded": {
                                            "providers": [
                                                {
                                                    "_links": {
                                                        "self": {
                                                            "href": "/v1/providers/velos/989db73f-53fd-4ff9-b36b-c77e3d69e77b"
                                                        }
                                                    },
                                                    "id": "989db73f-53fd-4ff9-b36b-c77e3d69e77b",
                                                    "name": "my-velos-partition-1",
                                                    "partition_address": "10.144.191.191",
                                                    "partition_port": 8888,
                                                    "type": "F5 VELOS"
                                                },
                                                {
                                                    "_links": {
                                                        "self": {
                                                            "href": "/v1/providers/velos/2818d42e-5c57-4093-bca3-3fd9469944bf"
                                                        }
                                                    },
                                                    "id": "2818d42e-5c57-4093-bca3-3fd9469944bf",
                                                    "name": "my-velos-partition-2",
                                                    "partition_address": "f5.veloschassis-1.sample",
                                                    "partition_port": 8888,
                                                    "type": "F5 VELOS"
                                                }
                                            ]
                                        },
                                        "_links": {
                                            "self": {
                                                "href": "/v1/providers/velos"
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.VelosProviders"
                                }
                            }
                        },
                        "description": "List of all VELOS chassis partitions."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "List VELOS chassis partitions",
                "tags": [
                    "SharedResources"
                ]
            },
            "post": {
                "description": "Submit and store information for a new F5 VELOS chassis partition.",
                "operationId": "CreateVelosProvider",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "my-velos-partition-1",
                                "partition_address": "10.144.191.191",
                                "partition_password": "password",
                                "partition_port": 8888,
                                "partition_user": "admin",
                                "type": "F5 VELOS"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateVelosProviderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/providers/velos/c08ae816-4849-4123-9d44-5e5ca4c1c324"
                                        }
                                    },
                                    "id": "c08ae816-4849-4123-9d44-5e5ca4c1c324"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.VelosProvider"
                                }
                            }
                        },
                        "description": "VELOS chassis partition saved"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Save a new VELOS chassis partition",
                "tags": [
                    "SharedResources"
                ]
            }
        },
        "/api/device/v1/providers/velos/authenticate": {
            "post": {
                "description": "Send user credentials to an F5 VELOS chassis partition via proxy to check authentication.",
                "operationId": "AuthenticateVelosCredentials",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "parittion_password": "password",
                                "partition_address": "10.144.191.192",
                                "partition_port": 8888,
                                "partition_user": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/VelosProviderAuthenticationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The authentication request was successful."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Authenticate a VELOS chassis partition's credentials",
                "tags": [
                    "SharedResources"
                ]
            }
        },
        "/api/device/v1/providers/velos/{id}": {
            "delete": {
                "description": "Removes an F5 VELOS chassis partition and its credentials.",
                "operationId": "DeleteVelosProvider",
                "responses": {
                    "204": {
                        "description": "The VELOS chassis partition and its credentials were successfully removed."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a VELOS chassis partition",
                "tags": [
                    "SharedResources"
                ]
            },
            "get": {
                "description": "Requests a specific F5 VELOS chassis partition.",
                "operationId": "GetVelosProvider",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "summary": "A stored VELOS chassis partition",
                                    "value": {
                                        "_links": {
                                            "self": {
                                                "href": "/v1/providers/velos/fdb188d8-ee66-4924-af05-d2cd36e0fce1"
                                            }
                                        },
                                        "id": "fdb188d8-ee66-4924-af05-d2cd36e0fce1",
                                        "name": "my-velos-provider-1",
                                        "partition_address": "10.144.191.191",
                                        "partition_port": 8888
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.VelosProvider"
                                }
                            }
                        },
                        "description": "A stored VELOS chassis partition."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a stored VELOS chassis partition",
                "tags": [
                    "SharedResources"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a VELOS chassis partition.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Update a specific F5 VELOS chassis partition.",
                "operationId": "UpdateVelosProvider",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "example1": {
                                    "summary": "Modify the name of a VELOS chassis partition",
                                    "value": {
                                        "name": "my-renamed-provider-1"
                                    }
                                },
                                "example2": {
                                    "summary": "Modify the IP address or hostname of a VELOS chassis partition; requires re-authentication",
                                    "value": {
                                        "partition_address": "10.144.191.192",
                                        "partition_password": "password2",
                                        "partition_user": "admin"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/VelosProvider"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/providers/velos/fdb188d8-ee66-4924-af05-d2cd36e0fce1"
                                        }
                                    },
                                    "id": "fdb188d8-ee66-4924-af05-d2cd36e0fce1",
                                    "name": "renamed-group",
                                    "partition_address": "10.144.191.192",
                                    "partition_port": 8888,
                                    "type": "F5 VELOS"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.VelosProvider"
                                }
                            }
                        },
                        "description": "Updated VELOS chassis partition."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a VELOS chassis partition",
                "tags": [
                    "SharedResources"
                ]
            }
        },
        "/api/device/v1/providers/velos/{id}/images": {
            "get": {
                "description": "Returns a list of images of a specific F5 VELOS chassis partition.",
                "operationId": "ListVelosProviderImages",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "summary": "List of images of a stored VELOS chassis partition",
                                    "value": {
                                        "images": {
                                            "f5-tenant-images:images": {
                                                "image": [
                                                    {
                                                        "in-use": false,
                                                        "name": "f5-mov-tarball-v4.2.9",
                                                        "status": "replicated"
                                                    },
                                                    {
                                                        "in-use": false,
                                                        "name": "f5-mov-tarball-v4.2.9.yaml",
                                                        "status": "replicated"
                                                    },
                                                    {
                                                        "in-use": true,
                                                        "name": "f5-mov-tarball-v4.4.2",
                                                        "status": "replicated"
                                                    },
                                                    {
                                                        "in-use": false,
                                                        "name": "f5-mov-tarball-v4.4.2.yaml",
                                                        "status": "replicated"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/VelosProviderImages"
                                }
                            }
                        },
                        "description": "List of images on a stored VELOS chassis partition, obtained by proxying to the chassis partition."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "A list of images on a stored VELOS chassis partition",
                "tags": [
                    "SharedResources"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a VELOS chassis partition.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/providers/velos/{id}/tenants": {
            "get": {
                "description": "Returns a list of tenants for a specific F5 VELOS chassis partition.",
                "operationId": "ListVelosProviderTenants",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "summary": "A list of tenants of a stored VELOS chassis partition",
                                    "value": {
                                        "tenants": {
                                            "f5-tenants:tenants": {
                                                "tenant": [
                                                    {
                                                        "config": {
                                                            "appliance-mode": {
                                                                "enabled": false
                                                            },
                                                            "cryptos": "enabled",
                                                            "deployment-file": "f5-mov-tarball-v4.4.2.yaml",
                                                            "gateway": "10.144.191.254",
                                                            "image": "f5-mov-tarball-v4.4.2",
                                                            "memory": "24000",
                                                            "mgmt-ip": "10.144.191.194",
                                                            "name": "mbip-on-ch171s",
                                                            "nodes": [
                                                                6
                                                            ],
                                                            "prefix-length": 24,
                                                            "running-state": "deployed",
                                                            "storage": {
                                                                "size": 76
                                                            },
                                                            "type": "BIGIP-MA",
                                                            "vcpu-cores-per-node": "6",
                                                            "vlans": [
                                                                3689,
                                                                3690
                                                            ]
                                                        },
                                                        "name": "mbip-on-ch171s"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/VelosProviderTenants"
                                }
                            }
                        },
                        "description": "A list of tenants of a stored VELOS chassis partition, obtained by proxying to the chassis partition."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "List of tenants on a stored VELOS chassis partition",
                "tags": [
                    "SharedResources"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a VELOS chassis partition.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/proxy-file-upload/{id}": {
            "post": {
                "description": "Proxy a file upload request for a BIG-IP Next instance.",
                "operationId": "ProxyFileUpload",
                "parameters": [
                    {
                        "description": "The UUID of a BIG-IP Next instance.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "example": {
                                "fileName": "/Users/bob/tmp/upload/secure-encrypted.key;type=application/pkcs8",
                                "name": "mysecure.p8",
                                "passphrase": "1234"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ProxyFileUploadRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "authn": "local",
                                    "authz": "global",
                                    "creationTime": "2021-04-06T17:25:08.919313Z",
                                    "id": "5f76bac6-716d-4ab5-9e4f-71e55bf2b742",
                                    "message": "",
                                    "owner": "admin",
                                    "request": "{\"id\":\"69c02263-6d69-46f7-bed9-5757a77fa40c\",\"name\":\"Sample file\",\"filename\":\"ThisIsAFile.txt\",\"description\":\"This is an example for file upload\",\"uri\":\"file://opt/f5/mbip/subsystem/csm/shared/persisted/files/69c02263-6d69-46f7-bed9-5757a77fa40c-6822e2fd-abee-4fe8-a499-2e9ad7250a50\",\"hash\":\"7509e5bda0c762d2bac7f90d758b5b2263fa01ccbc542ab5e3df163be08e6ca9\",\"size\":12,\"type\":\"GENERIC\"}",
                                    "role": "AGENTCONFIG",
                                    "status": "PENDING",
                                    "updateTime": "2021-04-06T17:25:08.919313Z",
                                    "uri": "/files",
                                    "verb": "POST"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        },
                        "description": "File upload request accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Proxy a file upload",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/proxy/{id}": {
            "delete": {
                "description": "Proxy a DELETE request for a BIG-IP Next instance.",
                "operationId": "ProxyDelete",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Proxy a DELETE request",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "get": {
                "description": "Proxy a GET request for a BIG-IP Next instance.",
                "operationId": "ProxyGet",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Proxy a GET request",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of the BIG-IP Next instance.",
                    "example": [
                        "e92346e4-1b66-4ba6-ab18-5b0a3e113a3d"
                    ],
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "allowReserved": true,
                    "description": "The request path of the API endpoint on the BIG-IP Next instance.",
                    "examples": {
                        "example1": {
                            "summary": "The systems endpoint on the BIG-IP Next instance",
                            "value": "/systems"
                        },
                        "example2": {
                            "summary": "The applications endpoint on the BIG-IP Next instance",
                            "value": "/applications"
                        }
                    },
                    "in": "query",
                    "name": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Proxy a PATCH request for a BIG-IP Next instance.",
                "operationId": "ProxyPatch",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Proxy a PATCH request",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "post": {
                "description": "Proxy a POST request for a BIG-IP Next instance.",
                "operationId": "ProxyPost",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Proxy a POST request",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "put": {
                "description": "Proxy a PUT request for a BIG-IP Next instance.",
                "operationId": "ProxyPut",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        },
                        "description": "A successful response."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Proxy a PUT request",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/restore-tasks": {
            "get": {
                "description": "Requests a list of BIG-IP Next instance restore tasks.",
                "operationId": "GetInstanceRestoreTasks",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/restore-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                                    }
                                                },
                                                "completed": "2021-04-02T23:12:18.051859Z",
                                                "created": "2021-04-02T23:11:18.051859Z",
                                                "failure_reason": "",
                                                "file_name": "c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-11-19.backup",
                                                "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                                "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                "instance_name": "us-west-sea-bigip-2a",
                                                "state": "TriggerRestore",
                                                "status": "InProgress"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/restore-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceRestoreTasks"
                                }
                            }
                        },
                        "description": "List of all the BIG-IP Next instance restore tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all BIG-IP Next instance restore tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/restore-tasks/{id}": {
            "get": {
                "description": "Requests a specific BIG-IP Next instance restore task.",
                "operationId": "GetInstanceRestoreTask",
                "parameters": [
                    {
                        "description": "The UUID of an instance restore task.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "href": "/v1/restore-tasks/918425aa-580b-42f5-9893-9292c6622c8b",
                                        "self": null
                                    },
                                    "completed": "2021-04-02T23:12:18.051859Z",
                                    "created": "2021-04-02T23:11:18.051859Z",
                                    "failure_reason": "",
                                    "file_name": "c9796e86-21f7-4182-be1c-c737ed430242.2021-04-02.23-11-19.backup",
                                    "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                    "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                    "instance_name": "us-west-sea-bigip-2a",
                                    "state": "TriggerRestore",
                                    "status": "InProgress"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceRestoreTask"
                                }
                            }
                        },
                        "description": "A specific BIG-IP Next instance restore task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a BIG-IP Next instance restore task",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/upgrade-tasks": {
            "get": {
                "description": "Requests a list of all upgrade instance tasks.",
                "operationId": "GetUpgradeTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/upgrade-tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                                    }
                                                },
                                                "completed": "2021-04-02T23:11:19.08911Z",
                                                "created": "2021-04-02T23:11:18.051859Z",
                                                "failure_reason": "",
                                                "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                                "image_name": "f5-mov-tarball-v1.10.2",
                                                "instance_id": "c9796e86-21f7-4182-be1c-c737ed430242",
                                                "partition_address": "10.144.191.22",
                                                "partition_user": "admin",
                                                "state": "addingDeviceToGroup",
                                                "status": "completed",
                                                "tenant_name": "mbip-on-velos"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/upgrade-tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.UpgradeInstanceTasks"
                                }
                            }
                        },
                        "description": "List all upgrade instance tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all upgrade instance tasks",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/version": {
            "get": {
                "description": "Requests the schema version of the BIG-IP Next instance feature set. This is for internal use only.",
                "operationId": "GetDeviceSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeviceVersionInfo"
                                }
                            }
                        },
                        "description": "Schema version of the BIG-IP Next instance feature set."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return the schema version of the BIG-IP Next instance feature set",
                "tags": [
                    "DeviceFeature"
                ]
            }
        },
        "/api/device/v1/vlans/controlplane": {
            "get": {
                "description": "Requests all control plane for both of the BIG-IP Next instances",
                "operationId": "GetControlPlaneVlans",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceVlans"
                                }
                            }
                        },
                        "description": "Returns all control plane VLANs for the both of the nodes."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns all control plane for both of the BIG-IP Next instances",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "query",
                    "name": "active",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "query",
                    "name": "standby",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/device/v1/vlans/dataplane": {
            "get": {
                "description": "Requests all data plane VLANs for both of the BIG-IP Next instances",
                "operationId": "GetDataPlaneVlans",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceVlans"
                                }
                            }
                        },
                        "description": "Returns all Data Plane Vlans of both the instances"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all data plane VLANs for both of the BIG-IP Next instances",
                "tags": [
                    "DeviceFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "query",
                    "name": "active",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "The UUID of a BIG-IP Next instance.",
                    "in": "query",
                    "name": "standby",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/forgot-password": {
            "post": {
                "description": "User forgot password. A temporary password will be generated and sent to user's email.",
                "operationId": "UserForgotPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "username": "user01"
                            },
                            "schema": {
                                "properties": {
                                    "username": {
                                        "description": "User name.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Forgot password response message."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "User forgot password",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/instance-license/openapi": {
            "get": {
                "description": "request openapi specification for instance license feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "return openapi specification",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            }
        },
        "/api/instance-license/v1/license-tasks": {
            "get": {
                "description": "Requests a list of all license tasks.",
                "operationId": "GetAllLicenseTasks",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LicenseTasks"
                                }
                            }
                        },
                        "description": "List of tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all license-specific tasks",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            }
        },
        "/api/instance-license/v1/license-tasks/{id}": {
            "get": {
                "description": "Requests the result of a license-specific task.",
                "operationId": "GetLicenseTask",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LicenseTask"
                                }
                            }
                        },
                        "description": "A license-specific task"
                    }
                },
                "summary": "Return license-specific task process",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the task process",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/instance-license/v1/licenses": {
            "get": {
                "description": "get all license details",
                "operationId": "GetAllLicenseDetails",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GetAllInstanceLicensesResponse"
                                }
                            }
                        },
                        "description": "specific instance license"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "get all license details",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            },
            "post": {
                "description": "add or activate instance licenses. activate instance license if jwt does exist in request payload otherwise add the license details in central manager",
                "operationId": "CreateInstanceLicenses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateInstanceLicensesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreatedResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "add or activate instance licenses",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            }
        },
        "/api/instance-license/v1/licenses/basic-auth": {
            "post": {
                "description": "get instance license details with bsic auth",
                "operationId": "GetLicenseDetailsWithBasicAuth",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetInstanceLicensesWithBasicAuthRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GetInstanceLicensesResponse"
                                }
                            }
                        },
                        "description": "Status of instances license"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "get instance license details with basic auth",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            }
        },
        "/api/instance-license/v1/licenses/{id}": {
            "delete": {
                "description": "Delete / Uninstall License.",
                "operationId": "DeleteLicense",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteLicenseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreatedResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete License",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            },
            "get": {
                "description": "get instance license details",
                "operationId": "GetLicenseDetails",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GetInstanceLicensesResponse"
                                }
                            }
                        },
                        "description": "specific instance license"
                    }
                },
                "summary": "get instance license details",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of license",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "update license details",
                "operationId": "UpdateLicenseDetails",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLicensesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreatedResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "update license details",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            }
        },
        "/api/instance-license/v1/version": {
            "get": {
                "description": "request the schema version of the instance-license feature.",
                "operationId": "GetInstanceLicenseSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.InstanceLicenseVersionInfo"
                                }
                            }
                        },
                        "description": "instance-license feature schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "return schema version",
                "tags": [
                    "InstanceLicenseFeature"
                ]
            }
        },
        "/api/journeys/openapi": {
            "get": {
                "description": "Request OpenAPI specification for journeys.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/UnexpectedError"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "JourneysFeature"
                ]
            }
        },
        "/api/journeys/sessions": {
            "get": {
                "description": "Request a list of all sessions.",
                "operationId": "GetAllSessions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Page"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResponseBase"
                                        },
                                        {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/Session"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "List of all sessions"
                    }
                },
                "summary": "Return all sessions",
                "tags": [
                    "Session Management"
                ]
            },
            "post": {
                "description": "Create a new session.",
                "operationId": "CreateSession",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Session name",
                    "required": true
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/Session"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Invalid session name."
                    }
                },
                "summary": "Create a new session",
                "tags": [
                    "Session Management"
                ]
            }
        },
        "/api/journeys/sessions/bulk_delete": {
            "delete": {
                "operationId": "DeleteSessionsBulk",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sessions": {
                                        "items": {
                                            "description": "Session ID",
                                            "example": 1,
                                            "type": "integer"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "sessions"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Session name",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Sessions deleted"
                    }
                },
                "summary": "Delete multiple sessions",
                "tags": [
                    "Session Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}": {
            "delete": {
                "description": "Delete specific session.",
                "operationId": "DeleteSession",
                "responses": {
                    "204": {
                        "description": "Session deleted"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Delete session",
                "tags": [
                    "Session Management"
                ]
            },
            "get": {
                "description": "Request specific session details.",
                "operationId": "GetSessionDetails",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SessionDetails"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session exists"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Return session details.",
                "tags": [
                    "Session Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "put": {
                "description": "It also updates visited pages list.",
                "operationId": "UpdateSessionPage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "last_page": {
                                        "$ref": "#/components/schemas/Page"
                                    }
                                },
                                "required": [
                                    "last_page"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Current page",
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SessionDetails"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        },
                        "description": "Invalid session update."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session exists"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Update session with current page.",
                "tags": [
                    "Session Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/applications": {
            "get": {
                "operationId": "get_applications",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Search"
                    },
                    {
                        "$ref": "#/components/parameters/Page"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResponseBase"
                                        },
                                        {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/Application"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Applications list"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get applications list",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "post": {
                "operationId": "create_application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "example": "Test application",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of a new application",
                                        "type": "string"
                                    },
                                    "tenant": {
                                        "description": "Name of a tenant to use",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "tenant"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationDetails"
                                }
                            }
                        },
                        "description": "New application"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Invalid application name or it already exists"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or tenant found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Create a new application",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/applications/{application_name}": {
            "delete": {
                "operationId": "remove_application",
                "responses": {
                    "204": {
                        "description": "Application removed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or application found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Application cannot be deleted"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Remove specified application",
                "tags": [
                    "Application Management"
                ]
            },
            "get": {
                "operationId": "get_application",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationDetails"
                                }
                            }
                        },
                        "description": "New tenant"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or application found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get specified application",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/ApplicationName"
                }
            ],
            "put": {
                "operationId": "rename_application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "example": "Test application",
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "New application name",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationDetails"
                                }
                            }
                        },
                        "description": "Renamed application"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        },
                        "description": "Invalid application name"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or application found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Rename a specified aplication",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/applications/{application_name}/assign_virtuals": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/ApplicationName"
                }
            ],
            "post": {
                "operationId": "assign_virtuals",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "virtual_servers": {
                                        "items": {
                                            "example": "virtual1",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "virtual_servers"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationDetails"
                                }
                            }
                        },
                        "description": "Virtual servers succesfully assigned"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session, application or virtual server found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Given virtual server requires linked viruals servers to also be moved"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Assign virtual servers into an application",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/config": {
            "get": {
                "operationId": "get_perapp_configuration",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerAppConfig"
                                }
                            }
                        },
                        "description": "PerApp configuration"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get PerApp configuration",
                "tags": [
                    "Handling of overlapping objects"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "put": {
                "operationId": "update_perapp_configuration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PerAppConfig"
                            }
                        }
                    },
                    "description": "PerApp configuration to be used.\nOnly one of following is allowed at time: merging_overlapping_objects, regexes\n",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerAppConfig"
                                }
                            }
                        },
                        "description": "Updated PerApp configuration"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Update PerApp configuration",
                "tags": [
                    "Handling of overlapping objects"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/config/explode": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "post": {
                "operationId": "explode_config",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Tenant"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Tenants list"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Restart the application migration process using loaded ucs",
                "tags": [
                    "Handling of overlapping objects"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/config/reset": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "post": {
                "operationId": "reset_config",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerAppConfig"
                                }
                            }
                        },
                        "description": "Updated PerApp configuration"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Reset config to initial values",
                "tags": [
                    "Handling of overlapping objects"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/deployments": {
            "get": {
                "operationId": "get_deployments_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Deployments"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get deployments list",
                "tags": [
                    "Configuration output and deployment"
                ]
            },
            "post": {
                "operationId": "start_deployment_operation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    },
                    {
                        "description": "Run the deployment asynchronously",
                        "example": true,
                        "in": "query",
                        "name": "async",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "instance_address": {
                                        "example": "10.10.10.10",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deployment configuration",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeploymentDetails"
                                }
                            }
                        },
                        "description": "Synchronous deployment operation has finished"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeploymentDetails"
                                }
                            }
                        },
                        "description": "Deployment operation has started"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/BadRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Invalid or missing instance address, or no staged tenants."
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Deploy configuration to given system",
                "tags": [
                    "Configuration output and deployment"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/deployments/dry_run": {
            "post": {
                "operationId": "start_dry_run_operation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "instance_address": {
                                        "example": "10.10.10.10",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deployment configuration",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Dry run has completed successfully"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/BadRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/Error"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Invalid or missing instance address, or no tenants staged."
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Run dry run using staged tenants",
                "tags": [
                    "Configuration output and deployment"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/deployments/{deployment_id}": {
            "get": {
                "operationId": "get_deployment_operation_status",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    },
                    {
                        "$ref": "#/components/parameters/DeploymentId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeploymentDetails"
                                }
                            }
                        },
                        "description": "Deployment operation status"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Given deployment operation does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get status of deployment operation",
                "tags": [
                    "Configuration output and deployment"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/files/{file_path}": {
            "delete": {
                "operationId": "delete_file",
                "responses": {
                    "204": {
                        "description": "File deleted"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "File does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Delete file",
                "tags": [
                    "File Management"
                ]
            },
            "get": {
                "operationId": "get_file_content",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FileContent"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "File does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get content of the file",
                "tags": [
                    "File Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/FilePath"
                }
            ],
            "put": {
                "operationId": "post_file_change",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "format": "binary",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "New content of a file",
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Provide updated file content",
                "tags": [
                    "File Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/irules": {
            "get": {
                "operationId": "get_irules",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResponseBase"
                                        },
                                        {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/IRule"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "iRules list"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "409": {
                        "description": "AS3 output was not generated."
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get irules list",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ]
        },
        "/api/journeys/v1/sessions/{session_id}/irules/{irule_id}": {
            "get": {
                "operationId": "get_irule",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IRule"
                                }
                            }
                        },
                        "description": "Specified irule"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or iRule found"
                    },
                    "409": {
                        "description": "AS3 output was not generated."
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get specified irule",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/IRuleId"
                }
            ],
            "put": {
                "operationId": "put_irule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "irule": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "New iRule content",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IRule"
                                }
                            }
                        },
                        "description": "Updated iRule"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        },
                        "description": "Invalid body"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or iRule found"
                    },
                    "409": {
                        "description": "AS3 output was not generated."
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Change irule content",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/output": {
            "post": {
                "operationId": "generate_output",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "use_passphrase": {
                                        "default": true,
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/OutputPerapp"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Generated output"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not all issues have been resolved."
                    }
                },
                "summary": "Get output AS3",
                "tags": [
                    "Configuration output and deployment"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/preview": {
            "post": {
                "operationId": "generate_preview",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "virtual_servers": {
                                        "items": {
                                            "example": "virtual1",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "virtual_servers"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Common": {
                                            "properties": {
                                                "class": {
                                                    "example": "Tenant",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "class": {
                                            "example": "ADC",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Generated AS3 preview"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session or virtual does not exist."
                    }
                },
                "summary": "Get preview AS3 for given virtual servers",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/root_files/{file_path}": {
            "get": {
                "operationId": "get_root_file_content",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    },
                    {
                        "$ref": "#/components/parameters/FilePath"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FileContent"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "File does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get content of the sessions root file",
                "tags": [
                    "File Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/source": {
            "post": {
                "operationId": "provide_source",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "master_key": {
                                        "type": "string"
                                    },
                                    "ucs_file": {
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "ucs_passphrase": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ucs_file"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "UCS and Optional passphrase",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Cannot process uploaded file or no passphrase provided for encrypted file."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Migration process has already been started in current session."
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Provide configuration_source",
                "tags": [
                    "Source and destination BIG-IP System"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/tenants": {
            "get": {
                "operationId": "get_tenants",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Search"
                    },
                    {
                        "$ref": "#/components/parameters/Page"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    },
                    {
                        "description": "Filter result tenant list regarding to staged value",
                        "in": "query",
                        "name": "staged",
                        "schema": {
                            "example": [
                                "true",
                                "on",
                                "1",
                                "false",
                                "off",
                                "0"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResponseBase"
                                        },
                                        {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/Tenant"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Tenants list"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get tenants list",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "post": {
                "operationId": "create_tenant",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "example": "Test tenant",
                                        "type": "string"
                                    },
                                    "name": {
                                        "example": "test_tenant",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetails"
                                }
                            }
                        },
                        "description": "New tenant"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Invalid tenant name or tenant already exists"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Create a new tenant",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/tenants/bulk_stage": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ],
            "put": {
                "operationId": "set_staged_tenants",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenants": {
                                        "items": {
                                            "example": "test_tenant",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "tenants"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResponseBase"
                                        },
                                        {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/Tenant"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Staged tenants list"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session or tenant not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Set staged tenant list",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/tenants/{tenant_name}": {
            "delete": {
                "operationId": "remove_tenant",
                "responses": {
                    "204": {
                        "description": "Tenant removed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or tenant found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Tenant not empty"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Remove specified tenant",
                "tags": [
                    "Application Management"
                ]
            },
            "get": {
                "operationId": "get_tenant",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetails"
                                }
                            }
                        },
                        "description": "Specified tenant"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or tenant found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get specified tenant",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/TenantName"
                }
            ],
            "put": {
                "operationId": "rename_tenant",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "example": "Test tenant",
                                        "type": "string"
                                    },
                                    "name": {
                                        "example": "new_name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "New tenant name",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetails"
                                }
                            }
                        },
                        "description": "Renamed tenant"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Invalid tenant name"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or tenant exists"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Rename a specified tenant",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/tenants/{tenant_name}/assign_applications": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/TenantName"
                }
            ],
            "post": {
                "operationId": "assign_applications",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "applications": {
                                        "items": {
                                            "example": "application_1",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "applications"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Applications to assign",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetails"
                                }
                            }
                        },
                        "description": "Tenant with assigned application"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session, tenant or application not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Assign applications to tenant",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/tenants/{tenant_name}/stage": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/TenantName"
                }
            ],
            "post": {
                "operationId": "tenant_stage",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetails"
                                }
                            }
                        },
                        "description": "Staged tenant"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or tenant found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Stage tenant to output AS3",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/tenants/{tenant_name}/unstage": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/TenantName"
                }
            ],
            "post": {
                "operationId": "tenant_unstage",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDetails"
                                }
                            }
                        },
                        "description": "Unstaged tenant"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        },
                        "description": "Specified tenant cannot be staged"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or tenant found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Unstage tenants from output AS3",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/virtual_files/{file_path}": {
            "delete": {
                "operationId": "delete_virtual_file_change",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    },
                    {
                        "$ref": "#/components/parameters/FilePath"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Cannot delete bigip.conf"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "File does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Delete virtual file",
                "tags": [
                    "File Management"
                ]
            },
            "get": {
                "operationId": "get_virtual_file_content",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    },
                    {
                        "$ref": "#/components/parameters/FilePath"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FileContent"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "File does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get content of the virtual server config file",
                "tags": [
                    "File Management"
                ]
            },
            "put": {
                "operationId": "post_virtual_file_change",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SessionId"
                    },
                    {
                        "$ref": "#/components/parameters/FilePath"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "format": "binary",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "New content of a file",
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Cannot update following file. Only *.conf files allowed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "File does not exist"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Provide updated virtual file content",
                "tags": [
                    "File Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/virtuals": {
            "get": {
                "operationId": "get_virtuals",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Search"
                    },
                    {
                        "$ref": "#/components/parameters/Page"
                    },
                    {
                        "$ref": "#/components/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResponseBase"
                                        },
                                        {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/VirtualServer"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Virtual server list"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "Session not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get virtual servers list",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                }
            ]
        },
        "/api/journeys/v1/sessions/{session_id}/virtuals/{virtual_name}": {
            "get": {
                "operationId": "get_virtual",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualServer"
                                }
                            }
                        },
                        "description": "Specified virtual server"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or virtual server found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get specified virtual server",
                "tags": [
                    "Application Management"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/VirtualName"
                }
            ]
        },
        "/api/journeys/v1/sessions/{session_id}/virtuals/{virtual_name}/reload": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/VirtualName"
                }
            ],
            "post": {
                "operationId": "virtual_reload",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualServer"
                                }
                            }
                        },
                        "description": "Reloaded virtual server"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        },
                        "description": "Issues found with reloaded virtual server"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or virtual server found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Reload virutal server config",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/sessions/{session_id}/virtuals/{virtual_name}/revert": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/SessionId"
                },
                {
                    "$ref": "#/components/parameters/VirtualName"
                }
            ],
            "post": {
                "operationId": "virtual_revert",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualServer"
                                }
                            }
                        },
                        "description": "Reverted virtual server"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        },
                        "description": "No session or virtual server found"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Revert virutal server config to a moment after last successful reload or to initial",
                "tags": [
                    "Application Management"
                ]
            }
        },
        "/api/journeys/v1/supported_perapp_settings": {
            "get": {
                "operationId": "get_supported_perapp_settings",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportedPerappSettings"
                                }
                            }
                        },
                        "description": "List of supported perapp settings with the descriptions"
                    },
                    "500": {
                        "$ref": "#/components/responses/UnexpectedError"
                    }
                },
                "summary": "Get list of supported perapp settings",
                "tags": [
                    "Before You Start"
                ]
            }
        },
        "/api/journeys/v1/version": {
            "get": {
                "description": "Request the schema version of the journeys feature.",
                "operationId": "GetJourneysSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/JourneysVersionInfo"
                                }
                            }
                        },
                        "description": "Journeys feature schema version information"
                    }
                },
                "summary": "Return schema version",
                "tags": [
                    "JourneysFeature"
                ]
            }
        },
        "/api/login": {
            "post": {
                "description": "Login with user name and password. Validates the username and password and returns an authentication token and a refresh token. The authentication token has a short lifetime and should be included in subsequent API requests. The refresh token has a longer lifetime and can be used to get a new authentication token.",
                "operationId": "UserLogin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "password": "Pass2022!",
                                "username": "user01"
                            },
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "Password",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "User name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        },
                        "description": "Authentication token"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "User login",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/logout": {
            "post": {
                "description": "Logs out the user by closing their session state.",
                "operationId": "UserLogout",
                "responses": {
                    "204": {
                        "description": "Logged out"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "User logout",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/openapi": {
            "get": {
                "description": "Returns OpenAPI specification for the BIG-IP Next Central Manager. This is the full collection for all features.",
                "operationId": "GetAllOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "BIG-IP Next Central Manager OpenAPI specification"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Return OpenAPI specification for the BIG-IP Next Central Manager.",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/qkview/openapi": {
            "get": {
                "description": "Request openapi specification for qkview feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI response"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return openapi specification",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/files/{id}": {
            "delete": {
                "description": "Deletes the particular file of the mentioned qkview id",
                "operationId": "DeleteFile",
                "parameters": [
                    {
                        "description": "uuid of file_id of relevant qkview",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "404b7e5e-42e7-4bd8-acb0-a6b57c013b9f",
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GeneralResponse"
                                }
                            }
                        },
                        "description": "Status of Qkview deletion"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Deletes file of qkview",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/files/{id}/download": {
            "get": {
                "description": "Gets the file based on the file id provided.",
                "operationId": "GetFileByFileID",
                "parameters": [
                    {
                        "description": "The UUID of QKView File",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FileResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Gets the file from storage.",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/ihealth/authenticate": {
            "post": {
                "description": "Authenticates the iHealth server using username and password and stores/overwrites the server cookies.",
                "operationId": "AuthenticateIHealthServer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AuthenticationResponse"
                                }
                            }
                        },
                        "description": "Status of stored aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Authenticates iHealth",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/ihealth/config": {
            "get": {
                "description": "Get all the iHealth Configuration usernames.",
                "operationId": "GetIHealthUsernames",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GetIHealthResponse"
                                }
                            }
                        },
                        "description": "Status of stored aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Get iHealth Usernames",
                "tags": [
                    "QkviewFeature"
                ]
            },
            "post": {
                "description": "Stores user's iHealth credentails in Central Manager.",
                "operationId": "AddIHealthConfiguration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddIHealthConfigRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GeneralResponse"
                                }
                            }
                        },
                        "description": "Status of saved ihealth crendentials"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Adds iHealth Configuration",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/ihealth/config/{key}": {
            "delete": {
                "description": "Deletes user's iHealth credentails in Central Manager.",
                "operationId": "DeleteIHealthConfiguration",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GeneralResponse"
                                }
                            }
                        },
                        "description": "Status of deleted ihealth crendentials"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Deletes iHealth Configuration",
                "tags": [
                    "QkviewFeature"
                ]
            },
            "parameters": [
                {
                    "description": "iHealth username",
                    "in": "path",
                    "name": "key",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates user's iHealth password in Central Manager.",
                "operationId": "UpdateIHealthConfiguration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIHealthConfigRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GeneralResponse"
                                }
                            }
                        },
                        "description": "Status of updated ihealth crendentials"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Updates iHealth Configuration",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/ihealth/test-connection": {
            "post": {
                "description": "Only tests the iHealth server connection without storing/overwriting the cookies.",
                "operationId": "TestIHealthConnection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AuthenticationResponse"
                                }
                            }
                        },
                        "description": "Status of stores aggregated alerts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Test iHealth Conection",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/qkviews": {
            "get": {
                "description": "requests a list of all the qkviews",
                "operationId": "GetAllQkviews",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Qkviews"
                                }
                            }
                        },
                        "description": "list of all qkviews"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "returns all qkviews",
                "tags": [
                    "QkviewFeature"
                ]
            },
            "post": {
                "description": "Generates qkview for the BIG-IP Next instance and uploads the qkview file to Ihealth Server",
                "operationId": "RunQkviewTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "f5_support_case": "C351101",
                                "filename": "qkview_file",
                                "ihealth_password": "user_password",
                                "ihealth_user": "user_admin",
                                "instance_id": "f4a0bdb2-8b31-4a8e-aee9-7f2ac2b629d2",
                                "save_credential": true,
                                "share_with_case_owner": false,
                                "source": "INSTANCE",
                                "storage": "EXTERNAL",
                                "user_agent": "CM",
                                "visible_in_gui": false
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateQkviewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/qkviews/43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2"
                                        }
                                    },
                                    "qkview_id": "43b7bd5b-5b61-4a64-8fe4-68ef8ed910f2",
                                    "task_id": "3325e40d-d9f2-4ab7-adb3-4ce1b6dbd48e"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.QkviewTaskCreated"
                                }
                            }
                        },
                        "description": "Qkview Task Created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Run Qkview Task",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/qkviews/{id}": {
            "delete": {
                "description": "If an instance ID is sent, all QKView files for that instance are deleted; if a QKView ID is sent, all the associated QKView files are deleted, if a file ID is sent, that specific file is deleted.",
                "operationId": "DeleteQkview",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.DeleteQkviewResponses"
                                }
                            }
                        },
                        "description": "Status of Qkview deletion"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete QKView",
                "tags": [
                    "QkviewFeature"
                ]
            },
            "get": {
                "description": "requests a specific qkview",
                "operationId": "GetQkview",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Qkviews"
                                }
                            }
                        },
                        "description": "specific qkview"
                    }
                },
                "summary": "return qkview",
                "tags": [
                    "QkviewFeature"
                ]
            },
            "parameters": [
                {
                    "description": "uuid of qkview or instance",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "example": "404b7e5e-42e7-4bd8-acb0-a6b57c013b9f",
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Edits the data in the qkview table.",
                "operationId": "UpdateQkview",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateQkviewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GeneralResponse"
                                }
                            }
                        },
                        "description": "Status of update qkview operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "updates the qkview data",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/qkviews/{id}/files/{filename}/download": {
            "get": {
                "description": "Gets the file based on the qkview id provided.",
                "operationId": "GetFileByQkViewID",
                "parameters": [
                    {
                        "description": "The UUID of QKView",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The file name.",
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FileResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Gets the file from storage",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/qkviews/{id}/upload": {
            "post": {
                "description": "File is extracted based on the file id and the file data is uploaded to iHealth server",
                "operationId": "UploadToIHealthServer",
                "parameters": [
                    {
                        "description": "The UUID of QKView File",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "description": "Description about the request",
                                "f5_support_case": "case",
                                "share_with_case_owner": false,
                                "user_agent": "Chrome",
                                "username": "user",
                                "visible_in_gui": true
                            },
                            "schema": {
                                "$ref": "#/components/schemas/UploadIHealthRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.UploadIHealthResponses"
                                }
                            }
                        },
                        "description": "Status of file upload process"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Uploads file to iHealth",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/storages": {
            "get": {
                "description": "Returns internal and external storage mount paths",
                "operationId": "GetStorages",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetStorageResponse"
                                }
                            }
                        },
                        "description": "Returns internal and external storage paths"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Get internal and external storage paths available in CM",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/qkview/v1/version": {
            "get": {
                "description": "Request the schema version of the qkview feature.",
                "operationId": "GetQkviewSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.QkviewVersionInfo"
                                }
                            }
                        },
                        "description": "qkview feature schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return schema version",
                "tags": [
                    "QkviewFeature"
                ]
            }
        },
        "/api/rotate-jwt-key": {
            "post": {
                "description": "Rotate JWT key that is used to issue and verify JWTs",
                "operationId": "RotateKey",
                "responses": {
                    "204": {
                        "description": "Rotated JWT key"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Rotate JWT key",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/sslo/openapi": {
            "get": {
                "description": "Returns the OpenAPI specification of the SSLO feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "SsloFeature"
                ]
            }
        },
        "/api/sslo/v1/version": {
            "get": {
                "description": "Returns schema version of SSLO version.",
                "operationId": "GetSsloSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SsloVersionInfo"
                                }
                            }
                        },
                        "description": "SSLO schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return schema version",
                "tags": [
                    "SsloFeature"
                ]
            }
        },
        "/api/system/openapi": {
            "get": {
                "description": "Requests the OpenAPI specification.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/check-permissions": {
            "post": {
                "description": "Returns a list for the resources specified in the request body. The response includes a true/false field which indicates whether the resource is allowed.",
                "operationId": "GetEffectivePermissions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "effectivepermissions": [
                                    {
                                        "action": "GET",
                                        "resource": "/api/foo",
                                        "user_name": "admin"
                                    },
                                    {
                                        "action": "POST",
                                        "resource": "/api/bar",
                                        "user_name": "admin"
                                    },
                                    {
                                        "action": "PUT",
                                        "resource": "fizz/buzz",
                                        "user_name": "admin"
                                    }
                                ]
                            },
                            "schema": {
                                "$ref": "#/components/schemas/EffectivePermissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "effectivepermissions": [
                                        {
                                            "action": "GET",
                                            "allowed": true,
                                            "resource": "/api/foo",
                                            "user_name": "admin"
                                        },
                                        {
                                            "action": "POST",
                                            "allowed": true,
                                            "resource": "/api/bar",
                                            "user_name": "admin"
                                        },
                                        {
                                            "action": "PUT",
                                            "allowed": false,
                                            "resource": "fizz/buzz",
                                            "user_name": "admin"
                                        }
                                    ]
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/EffectivePermissions"
                                }
                            }
                        },
                        "description": "The resources included in the request with allowed true/false specified for each"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return effective permissions for specified resources",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/files": {
            "get": {
                "description": "Requests a list of metadata for all files.",
                "operationId": "ListFiles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "files": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/files/2f08aea1-6c03-439b-a448-0f33a35d294e"
                                                    }
                                                },
                                                "file_name": "abc.txt",
                                                "file_size": 12,
                                                "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                                                "id": "2f08aea1-6c03-439b-a448-0f33a35d294e",
                                                "updated": "2021-04-02T23:30:36.594263Z"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/files"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Files"
                                }
                            }
                        },
                        "description": "List of metadata of all files"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return metadata of all files",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Uploads a specified file to the system.",
                "operationId": "PostFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "example": {
                                "content": "/tmp/abc.txt",
                                "file_name": "abc.txt"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/File"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/files/2f08aea1-6c03-439b-a448-0f33a35d294e"
                                        }
                                    },
                                    "filename": "abc.txt",
                                    "id": "2f08aea1-6c03-439b-a448-0f33a35d294e",
                                    "message": "File uploaded!"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.FileOutput"
                                }
                            }
                        },
                        "description": "Specified file uploaded"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Upload a file",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/files/{id}": {
            "delete": {
                "description": "Deletes a specified file.",
                "operationId": "DeleteFile",
                "responses": {
                    "204": {
                        "description": "Specified file deleted"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete file",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests the content of a file.",
                "operationId": "GetFile",
                "responses": {
                    "200": {
                        "content": {
                            "application/octet-stream": {
                                "example": "This is a sample of file content.",
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Content of downloaded file",
                        "headers": {
                            "Content-Disposition": {
                                "schema": {
                                    "pattern": "^attachment;\\s*filename=[.\\w]+\\.[.\\w]+$",
                                    "type": "string"
                                }
                            },
                            "Content-Length": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return file content",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of file",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/system/v1/files/{id}/metadata": {
            "get": {
                "description": "Requests the metadata of a specific file.",
                "operationId": "GetFileMetadata",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/files/2f08aea1-6c03-439b-a448-0f33a35d294e/metadata"
                                        }
                                    },
                                    "file_name": "abc.txt",
                                    "file_size": 12,
                                    "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                                    "id": "2f08aea1-6c03-439b-a448-0f33a35d294e",
                                    "updated": "2021-04-02T23:30:36.594263Z"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.File"
                                }
                            }
                        },
                        "description": "File metadata"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return metadata of a file",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of file",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a file's metadata. Note that only the file_name and description can be updated.",
                "operationId": "PutFileMetadata",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "example": {
                                "description": "very important file, do not delete",
                                "file_name": "abc.txt"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/MutableFileProperties"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/files/2f08aea1-6c03-439b-a448-0f33a35d294e/metadata"
                                        }
                                    },
                                    "file_name": "abc.txt",
                                    "file_size": 12,
                                    "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                                    "id": "2f08aea1-6c03-439b-a448-0f33a35d294e",
                                    "updated": "2021-04-02T23:30:36.594263Z"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.File"
                                }
                            }
                        },
                        "description": "Updated the file's metadata"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update file metadata",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/info": {
            "get": {
                "description": "Request for system information.",
                "operationId": "GetSystemInfo",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SystemInfo"
                                }
                            }
                        },
                        "description": "System information response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return system information",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/logs/audit": {
            "get": {
                "description": "Returns a list of Audit log records, filtered based on the query parameters (if provided).",
                "operationId": "QueryAuditLog",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "description": "A response containing two Audit log records",
                                    "value": [
                                        {
                                            "endpoint": "login",
                                            "feature": "gateway",
                                            "http_method": "GET",
                                            "result_code": 200,
                                            "source_addr": "1.2.3.4",
                                            "timestamp": "2021-11-10T19:03:52.0206263Z",
                                            "url": "/login",
                                            "user": "admin",
                                            "user_id": "e6021bc9-d123-4451-9864-92d56e1fde38"
                                        },
                                        {
                                            "endpoint": "resource-permissions",
                                            "feature": "system",
                                            "http_method": "PUT",
                                            "request": {
                                                "method": "PUT",
                                                "name": "as3_deployment_put",
                                                "resource": "/api/as3-workflow/v1/deployments"
                                            },
                                            "resource_id": "bad00000-aa58-4f4a-baac-52099d6ef1d0",
                                            "result_code": 404,
                                            "source_addr": "1.2.3.4",
                                            "timestamp": "2021-11-10T19:06:46.0293256Z",
                                            "url": "/api/system/v1/resource-permissions/bad00000-aa58-4f4a-baac-52099d6ef1d0",
                                            "user_id": "e6021bc9-d123-4451-9864-92d56e1fde38"
                                        }
                                    ]
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/AuditRecords"
                                }
                            }
                        },
                        "description": "A list of Audit log records"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return Audit log records",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/rbac-group-policies": {
            "get": {
                "description": "Returns a list of all group policies in the system.",
                "operationId": "GetGroupingPolicies",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/rbac-group-policies"
                                        }
                                    },
                                    "grouppolicies": [
                                        {
                                            "resource_permission_group_id": "b2232e72-62c5-4605-a370-fdb68a0557b4",
                                            "resource_permission_id": "58587d93-a789-421b-a489-aa887f60b80a"
                                        },
                                        {
                                            "resource_permission_group_id": "b2232e72-62c5-4605-a370-fdb68a0557b4",
                                            "role_id": "5a95ccb8-1970-4cb0-93d4-da05a1ad491a"
                                        },
                                        {
                                            "role_group_id": "c3e2d2c2-7479-4025-8dc2-8777ab319681",
                                            "role_id": "5a95ccb8-1970-4cb0-93d4-da05a1ad491a"
                                        },
                                        {
                                            "role_group_id": "c3e2d2c2-7479-4025-8dc2-8777ab319681",
                                            "user_id": "6f7fe425-906d-430e-941c-a9e22661f349"
                                        }
                                    ]
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/GroupPolicies"
                                }
                            }
                        },
                        "description": "List of group policies"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all group policies",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/rbac-policies": {
            "get": {
                "description": "Returns a list of all policies in the system.",
                "operationId": "GetPolicies",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "policies": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/rbac-policies/58587d93-a789-421b-a489-aa887f60b80a"
                                                    }
                                                },
                                                "id": "58587d93-a789-421b-a489-aa887f60b80a",
                                                "method": "PUT",
                                                "name": "test_resource_permission_put",
                                                "resource": "/api/*"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/rbac-policies/c3e2d2c2-7479-4025-8dc2-8777ab319681"
                                                    }
                                                },
                                                "id": "c3e2d2c2-7479-4025-8dc2-8777ab319681",
                                                "method": "POST",
                                                "name": "test_resource_permission_post",
                                                "resource": "/api/*"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/rbac-policies"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Policies"
                                }
                            }
                        },
                        "description": "List of policies"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all policies",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/resource-permission-groups": {
            "get": {
                "description": "Requests list of all resource permission groups in system.",
                "operationId": "ListResourcePermissionGroups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "resourcePermissionGroups": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                                    }
                                                },
                                                "id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                                "name": "test-group"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permission-groups/4a3213c6-391b-4dea-8b21-ffe8239eb4c3"
                                                    }
                                                },
                                                "id": "4a3213c6-391b-4dea-8b21-ffe8239eb4c3",
                                                "name": "user-group"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permission-groups"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroups"
                                }
                            }
                        },
                        "description": "List of resource permission groups"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all resource permission groups",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Requests a new resource permission group be created on system.",
                "operationId": "CreateResourcePermissionGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "test-group"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ResourcePermissionGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                        }
                                    },
                                    "id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                    "name": "test-group"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroup"
                                }
                            }
                        },
                        "description": "Created a new resource permission group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a new resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/resource-permission-groups/{groupID}/resource-permissions/{resourcePermissionID}": {
            "delete": {
                "description": "Deletes a resource permission from a resource permission group.",
                "operationId": "RemoveResourcePermissionFromResourcePermissionGroup",
                "responses": {
                    "204": {
                        "description": "Deleted resource permission from resource permission group"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a resource permission from a resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a resource permission group resource permission map.",
                "operationId": "GetResourcePermissionGroupResourcePermissionMap",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                        }
                                    },
                                    "resource_permission_group_id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                    "resource_permission_id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroupResourcePermissionMap"
                                }
                            }
                        },
                        "description": "Specified ResourcePermissionGroupResourcePermissionMap"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a resource permission group resource permission map",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of ResourcePermissionGroup",
                    "in": "path",
                    "name": "groupID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of ResourcePermission",
                    "in": "path",
                    "name": "resourcePermissionID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/system/v1/resource-permission-groups/{id}": {
            "delete": {
                "description": "Deletes a resource permission group from system.",
                "operationId": "DeleteResourcePermissionGroup",
                "responses": {
                    "204": {
                        "description": "Deleted the specified resource permission group"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific resource permission group in system.",
                "operationId": "GetResourcePermissionGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "example": {
                                        "_links": {
                                            "self": {
                                                "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                            }
                                        },
                                        "id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                        "name": "test-group"
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroup"
                                }
                            }
                        },
                        "description": "Specific resource permission group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return specific resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of resource permission group",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific resource permission group in system.",
                "operationId": "UpdateResourcePermissionGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "user-group"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ResourcePermissionGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                        }
                                    },
                                    "id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                    "name": "user-group"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroup"
                                }
                            }
                        },
                        "description": "Updated resource permission group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/resource-permission-groups/{id}/resource-permissions": {
            "get": {
                "description": "Requests a list of all the resource permissions belonging to resource permission group.",
                "operationId": "GetResourcePermissionGroupResourcePermissions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "_links": {
                                            "self": {
                                                "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1/resource-permissions"
                                            }
                                        },
                                        "resourcePermissions": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                                    }
                                                },
                                                "id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3",
                                                "method": "GET",
                                                "name": "test-resource-permission",
                                                "resource": "/api/system/v1/info"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permissions/4a3213c6-391b-4dea-8b21-ffe8239eb4c3"
                                                    }
                                                },
                                                "id": "4a3213c6-391b-4dea-8b21-ffe8239eb4c3",
                                                "method": "POST",
                                                "name": "user-resource-permission",
                                                "resource": "/api/system/v1/users"
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissions"
                                }
                            }
                        },
                        "description": "List of ResourcePermissions that belong to specified ResourcePermissionGroup"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all resource permissions that belong to a resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of resource permission group",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds a resource permission to a resource permission group.",
                "operationId": "AddResourcePermissionToResourcePermissionGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ObjectID"
                            }
                        }
                    },
                    "description": "UUID of resource permission",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                        }
                                    },
                                    "resource_permission_group_id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                    "resource_permission_id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroupResourcePermissionMap"
                                }
                            }
                        },
                        "description": "Added resource permission to resource permission group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Add a resource permission to a resource permission group",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/resource-permissions": {
            "get": {
                "description": "Requests a list of all resource permissions in system.",
                "operationId": "ListResourcePermissions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "resourcePermissions": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                                    }
                                                },
                                                "id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3",
                                                "method": "GET",
                                                "name": "test-resource-permission",
                                                "resource": "/api/system/v1/info"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permissions/4a3213c6-391b-4dea-8b21-ffe8239eb4c3"
                                                    }
                                                },
                                                "id": "4a3213c6-391b-4dea-8b21-ffe8239eb4c3",
                                                "method": "POST",
                                                "name": "user-resource-permission",
                                                "resource": "/api/system/v1/users"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permissions"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissions"
                                }
                            }
                        },
                        "description": "List of all resource permissions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all resource permissions",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Requests a new resource permission be created on the system.",
                "operationId": "CreateResourcePermission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "method": "GET",
                                "name": "test-resource-permission",
                                "resource": "/api/system/v1/info"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ResourcePermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                        }
                                    },
                                    "id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3",
                                    "method": "GET",
                                    "name": "test-resource-permission",
                                    "resource": "/api/system/v1/info"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermission"
                                }
                            }
                        },
                        "description": "Created a new resource permission"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a new resource permission",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/resource-permissions/{id}": {
            "delete": {
                "description": "Deletes a resource permission from system.",
                "operationId": "DeleteResourcePermission",
                "responses": {
                    "204": {
                        "description": "Deleted specified resource permission"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove resource permission",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific resource permission in system.",
                "operationId": "GetResourcePermission",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                        }
                                    },
                                    "id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3",
                                    "method": "GET",
                                    "name": "test-resource-permission",
                                    "resource": "/api/system/v1/info"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermission"
                                }
                            }
                        },
                        "description": "Specific resource permission"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return specific resource permission",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of resource permission",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific resource permission in system.",
                "operationId": "UpdateResourcePermission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "method": "POST",
                                "name": "test-resource-permission",
                                "resource": "/api/system/v1/users"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ResourcePermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/resource-permissions/8b6963c6-391b-4dea-8b21-ffe8239eb4c3"
                                        }
                                    },
                                    "id": "8b6963c6-391b-4dea-8b21-ffe8239eb4c3",
                                    "method": "POST",
                                    "name": "test-resource-permission",
                                    "resource": "/api/system/v1/users"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermission"
                                }
                            }
                        },
                        "description": "Updated specific resource permission"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update resource permission",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/role-groups": {
            "get": {
                "description": "Requests a list of all role groups on system.",
                "operationId": "ListRoleGroups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "roleGroups": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                                    }
                                                },
                                                "id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                                "name": "test-role-groups"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/role-groups/65349017-e63f-4b32-b6fc-4abd1a014b2e"
                                                    }
                                                },
                                                "id": "65349017-e63f-4b32-b6fc-4abd1a014b2e",
                                                "name": "user-role-groups"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/role-groups"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroups"
                                }
                            }
                        },
                        "description": "List of all role groups on system"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all role groups",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Requests a new role group be created on system.",
                "operationId": "CreateRoleGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "test-role-group"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/RoleGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                        }
                                    },
                                    "id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "name": "test-role-groups"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroup"
                                }
                            }
                        },
                        "description": "New role group created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a new role group",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/role-groups/{groupID}/roles/{roleID}": {
            "delete": {
                "description": "Deletes a role from a role group on system.",
                "operationId": "RemoveRoleFromRoleGroup",
                "responses": {
                    "204": {
                        "description": "Role removed from the role group"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a role from a role group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific role group role map.",
                "operationId": "GetRoleGroupRoleMap",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                        }
                                    },
                                    "role_group_id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "role_id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroupRoleMap"
                                }
                            }
                        },
                        "description": "Specified RoleGroupRoleMap"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a role group role map",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of RoleGroup",
                    "in": "path",
                    "name": "groupID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of Role",
                    "in": "path",
                    "name": "roleID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/system/v1/role-groups/{id}": {
            "delete": {
                "description": "Deletes a specific role group from system.",
                "operationId": "DeleteRoleGroup",
                "responses": {
                    "204": {
                        "description": "Deleted the specified role group"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a role group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific role group.",
                "operationId": "GetRoleGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                        }
                                    },
                                    "id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "name": "test-role-groups"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroup"
                                }
                            }
                        },
                        "description": "Specific role group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return specific role group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of role group",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific role group on system.",
                "operationId": "UpdateRoleGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "renamed-group"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/RoleGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                        }
                                    },
                                    "id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "name": "renamed-group"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroup"
                                }
                            }
                        },
                        "description": "Updated specified role group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update role group",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/role-groups/{id}/roles": {
            "get": {
                "description": "Requests a list of all the roles belonging to role group.",
                "operationId": "GetRoleGroupRoles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "_links": {
                                            "self": {
                                                "href": "/v1/role-groups/328cd506-1cc4-46d3-91d6-7ca438ec400/roles"
                                            }
                                        },
                                        "roles": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                                    }
                                                },
                                                "id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890",
                                                "name": "test-role"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/roles/4abcd506-1cc4-46d3-91d6-7ca438ec3890"
                                                    }
                                                },
                                                "id": "4abcd506-1cc4-46d3-91d6-7ca438ec3890",
                                                "name": "test-role2"
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Roles"
                                }
                            }
                        },
                        "description": "List of all Roles belonging to role group id"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all roles that belong to a role group",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of role group",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds a role to a role group on system.",
                "operationId": "AddRoleToRoleGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ObjectID"
                            }
                        }
                    },
                    "description": "UUID of role",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                        }
                                    },
                                    "role_group_id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "role_id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroupRoleMap"
                                }
                            }
                        },
                        "description": "Role added to role group"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Add a role to a role group",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/roles": {
            "get": {
                "description": "Requests a list of all roles in the system.",
                "operationId": "ListRoles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "roles": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                                    }
                                                },
                                                "id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890",
                                                "name": "test-role"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/roles/4abcd506-1cc4-46d3-91d6-7ca438ec3890"
                                                    }
                                                },
                                                "id": "4abcd506-1cc4-46d3-91d6-7ca438ec3890",
                                                "name": "test-role2"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Roles"
                                }
                            }
                        },
                        "description": "List of all roles"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all roles",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Requests to create a new role on the system.",
                "operationId": "CreateRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "test-role"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                        }
                                    },
                                    "id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890",
                                    "name": "test-role"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Role"
                                }
                            }
                        },
                        "description": "New role created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a new role",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/roles/{id}": {
            "delete": {
                "description": "Deletes a role from the system.",
                "operationId": "DeleteRole",
                "responses": {
                    "204": {
                        "description": "Removed specified role"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a role",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific role in the system.",
                "operationId": "GetRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                        }
                                    },
                                    "id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890",
                                    "name": "test-role"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Role"
                                }
                            }
                        },
                        "description": "Specified role"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return specific role",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of role",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a role in the system.",
                "operationId": "UpdateRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                        }
                                    },
                                    "id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890",
                                    "name": "renamed-role"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Role"
                                }
                            }
                        },
                        "description": "Specified role updated"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update role",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/roles/{id}/resource-permission-groups": {
            "get": {
                "description": "Requests a list of all the resource permission groups belonging to role.",
                "operationId": "GetRoleResourcePermissionGroups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "resourcePermissionGroups": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                                    }
                                                },
                                                "id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                                "name": "test-group"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/resource-permission-groups/4a3213c6-391b-4dea-8b21-ffe8239eb4c3"
                                                    }
                                                },
                                                "id": "4a3213c6-391b-4dea-8b21-ffe8239eb4c3",
                                                "name": "user-group"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles/{id}/resource-permission-groups"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ResourcePermissionGroups"
                                }
                            }
                        },
                        "description": "List of all ResourcePermissionGroups belonging to user role id"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Returns all the resource permission groups that belong to a role",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of role",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Assigns a resource permission group to a role.",
                "operationId": "AddResourcePermissionGroupToRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ObjectID"
                            }
                        }
                    },
                    "description": "UUID of resource permission group",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                        }
                                    },
                                    "resource_permission_group_id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                    "role_id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleResourcePermissionGroupMap"
                                }
                            }
                        },
                        "description": "Resource permission group assigned to role"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Assign a resource permission group to a role",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/roles/{roleID}/resource-permission-groups/{groupID}": {
            "delete": {
                "description": "Removes a resource permission group from a role.",
                "operationId": "RemoveResourcePermissionGroupFromRole",
                "responses": {
                    "204": {
                        "description": "Resource permission group removed from role"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a resource permission group from a role",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific role resource permission group map.",
                "operationId": "GetRoleResourcePermissionGroupMap",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/roles/2dbec506-1cc4-46d3-91d6-7ca438ec3890/resource-permission-groups/e754297c-bf49-4162-8a0c-e3a26cb648f1"
                                        }
                                    },
                                    "resource_permission_group_id": "e754297c-bf49-4162-8a0c-e3a26cb648f1",
                                    "role_id": "2dbec506-1cc4-46d3-91d6-7ca438ec3890"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleResourcePermissionGroupMap"
                                }
                            }
                        },
                        "description": "Specified RoleResourcePermissionGroupMap"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a role resource permission group map",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of role",
                    "in": "path",
                    "name": "roleID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of resource permission group",
                    "in": "path",
                    "name": "groupID",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/system/v1/smtp-servers": {
            "get": {
                "description": "Requests a list of all SMTP servers.",
                "operationId": "ListSMTPServers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "_smtp-servers": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/smtp-server/3121e416-a21e-4546-90a3-726b61356ab2"
                                                    }
                                                },
                                                "authentication_enabled": "true",
                                                "description": "Test SMTP server",
                                                "encryption": "TLS",
                                                "from_address": "admin@f5.com",
                                                "host": "mail.f5net.com",
                                                "id": "3121e416-a21e-4546-90a3-726b61356ab2",
                                                "password": "admin",
                                                "port": 25,
                                                "server_name": "test_smtp",
                                                "username": "admin"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/smtp-server/007879fc-b1ea-4359-8d87-27b03dd4fe96"
                                                    }
                                                },
                                                "authentication_enabled": "false",
                                                "default_server": "false",
                                                "encryption": "TLS",
                                                "from_address": "admin@f5.com",
                                                "host": "mail.f5net.com",
                                                "id": "007879fc-b1ea-4359-8d87-27b03dd4fe96",
                                                "modified_time": "2022-01-19T12:09:55.355782+05:30",
                                                "port": 25,
                                                "server_name": "test_smtp"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/smtp-server"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SMTPServer"
                                }
                            }
                        },
                        "description": "SMTP server configuration."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all SMTP servers",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Requests to add SMTP server to the system.",
                "operationId": "CreateSMTPServer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "authentication_enabled": "true",
                                "description": "Test SMTP server",
                                "encryption": "TLS",
                                "from_address": "admin@f5.com",
                                "host": "mail.f5net.com",
                                "password": "admin",
                                "port": 25,
                                "server_name": "test_smtp",
                                "username": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/SMTPServerRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": [
                                    {
                                        "_links": {
                                            "authentication_enabled": "true",
                                            "description": "Test SMTP server",
                                            "encryption": "TLS",
                                            "from_address": "admin@f5.com",
                                            "host": "mail.f5net.com",
                                            "id": "007879fc-b1ea-4359-8d87-27b03dd4fe96",
                                            "password": "admin",
                                            "port": 25,
                                            "self": {
                                                "href": "/v1/smtp-server/007879fc-b1ea-4359-8d87-27b03dd4fe96"
                                            },
                                            "server_name": "test_smtp",
                                            "username": "admin"
                                        }
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SMTPServer"
                                }
                            }
                        },
                        "description": "SMTP server configuration."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Add SMTP server to the system",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/smtp-servers/connect": {
            "post": {
                "description": "Requests to check reachability to SMTP server",
                "operationId": "CheckSMTPServerConnection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "host": "mail.f5net.com",
                                "port": 25
                            },
                            "schema": {
                                "$ref": "#/components/schemas/SMTPServerConnection"
                            }
                        }
                    },
                    "description": "host and port is *mandatory*",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/checkSmtpConnectionResponse"
                                }
                            }
                        },
                        "description": "SMTP server is reachable."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request ."
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Check SMTP server connection",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/smtp-servers/{id}": {
            "delete": {
                "description": "Requests to delete SMTP server.",
                "operationId": "DeleteSMTPServer",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteStatus"
                                }
                            }
                        },
                        "description": "SMTP server deleted."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete SMTP server",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific SMTP server.",
                "operationId": "GetSMTPServer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": [
                                    {
                                        "_links": {
                                            "authentication_enabled": "false",
                                            "default_server": "false",
                                            "encryption": "TLS",
                                            "from_address": "admin@f5.com",
                                            "host": "mail.f5net.com",
                                            "id": "007879fc-b1ea-4359-8d87-27b03dd4fe96",
                                            "modified_time": "2022-01-19T12:09:55.355782+05:30",
                                            "port": 25,
                                            "self": {
                                                "href": "/v1/smtp-server/007879fc-b1ea-4359-8d87-27b03dd4fe96"
                                            },
                                            "server_name": "test_smtp"
                                        }
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SMTPServer"
                                }
                            }
                        },
                        "description": "SMTP server configuration."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a specific SMTP server",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "ID of the SMTP server.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the information of a SMTP server.",
                "operationId": "UpdateSMTPServer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "authentication_enabled": "true",
                                "description": "Test SMTP server",
                                "encryption": "TLS",
                                "from_address": "admin@f5.com",
                                "host": "mail.f5net.com",
                                "password": "admin",
                                "port": 25,
                                "server_name": "test_smtp",
                                "username": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSMTPServer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": [
                                    {
                                        "_links": {
                                            "authentication_enabled": "true",
                                            "description": "Test SMTP server",
                                            "disabled": "false",
                                            "encryption": "TLS",
                                            "from_address": "admin@f5.com",
                                            "host": "mail.f5net.com",
                                            "id": "007879fc-b1ea-4359-8d87-27b03dd4fe96",
                                            "password": "admin",
                                            "port": 25,
                                            "self": {
                                                "href": "/v1/smtp-server/007879fc-b1ea-4359-8d87-27b03dd4fe96"
                                            },
                                            "server_name": "test_smtp",
                                            "username": "admin"
                                        }
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SMTPServer"
                                }
                            }
                        },
                        "description": "SMTP server configuration."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a SMTP server",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/tasks": {
            "get": {
                "description": "Requests a list of all system tasks.",
                "operationId": "ListTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "tasks": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                                    }
                                                },
                                                "completed": "2021-04-02T23:11:19.08911Z",
                                                "created": "2021-04-02T23:11:18.051859Z",
                                                "failure_reason": "",
                                                "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                                "name": "discover 10.145.66.196",
                                                "state": "addingDeviceToGroup",
                                                "status": "completed",
                                                "task_type": "device_discovery",
                                                "updated": "2021-04-02T23:11:19.08911Z"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/tasks"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Tasks"
                                }
                            }
                        },
                        "description": "List of tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all tasks",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/tasks/{id}": {
            "get": {
                "description": "Requests a specific task.",
                "operationId": "GetTask",
                "parameters": [
                    {
                        "description": "UUID of task",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/tasks/918425aa-580b-42f5-9893-9292c6622c8b"
                                        }
                                    },
                                    "completed": "2021-04-02T23:11:19.08911Z",
                                    "created": "2021-04-02T23:11:18.051859Z",
                                    "failure_reason": "",
                                    "id": "918425aa-580b-42f5-9893-9292c6622c8b",
                                    "name": "discover 10.10.10.1",
                                    "state": "addingDeviceToGroup",
                                    "status": "completed",
                                    "task_type": "device_discovery",
                                    "updated": "2021-04-02T23:11:19.08911Z"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Task"
                                }
                            }
                        },
                        "description": "A task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return specific task",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users": {
            "get": {
                "description": "Requests a list of all system users.",
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "users": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/users/3121e416-a21e-4546-90a3-726b61356ab2"
                                                    }
                                                },
                                                "id": "3121e416-a21e-4546-90a3-726b61356ab2",
                                                "username": "admin"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/users/c339fdfb-0068-4549-b056-2a23f95be74b"
                                                    }
                                                },
                                                "id": "c339fdfb-0068-4549-b056-2a23f95be74b",
                                                "username": "test"
                                            }
                                        ]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/v1/users"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Users"
                                }
                            }
                        },
                        "description": "List of all users"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all users",
                "tags": [
                    "SystemFeature"
                ]
            },
            "post": {
                "description": "Requests to add a user to system.",
                "operationId": "CreateUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "password": "test",
                                "username": "test"
                            },
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "User name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/users/c339fdfb-0068-4549-b056-2a23f95be74b"
                                        }
                                    },
                                    "id": "c339fdfb-0068-4549-b056-2a23f95be74b",
                                    "username": "test"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.User"
                                }
                            }
                        },
                        "description": "User added to system"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Add user to system",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users/change-password": {
            "post": {
                "description": "Request to change the temp password to the new password",
                "operationId": "DoChangePassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "username": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Password change was successful."
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePasswordResponse"
                                }
                            }
                        },
                        "description": "A response to notify user that password change successfulluy"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Changes the temp password to the new password",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users/reset-password": {
            "post": {
                "description": "Request to generate temporary password for user to login.",
                "operationId": "DoResetPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "temporary_password": "temp@123",
                                "username": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Password reset was successful."
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordResponse"
                                }
                            }
                        },
                        "description": "A response to notify user that password reset successfully"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Generate temporary password for user to login",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users/restore-password": {
            "post": {
                "description": "Request to reset the temporay password fields and restore the password to non-temporary password.",
                "operationId": "DoRestorePassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "username": "admin"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/RestorePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Password restore was successful."
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/RestorePasswordResponse"
                                }
                            }
                        },
                        "description": "A response to notify user that password restore successfulluy"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Restores to the previous password",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users/{id}": {
            "delete": {
                "description": "Deletes a specified user from system.",
                "operationId": "DeleteUser",
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove a user",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific user.",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/users/c339fdfb-0068-4549-b056-2a23f95be74b"
                                        }
                                    },
                                    "id": "c339fdfb-0068-4549-b056-2a23f95be74b",
                                    "username": "test"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.User"
                                }
                            }
                        },
                        "description": "Specified user"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a specific user",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of user",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the user information of a specified user.",
                "operationId": "UpdateUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "example1": {
                                    "description": "Changing the password",
                                    "value": {
                                        "new_password": "updated-password",
                                        "password": "test-password",
                                        "username": "test-username"
                                    }
                                },
                                "example2": {
                                    "description": "Disable user",
                                    "value": {
                                        "disabled": true
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "examples": {
                                    "example1": {
                                        "description": "password updated",
                                        "value": {
                                            "_links": {
                                                "self": {
                                                    "href": "/v1/users/c339fdfb-0068-4549-b056-2a23f95be74b"
                                                }
                                            },
                                            "id": "c339fdfb-0068-4549-b056-2a23f95be74b",
                                            "username": "test-username"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.User"
                                }
                            }
                        },
                        "description": "User information updated"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a user",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users/{id}/role-groups": {
            "get": {
                "description": "Requests a list of all the role groups belonging to user.",
                "operationId": "GetUserRoleGroups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_embedded": {
                                        "_links": {
                                            "self": {
                                                "href": "/v1/users/c339fdfb-0068-4549-b056-2a23f95be74b/role-groups"
                                            }
                                        },
                                        "roleGroups": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                                    }
                                                },
                                                "id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                                "name": "test-role-groups"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/v1/role-groups/65349017-e63f-4b32-b6fc-4abd1a014b2e"
                                                    }
                                                },
                                                "id": "65349017-e63f-4b32-b6fc-4abd1a014b2e",
                                                "name": "user-role-groups"
                                            }
                                        ]
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.RoleGroups"
                                }
                            }
                        },
                        "description": "List of all role groups belonging to user with id"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all role groups that belong to a user",
                "tags": [
                    "SystemFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of user",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Assigns a role group to a user.",
                "operationId": "AddRoleGroupToUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "id": "10259017-e63f-4b32-b6fc-4abd1a014b2e"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/ObjectID"
                            }
                        }
                    },
                    "description": "UUID of role group",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/users/e5adb272-632a-4ab1-8bb5-481f25fc4a19/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                        }
                                    },
                                    "role_group_id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "user_id": "e5adb272-632a-4ab1-8bb5-481f25fc4a19"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.UserRoleGroupMap"
                                }
                            }
                        },
                        "description": "Role group was assigned to user"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Assign a role group to a user",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/users/{userID}/role-groups/{groupID}": {
            "delete": {
                "description": "Removes a role group from a user.",
                "operationId": "RemoveRoleGroupFromUser",
                "parameters": [
                    {
                        "description": "UUID of user",
                        "in": "path",
                        "name": "userID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "UUID of role group",
                        "in": "path",
                        "name": "groupID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role group removed from user"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Remove role group from user",
                "tags": [
                    "SystemFeature"
                ]
            },
            "get": {
                "description": "Requests a specific UserRoleGroupMap",
                "operationId": "GetUserRoleGroupMap",
                "parameters": [
                    {
                        "description": "UUID of user",
                        "in": "path",
                        "name": "userID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "UUID of RoleGroup",
                        "in": "path",
                        "name": "groupID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/users/e5adb272-632a-4ab1-8bb5-481f25fc4a19/role-groups/10259017-e63f-4b32-b6fc-4abd1a014b2e"
                                        }
                                    },
                                    "role_group_id": "10259017-e63f-4b32-b6fc-4abd1a014b2e",
                                    "user_id": "e5adb272-632a-4ab1-8bb5-481f25fc4a19"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.UserRoleGroupMap"
                                }
                            }
                        },
                        "description": "Specified UserRoleGroupMap"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a UserRoleGroupMap",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/system/v1/version": {
            "get": {
                "description": "Requests schema version of the system.",
                "operationId": "GetSystemSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/v1/version"
                                        }
                                    },
                                    "schema_version": "1.10"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SystemVersionInfo"
                                }
                            }
                        },
                        "description": "System schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return system schema version",
                "tags": [
                    "SystemFeature"
                ]
            }
        },
        "/api/token-refresh": {
            "post": {
                "description": "User refresh token to produce an auth token",
                "operationId": "RefreshToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "refreshtoken": "refresh test token"
                            },
                            "schema": {
                                "properties": {
                                    "refresh_token": {
                                        "description": "Refresh token",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "refresh_token"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        },
                        "description": "Authentication token"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "User refresh token to produce an auth token",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/api/waf/openapi": {
            "get": {
                "description": "Requests the OpenAPI specification of the WAF feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification response"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/analytics\\\\:getCount": {
            "post": {
                "description": "Provides the number of web application requests (count) per specified time frame.",
                "operationId": "GetCount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "summary": "Requests from US blocked by Policy1 during last hour",
                                    "value": {
                                        "duration": "1h",
                                        "entity": "geolocation",
                                        "filter": "actionType eq 'blocked' and country eq 'US' and policy eq 'Policy1'"
                                    }
                                },
                                "second": {
                                    "summary": "Requests from Mexico handled by Policy2 during last week",
                                    "value": {
                                        "duration": "1w",
                                        "entity": "geolocation",
                                        "filter": "country eq 'MX' and policy eq 'Policy2'"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/WafAnalytics"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafAnalyticsCount"
                                }
                            }
                        },
                        "description": "Successful response for returning request count."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return the number of requests during a time frame.",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/analytics\\\\:getCountRange": {
            "post": {
                "description": "Provides the time interval applied when retrieving the number of web application requests.",
                "operationId": "GetCountRange",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "summary": "Range for number of requests (count and time stamp) from US blocked by Policy1 during last hour",
                                    "value": {
                                        "duration": "1h",
                                        "entity": "geolocation",
                                        "filter": "actionType eq 'blocked' and country eq 'US' and policy eq 'Policy1'"
                                    }
                                },
                                "second": {
                                    "summary": "Range for number of requests (count and time stamp) from Mexico handled by Policy2 during last week",
                                    "value": {
                                        "duration": "1w",
                                        "entity": "geolocation",
                                        "filter": "country eq 'MX' and policy eq 'Policy2'"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/WafAnalytics"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafAnalyticsRange"
                                }
                            }
                        },
                        "description": "Successful response for returning the time interval applied when retrieving the number of web application requests."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return the time interval applied to get the number of requests.",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/analytics\\\\:getRequestPercentage": {
            "post": {
                "description": "Provides the percentage of requests out of a specified request action type. For example, provides the percentage of requests blocked from a specific country out of all the blocked requests.",
                "operationId": "GetRequestPercentage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "summary": "Percentage of requests from US blocked by Policy1 during last hour",
                                    "value": {
                                        "duration": "1h",
                                        "entity": "geolocation",
                                        "group_filter": "actionType eq 'blocked' and policy eq 'Policy1'",
                                        "subgroup_filter": "actionType eq 'blocked' and country eq 'US' and policy eq 'Policy1'"
                                    }
                                },
                                "second": {
                                    "summary": "Percentage of requests from Mexico handled by Policy2 during last week",
                                    "value": {
                                        "duration": "1w",
                                        "entity": "geolocation",
                                        "group_filter": "policy eq 'Policy2'",
                                        "subgroup_filter": "country eq 'MX' and policy eq 'Policy2'"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/WafAnalyticsPercentageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafAnalyticsTrend"
                                }
                            }
                        },
                        "description": "Successful response for returning the percentage of requests for a specified value."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return the percent of requests out of a specified request action type.",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/analytics\\\\:getTopCount": {
            "post": {
                "description": "Provides the top 20 web application requests during a specified time frame (aggregated by Geolocation, or Source IP, or URL).",
                "operationId": "GetTopCount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WafAnalyticsTopRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafAnalyticsTopCount"
                                }
                            }
                        },
                        "description": "Successful response for returning the number of top web application requests."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return top 20 requests (count) for a  time frame (aggregated by Geolocation, or Source IP, or URL).",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/analytics\\\\:getTrend": {
            "post": {
                "description": "Provides trends of web application requests during a specified time frame.",
                "operationId": "GetTrend",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "summary": "Trend of requests from US blocked by Policy1 during last hour",
                                    "value": {
                                        "duration": "1h",
                                        "entity": "geolocation",
                                        "filter": "actionType eq 'blocked' and country eq 'US' and policy eq 'Policy1'"
                                    }
                                },
                                "second": {
                                    "summary": "Trend of requests from Mexico handled by Policy2 during last week",
                                    "value": {
                                        "duration": "1w",
                                        "entity": "geolocation",
                                        "filter": "country eq 'MX' and policy eq 'Policy2'"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/WafAnalytics"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafAnalyticsTrend"
                                }
                            }
                        },
                        "description": "Successful response for returning the request trend."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a request trend for specific time frame.",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/analytics\\\\:getViolationRating": {
            "post": {
                "description": "Provides the average request violation rating during a specified time frame.",
                "operationId": "GetViolationRating",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "summary": "Violation rating of requests from US blocked by Policy1 during last hour",
                                    "value": {
                                        "duration": "1h",
                                        "entity": "geolocation",
                                        "filter": "actionType eq 'blocked' and country eq 'US' and policy eq 'Policy1'"
                                    }
                                },
                                "second": {
                                    "summary": "Violation rating of requests from Mexico handled by Policy2 during last week",
                                    "value": {
                                        "duration": "1w",
                                        "entity": "geolocation",
                                        "filter": "country eq 'MX' and policy eq 'Policy2'"
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/WafAnalytics"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafAnalyticsRating"
                                }
                            }
                        },
                        "description": "Successful response for returning the average request violation rating."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an average request violation rating for a specific time frame.",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/application-languages": {
            "get": {
                "description": "Requests a list of all supported application languages.",
                "operationId": "ListApplicationLanguages",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApplicationLanguagesList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving application languages"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return application languages",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/evasion-violations": {
            "get": {
                "description": "Requests a list of all supported evasion technique violations.",
                "operationId": "ListEvasions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.EvasionList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving evasion technique violations"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return evasion technique violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/event-logs": {
            "get": {
                "description": "Requests a list of web application traffic logs",
                "operationId": "ListTrafficLog",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/includeParam"
                    },
                    {
                        "description": "Filter conditions for result queries. Query by equality, string, or numerical conditions are possible",
                        "examples": {
                            "all": {
                                "summary": "query all fields",
                                "value": "all eq 'http'"
                            },
                            "equality": {
                                "summary": "query by equality",
                                "value": "status eq 'completed'"
                            },
                            "numerical": {
                                "summary": "query by numerical condition",
                                "value": "port gte 80"
                            },
                            "string": {
                                "summary": "query by string",
                                "value": "hostname startswith 'mbip'"
                            }
                        },
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TrafficLogList"
                                }
                            }
                        },
                        "description": "Success response status for retrieving web application traffic logs"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a list of web application traffic logs",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/event-logs/{support-id}": {
            "delete": {
                "description": "Deletes a specific web application WAF traffic log",
                "operationId": "DeleteTrafficLog",
                "responses": {
                    "204": {
                        "description": "Successfully deleted all web application traffic logs"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a specific web application traffic log",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a specific web application traffic log",
                "operationId": "GetTrafficLog",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TrafficLog"
                                }
                            }
                        },
                        "description": "Success response status for retrieving web application traffic log"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a web application traffic log",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Web application traffic log support_id",
                    "in": "path",
                    "name": "support-id",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific of web application traffic log specified by request support ID",
                "operationId": "UpdateTrafficLog",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/TrafficLogTagsComment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TrafficLog"
                                }
                            }
                        },
                        "description": "Success response status for updating web application traffic log"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a specific of web application traffic log",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/event-logs:delete": {
            "post": {
                "description": "Deletes web application WAF traffic logs",
                "operationId": "DeleteTrafficLogs",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "value": {
                                        "filter": "dest_port eq '8080' or geo_location eq 'MX'"
                                    }
                                },
                                "second": {
                                    "value": {
                                        "support_ids": [
                                            "10783283654588104717",
                                            "10783283654588104718"
                                        ]
                                    }
                                },
                                "third": {
                                    "value": {
                                        "delete_all": true
                                    }
                                }
                            },
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/WafTrafficLogsDeleteAllRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/WafTrafficLogsDeleteByIdRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/WafTrafficLogsDeleteByFilterRequest"
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successfully deleted web application traffic logs"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete web application traffic logs",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/export-policies": {
            "post": {
                "description": "Download a zip file of selected WAF policies.",
                "operationId": "ExportPolicies",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "policies": [
                                    "first_policy",
                                    "second_policy"
                                ]
                            },
                            "schema": {
                                "$ref": "#/components/schemas/WafMultiplePoliciesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successfully exported WAF policies"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Download a zip file of selected WAF policies",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/filetype-violations": {
            "get": {
                "description": "Requests a list of all supported file type violations.",
                "operationId": "ListFiletypeViolations",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ViolationList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving file type violations"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all supported file type violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/geolocations": {
            "get": {
                "description": "Requests a list of all supported geolocations.",
                "operationId": "ListGeolocations",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GeolocationsList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving geolocations"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return geolocations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/http-rfc-violations": {
            "get": {
                "description": "Requests a list of all supported HTTP RFC violations.",
                "operationId": "ListHTTPRFCViolations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.HttpRFCList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving HTTP RFC violations"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return HTTP RFC violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/ip-addresses": {
            "post": {
                "description": "Creates, updates or deletes an IP address.",
                "operationId": "ModifyIPAddress",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/IpAddressCreateUpdate"
                                    },
                                    {
                                        "$ref": "#/components/schemas/IpAddressDelete"
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successfully modified the IP address"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create, update or delete an IP address",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/live-update/attack-signatures": {
            "get": {
                "description": "Requests a list of live update attack signatures files.",
                "operationId": "ListWafLiveUpdateAttackSignaturesFiles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateFiles"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving live update attack signatures files."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return live update attack signatures files",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/live-update/attack-signatures/{id}": {
            "delete": {
                "description": "Deletes a specific live update attack signatures file.",
                "operationId": "DeleteWafLiveUpdateAttackSignaturesFile",
                "responses": {
                    "204": {
                        "description": "Successfully deleted a live update attack signatures file."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a live update attack signatures file",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a specific live update attack signatures file.",
                "operationId": "GetWafLiveUpdateAttackSignaturesFile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateFile"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a live update attack signatures file."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a live update attack signatures file",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of the attack signatures file.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/live-update/attack-signatures/{id}/preview": {
            "get": {
                "description": "Requests a specific live update attack signatures file preview.",
                "operationId": "GetWafLiveUpdateAttackSignaturesFilePreview",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateFilePreview"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a live update attack signatures file preview."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a live update attack signatures file preview",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of the attack signatures file.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies": {
            "get": {
                "description": "Requests a list of WAF policies.",
                "operationId": "ListPolicies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF policies"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return WAF policies",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Creates a policy using a template's default settings.",
                "operationId": "CreatePolicyFromTemplate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePolicyFromTemplateData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafPolicy"
                                }
                            }
                        },
                        "description": "Successful response status for creating a policy"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a policy using a template",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}": {
            "delete": {
                "description": "Deletes a specific WAF policy.",
                "operationId": "DeletePolicy",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified WAF policy"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a policy",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a specific WAF policy.",
                "operationId": "GetPolicy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafPolicy"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF policy"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a WAF policy",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific WAF policy.",
                "operationId": "UpdatePolicy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WafPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafPolicy"
                                }
                            }
                        },
                        "description": "Successful response status for updating a WAF policy"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/disallowed-geolocations": {
            "get": {
                "description": "Requests a list of the policy disallowed geolocations.",
                "operationId": "ListPolicyDisallowedGeolocations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyDisallowedGeolocationList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy disallowed geolocations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy disallowed geolocations",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/disallowed-geolocations/{country-id}": {
            "get": {
                "description": "Requests a specific policy disallowed geolocation.",
                "operationId": "GetPolicyDisallowedGeolocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyDisallowedGeolocation"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy disallowed geolocation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy disallowed geolocation",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of disallowed geolocation",
                    "in": "path",
                    "name": "country-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/download": {
            "get": {
                "description": "Return a WAF policy file in JSON format.",
                "operationId": "ExportPolicy",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The system successfully exported a WAF policy"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy in JSON format",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the WAF policy.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/enforcement-readiness": {
            "get": {
                "description": "Requests a policy enforcement readiness.",
                "operationId": "GetPolicyEnforcementReadiness",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyEnforcementReadiness"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a policy enforcement readiness"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy enforcement readiness",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the WAF policy.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/evasion-violations": {
            "get": {
                "description": "Requests a list of policy evasion technique violations. Query the '/v1/evasion-violations' endpoint for detailed information about each violation.",
                "operationId": "ListPolicyEvasions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyEvasionList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy evasion technique violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy evasion technique violations",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/evasion-violations/{viol-id}": {
            "get": {
                "description": "Requests a specific policy evasion technique violation. Query the '/v1/evasion-violations' endpoint for detailed information about the violation.",
                "operationId": "GetPolicyEvasion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyEvasionViolation"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a policy evasion technique violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy evasion technique violation",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of sub violation",
                    "in": "path",
                    "name": "viol-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy evasion technique violation.",
                "operationId": "UpdatePolicyEvasion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyEvasionViolation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyEvasionViolation"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy evasion technique violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy evasion technique violation",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/evasion-violations:update": {
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates a list of policy evasion technique violations. Query the '/v1/evasion-violations' endpoint for detailed information about each violation.",
                "operationId": "UpdatePolicyEvasions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyEvasionList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal._links.Singular"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy evasion technique violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a list of policy evasion technique violation",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/filetype-violations": {
            "get": {
                "description": "Requests a list of policy file type violations. Query the '/v1/filetype-violations' endpoint for detailed information about each violation.",
                "operationId": "ListPolicyFiletypeViolations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyViolationsList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy file type violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy file type violations",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/filetype-violations/{viol-id}": {
            "get": {
                "description": "Requests a specific policy file type violation. Query the '/v1/filetype-violations' endpoint for detailed information about the violation.",
                "operationId": "GetPolicyFiletypeViolation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyViolation"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy file type violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy file type violation",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of sub violation",
                    "in": "path",
                    "name": "viol-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy file type violation.",
                "operationId": "UpdatePolicyFiletypeViolation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyViolation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyViolation"
                                }
                            }
                        },
                        "description": "Successful response status for updating a policy file type violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy file type violation",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/filetype-violations:update": {
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates a list of policy file type violations. Query the '/v1/filetype-violations' endpoint for detailed information about each violation.",
                "operationId": "UpdatePolicyFiletypeViolations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyViolationsList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal._links.Singular"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy file type violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update policy file type violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/filetypes": {
            "get": {
                "description": "Requests a list of policy file types.",
                "operationId": "ListPolicyFiletypes",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyFiletypeList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy file types"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy file types",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a policy file type.",
                "operationId": "CreatePolicyFiletype",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyFiletype"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyFiletype"
                                }
                            }
                        },
                        "description": "Successful response status for creating a policy file type"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a policy file type",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/filetypes/{filetype-id}": {
            "delete": {
                "description": "Deletes a specific policy file type.",
                "operationId": "DeletePolicyFiletype",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified policy file type"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a policy file type",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a specific policy file type.",
                "operationId": "GetPolicyFiletype",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyFiletype"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy file type"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy file type",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of file type",
                    "in": "path",
                    "name": "filetype-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy file type.",
                "operationId": "UpdatePolicyFiletype",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyFiletype"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyFiletype"
                                }
                            }
                        },
                        "description": "Successful response status for updating a policy file type"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy file type",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/general-settings": {
            "get": {
                "description": "Requests a list of the policy general settings.",
                "operationId": "ListPolicyGeneralSettings",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyGeneralSettings"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy general settings"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy general settings",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the policy general settings.",
                "operationId": "UpdatePolicyGeneralSettings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyGeneralSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyGeneralSettings"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy general settings"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update policy general settings",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/http-rfc-violations": {
            "get": {
                "description": "Requests a list of policy HTTP RFC violations. Query the '/v1/http-rfc-violations' endpoint for detailed information about each violation.",
                "operationId": "ListPolicyHTTPRFCViolations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyHttpRFCList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy HTTP RFC violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy HTTP RFC violations",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/http-rfc-violations/{viol-id}": {
            "get": {
                "description": "Requests a specific policy HTTP RFC violation. Query the '/v1/http-rfc-violations' endpoint for detailed information about the violation.",
                "operationId": "GetPolicyHTTPRFCViolation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyHttpRFCViolation"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy HTTP RFC violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy HTTP RFC violation",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of sub violation",
                    "in": "path",
                    "name": "viol-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy HTTP RFC violation.",
                "operationId": "UpdatePolicyHTTPRFCViolation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyHttpRFCViolation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyHttpRFCViolation"
                                }
                            }
                        },
                        "description": "Successful response status for updating a policy HTTP RFC violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy HTTP RFC violation",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/http-rfc-violations:update": {
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates a list of policy HTTP RFC violations. Query the '/v1/http-rfc-violations' endpoint for detailed information about each violation.",
                "operationId": "UpdatePolicyHTTPRFCViolations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyHttpRFCList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal._links.Singular"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy HTTP RFC violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update HTTP RFC violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/ip-addresses": {
            "get": {
                "description": "Requests a list of policy IP addresses.",
                "operationId": "ListPolicyIPAddresses",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyIpAddressList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy IP addresses"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy IP addresses",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/ip-addresses/{ipAddressAndMask}": {
            "get": {
                "description": "Requests a specific policy IP address.",
                "operationId": "GetPolicyIPAddress",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyIpAddressDetail"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy IP address"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy IP address",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "IP address and mask (optional), separated by tilde",
                    "examples": {
                        "example1": {
                            "description": "IPv4 IP address ~ IP mask",
                            "value": "1.2.3.4~255.255.255.255"
                        },
                        "example2": {
                            "description": "IPv6 IP address ~ IP mask",
                            "value": "1080::800:200c:417a~ffff:ffff:ffff:ffff:ffff:ffff"
                        },
                        "example3": {
                            "description": "IPv4 IP address ~ IP mask CIDR",
                            "value": "192.168.9.15~24"
                        },
                        "example4": {
                            "description": "IPv6 IP address ~ IP mask CIDR",
                            "value": "2001:0db8:85a3:0000:0000:8a2e:0370:7334~24"
                        },
                        "example5": {
                            "description": "IPv4 IP address",
                            "value": "1.2.3.4"
                        },
                        "example6": {
                            "description": "IPv6 IP address",
                            "value": "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
                        }
                    },
                    "in": "path",
                    "name": "ipAddressAndMask",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/policy-builder": {
            "get": {
                "description": "Requests the policy builder settings.",
                "operationId": "GetPolicyBuilderSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyBuilderSettings"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy builder settings"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy builder settings.",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "WAF Policy ID",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Partially updates the policy builder settings.",
                "operationId": "PatchPolicyBuilderSettings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyBuilderSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyBuilderSettings"
                                }
                            }
                        },
                        "description": "Successful response status for partially updating policy builder settings"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Partially update policy builder settings.",
                "tags": [
                    "WafFeature"
                ]
            },
            "put": {
                "description": "Updates the policy builder settings.",
                "operationId": "UpdatePolicyBuilderSettings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyBuilderSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyBuilderSettings"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy builder settings"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update policy builder settings.",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/request-logger": {
            "get": {
                "description": "Requests a specific policy request logger.",
                "operationId": "GetPolicyRequestLogger",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyRequestLogger"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy request logger"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy request logger",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a policy request logger.",
                "operationId": "CreatePolicyRequestLogger",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyRequestLogger"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyRequestLogger"
                                }
                            }
                        },
                        "description": "Successful response status for creating a policy request logger"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a policy request logger",
                "tags": [
                    "WafFeature"
                ]
            },
            "put": {
                "description": "Updates policy request logger.",
                "operationId": "UpdatePolicyRequestLogger",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyRequestLogger"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyRequestLogger"
                                }
                            }
                        },
                        "description": "Successful response status for creating a policy request logger"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update policy request logger",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/signature-sets": {
            "get": {
                "description": "Requests a list of policy signature-sets.",
                "operationId": "ListPolicySignatureSets",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySignatureSetList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy signature-sets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy signature-sets",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a policy signature-set.",
                "operationId": "CreatePolicySignatureSet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/PolicySignatureSetNoAccuracy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySignatureSetNoAccuracy"
                                }
                            }
                        },
                        "description": "Successful response status for creating a policy signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a policy signature-set",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/signature-sets/{set-id}": {
            "delete": {
                "description": "Deletes a specific policy signature-set.",
                "operationId": "DeletePolicySignatureSet",
                "responses": {
                    "204": {
                        "description": "Successful deleted the specified policy signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a policy signature-set",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a specific policy signature-set.",
                "operationId": "GetPolicySignatureSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySignatureSet"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy signature-set",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of signature-set",
                    "in": "path",
                    "name": "set-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy signature-set.",
                "operationId": "UpdatePolicySignatureSet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/SignatureSetAction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySignatureSetNoAccuracy"
                                }
                            }
                        },
                        "description": "Successful response status for updating a policy signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy signature-set",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/signatures": {
            "get": {
                "description": "Requests a list of policy signatures.",
                "operationId": "ListPolicySignatures",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySignatureList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy signatures"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy signatures",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/signatures/{sig-id}": {
            "get": {
                "description": "Requests a specific policy signature.",
                "operationId": "GetPolicySignature",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySignature"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy signature"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy signature",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "WAF signature ID",
                    "in": "path",
                    "name": "sig-id",
                    "required": true,
                    "schema": {
                        "pattern": "[2-3]{1}[0-9]{8}",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/suggestions": {
            "get": {
                "description": "Requests the details of a specific policy suggestion.",
                "operationId": "ListPolicySuggestions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySuggestionList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy's suggestions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a list of a policy's suggestions.",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "WAF Policy ID",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/suggestions/{suggestion-id}": {
            "delete": {
                "description": "Deletes a specific suggestion.",
                "operationId": "DeletePolicySuggestion",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified suggestion"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a suggestion",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a policy suggestion's details.",
                "operationId": "GetPolicySuggestion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySuggestion"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy suggestion"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy suggestion details",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "WAF Policy ID",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "suggestion ID",
                    "in": "path",
                    "name": "suggestion-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy suggestion.",
                "operationId": "UpdatePolicySuggestion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicySuggestion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicySuggestion"
                                }
                            }
                        },
                        "description": "Successful response status for updating a policy suggestion"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a policy suggestion",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/suggestions\\\\:delete": {
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a list of policy suggestions.",
                "operationId": "DeletePolicySuggestions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicySuggestionsIDsList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified suggestions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a list of policy suggestions by ids",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/suggestions\\\\:update": {
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates a list of policy suggestions.",
                "operationId": "UpdatePolicySuggestions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicySuggestionList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal._links.Singular"
                                }
                            }
                        },
                        "description": "Successful response status for updating policy suggestions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a list of policy suggestions",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/violations": {
            "get": {
                "description": "Requests a list of policy violations. Query the '/v1/violations' endpoint for detailed information about each violation.",
                "operationId": "ListPolicyViolations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyViolationsList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy violations",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/policies/{id}/violations/{viol-id}": {
            "get": {
                "description": "Requests a specific policy violation. Query the '/v1/violations' endpoint for detailed information about the violation.",
                "operationId": "GetPolicyViolation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyViolation"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy file type violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy violation",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF policy",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                {
                    "description": "UUID of sub violation",
                    "in": "path",
                    "name": "viol-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific policy violation.",
                "operationId": "UpdatePolicyViolation",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyViolation"
                                }
                            }
                        },
                        "description": "Policy violation update attempt succeeded."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Updates a policy violation with given id",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policies/{id}/violations:update": {
            "parameters": [
                {
                    "description": "The UUID of the WAF policy.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates a list of policy violations. Query the '/v1/violations' endpoint for detailed information about each violation.",
                "operationId": "UpdatePolicyViolations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyViolationsList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal._links.Singular"
                                }
                            }
                        },
                        "description": "Policy violation update attempt succeeded."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update policy violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/policy-geolocations": {
            "post": {
                "description": "Allow or disallow a geolocation.",
                "operationId": "ModifyGeolocation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyGeolocation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successfully modified the geolocation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Allow or disallow a geolocation",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/signature-sets": {
            "get": {
                "description": "Requests a list of signature-sets.",
                "operationId": "ListSignatureSets",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SignatureSetList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving signature-sets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return signature-sets",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Creates a signature-set.",
                "operationId": "CreateSignatureSet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafSignatureSet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SignatureSet"
                                }
                            }
                        },
                        "description": "Successful response status for creating a signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a signature-set",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/signature-sets/{id}": {
            "delete": {
                "description": "Deletes a specific signature-set.",
                "operationId": "DeleteSignatureSet",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a signature-set",
                "tags": [
                    "WafFeature"
                ]
            },
            "get": {
                "description": "Requests a specific signature-set.",
                "operationId": "GetSignatureSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SignatureSet"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a signature-set",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of signature-set",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates a specific signature-set.",
                "operationId": "UpdateSignatureSet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "./schemas/waf-custom-schemas.yaml#/components/schemas/WafSignatureSet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SignatureSet"
                                }
                            }
                        },
                        "description": "Successful response status for updating a signature-set"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a signature-set",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/signatures": {
            "get": {
                "description": "Requests a list of signature details.",
                "operationId": "ListSignatures",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SignatureList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving signatures"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a list of signature details",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/signatures/{sig-id}": {
            "get": {
                "description": "Requestssignature details.",
                "operationId": "GetSignature",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Signature"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policy signature"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return signature details",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "WAF signature ID",
                    "in": "path",
                    "name": "sig-id",
                    "required": true,
                    "schema": {
                        "pattern": "[2-3]{1}[0-9]{8}",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tags/policies": {
            "get": {
                "description": "Requests a list of tags on WAF policies.",
                "operationId": "ListPoliciesTags",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PoliciesTagsList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving policies-tags"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return list of tags on WAF policies",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/accept-request": {
            "get": {
                "description": "Requests a list of accept-request tasks.",
                "operationId": "ListAcceptRequestTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AcceptRequestTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving accept-request tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return accept-request tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts the WAF accept-request task.",
                "operationId": "AcceptRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "support_id": {
                                        "description": "Web application traffic log support_id",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "support_id"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Accept-request task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start accept-request task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/accept-request/{id}": {
            "get": {
                "description": "Requests a specific accept-request task.",
                "operationId": "GetAcceptRequestTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.AcceptRequestTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving accept-request task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an accept-request task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/accept-suggestions": {
            "get": {
                "description": "Requests a list of accept-suggestions tasks.",
                "operationId": "ListAcceptSuggestionsTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving accept-suggestions tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return accept-suggestions tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts the WAF policy accept-suggestions task. Required fields are policy, suggestions_ids, and action.",
                "operationId": "AcceptSuggestions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "enum": [
                                            "accept",
                                            "global-accept",
                                            "accept-and-stage"
                                        ],
                                        "type": "string"
                                    },
                                    "policy": {
                                        "description": "WAF policy Name or ID.",
                                        "type": "string"
                                    },
                                    "suggestions_ids": {
                                        "description": "Apply an action to the list of suggestion IDs.",
                                        "items": {
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "action",
                                    "policy",
                                    "suggestions_ids"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Accept-suggestions task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start accept-suggestions task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/accept-suggestions/{id}": {
            "get": {
                "description": "Requests a specific accept-suggestions task.",
                "operationId": "GetAcceptSuggestionsTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving accept-suggestions task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an accept-suggestions task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/clone-policy": {
            "get": {
                "description": "Requests a list of clone-policy tasks and statuses.",
                "operationId": "ListClonePolicyTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ClonePolicyTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving clone-policy tasks and statuses"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return clone-policy tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts the WAF clone-policy task.",
                "operationId": "RunWafClonePolicyTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "clone_policy_tags": {
                                        "description": "Specifies whether to include tags in cloned policy, true by default.",
                                        "type": "boolean"
                                    },
                                    "cloned_policy_name": {
                                        "description": "Cloned WAF policy name.",
                                        "type": "string"
                                    },
                                    "policy_name": {
                                        "description": "WAF policy name to clone.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "policy_name",
                                    "cloned_policy_name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Clone-policy task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start clone-policy task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/clone-policy/{id}": {
            "get": {
                "description": "Requests a specific clone-policy task and current status.",
                "operationId": "GetClonePolicyTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ClonePolicyTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving clone-policy task and status"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an clone-policy task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/deploy-policy": {
            "get": {
                "description": "Requests a list of policy deployment tasks.",
                "operationId": "ListPolicyDeploymentTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF policy deployment tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy deployment tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts WAF policy deployment task to re-deploy the policy to all associated instances.",
                "operationId": "DeployPolicy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "first": {
                                    "value": {
                                        "policy_name": "single_policy"
                                    }
                                },
                                "second": {
                                    "value": {
                                        "policies": [
                                            "first_policy",
                                            "second_policy"
                                        ]
                                    }
                                }
                            },
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/WafSinglePolicyRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/WafMultiplePoliciesRequest"
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "WAF policy deployment task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start WAF policy deployment task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/deploy-policy/{id}": {
            "get": {
                "description": "Requests a specific policy deployment task.",
                "operationId": "GetPolicyDeploymentTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF policy deployment task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy deployment task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of task",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/enforce-ready-entities": {
            "get": {
                "description": "Requests a list of enforce-ready-entities tasks.",
                "operationId": "ListEnforceReadyEntitiesTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.EnforceReadyEntitiesTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving enforce-ready-entities tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return enforce-ready-entities tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts the WAF task to enforce ready entities. Required fields are policy and sections.",
                "operationId": "EnforceReadyEntities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "policy": {
                                        "description": "WAF policy Name or ID.",
                                        "type": "string"
                                    },
                                    "sections": {
                                        "description": "The sections of the entities that will be enforced.",
                                        "items": {
                                            "enum": [
                                                "filetypes",
                                                "websocket-urls",
                                                "urls",
                                                "parameters",
                                                "cookies",
                                                "signatures",
                                                "threat-campaigns",
                                                "redirection-protection-domains",
                                                "http-protocols",
                                                "evasions",
                                                "web-services-securities"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "policy",
                                    "sections"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Enforce-ready-entities task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start enforce-ready-entities task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/enforce-ready-entities/{id}": {
            "get": {
                "description": "Requests a specific enforce-ready-entities task.",
                "operationId": "GetEnforceReadyEntitiesTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.EnforceReadyEntitiesTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving enforce-ready-entities task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an enforce-ready-entities task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of the task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/live-update/install": {
            "get": {
                "description": "Requests a list of live update installation tasks.",
                "operationId": "ListWafLiveUpdateInstallationTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateInstallationTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving live update installation tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return live update installation tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts a live update installation task.",
                "operationId": "RunWafLiveUpdateInstallationTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "file_name": {
                                        "description": "Live update file name to install.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file_name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Live update installation task created."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start live update installation task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/live-update/install/{id}": {
            "get": {
                "description": "Requests a specific live update installation task.",
                "operationId": "GetWafLiveUpdateInstallationTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateInstallationTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a live update installation task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a live update installation task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of the installation task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/live-update/preview": {
            "get": {
                "description": "Requests a list of live update preview tasks.",
                "operationId": "ListWafLiveUpdatePreviewTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdatePreviewTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving live update preview tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return live update preview tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts a task to preview changes included in the live update.",
                "operationId": "RunWafLiveUpdatePreviewTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "file_name": {
                                        "description": "Live update file name to preview.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file_name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Live update preview task created."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start a live update preview task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/live-update/preview/{id}": {
            "get": {
                "description": "Requests a specific live update preview task.",
                "operationId": "GetWafLiveUpdatePreviewTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdatePreviewTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a live update preview task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a live update preview task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of the installation task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/live-update/upload": {
            "get": {
                "description": "Requests a list of live update upload tasks.",
                "operationId": "ListWafLiveUpdateUploadTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateUploadTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving live update upload tasks."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return live update upload tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts a live update upload task.",
                "operationId": "RunWafLiveUpdateUploadTask",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveUpdateUploadData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Live update upload task created."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "413": {
                        "$ref": "#/components/responses/PayloadTooLarge"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start live update upload task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/live-update/upload/{id}": {
            "get": {
                "description": "Requests a specific live update upload task.",
                "operationId": "GetWafLiveUpdateUploadTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.LiveUpdateUploadTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a live update upload task."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a live update upload task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of live update task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/policy-import": {
            "get": {
                "description": "Requests a list of policy import tasks.",
                "operationId": "ListWafPolicyImportTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF policy import tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return policy import tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts a WAF policy import task.",
                "operationId": "RunWafPolicyImportTask",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyImportData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "WAF policy import task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "413": {
                        "$ref": "#/components/responses/PayloadTooLarge"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start WAF policy import task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/policy-import/{id}": {
            "get": {
                "description": "Requests a specific policy import task.",
                "operationId": "GetWafPolicyImportTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving a WAF policy import task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a policy import task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of task",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/tasks/update-signatures-enforcement": {
            "get": {
                "description": "Requests a list of update-signatures-enforcement tasks.",
                "operationId": "ListSignaturesEnforcementTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTasks"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving update-signatures-enforcement tasks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return update-signatures-enforcement tasks",
                "tags": [
                    "WafFeature"
                ]
            },
            "post": {
                "description": "Starts WAF policy update-signatures-enforcement task. Either `filter` or `signature_ids` is required. These must be used together with the `action` and `policy_name` attributes.",
                "operationId": "UpdateSignaturesEnforcement",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "enum": [
                                            "enforce",
                                            "stage",
                                            "disable"
                                        ],
                                        "type": "string"
                                    },
                                    "filter": {
                                        "description": "Apply `action` using these filter policy signatures.",
                                        "example": "status eq 'staging' or status eq 'enforced'",
                                        "type": "string"
                                    },
                                    "policy_name": {
                                        "description": "WAF policy name.",
                                        "example": "new_waf_policy",
                                        "type": "string"
                                    },
                                    "signature_ids": {
                                        "description": "Apply `action` on this list of signature IDs.",
                                        "items": {
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "action",
                                    "policy_name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Update-signatures-enforcement task created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Start WAF policy update-signatures-enforcement task",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/tasks/update-signatures-enforcement/{id}": {
            "get": {
                "description": "Requests a specific update-signatures-enforcement task.",
                "operationId": "GetSignaturesEnforcementTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.PolicyTask"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving update-signatures-enforcement task"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an update-signatures-enforcement task",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of task",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/templates": {
            "get": {
                "description": "Requests a list of WAF templates.",
                "operationId": "ListTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF templates"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return WAF templates",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/templates/{id}": {
            "get": {
                "description": "Requests a specific WAF template.",
                "operationId": "GetTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafPolicy"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF template"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a WAF template",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of WAF template",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/api/waf/v1/version": {
            "get": {
                "description": "Requests the WAF schema version.",
                "operationId": "GetWafSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.WafVersionInfo"
                                }
                            }
                        },
                        "description": "WAF schema version information"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return schema version",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/violations": {
            "get": {
                "description": "Requests a list of all supported violations.",
                "operationId": "ListViolations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ViolationList"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving violations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all supported violations",
                "tags": [
                    "WafFeature"
                ]
            }
        },
        "/api/waf/v1/violations/{viol-id}": {
            "get": {
                "description": "Requests a specific violation.",
                "operationId": "GetSpecificViolation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Violation"
                                }
                            }
                        },
                        "description": "Successful response status for retrieving WAF violation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a violation",
                "tags": [
                    "WafFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of violation",
                    "in": "path",
                    "name": "viol-id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/mgmt/shared/appsvcs/declare": {
            "get": {
                "description": "Use GET to fetch the AS3 declarations of an instance",
                "operationId": "GetDeclarations",
                "parameters": [
                    {
                        "description": "address of the instance.",
                        "in": "query",
                        "name": "target",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "declaration": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "Service is unavailable, please try again later."
                    }
                },
                "summary": "get AS3 declarations",
                "tags": [
                    "AS3Feature"
                ]
            },
            "patch": {
                "description": "Use patch to edit and deploy a configuration to a target BIGIP-Next.",
                "operationId": "PatchDeclaration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/patchDeclarationDefinition"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "declaration": {
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The result of the deployment",
                                            "items": {
                                                "$ref": "#/components/schemas/resultDefinition"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "declaration": {
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The result of the deployment",
                                            "items": {
                                                "$ref": "#/components/schemas/resultDefinition"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "An invalid configuration was provided"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "Service is unavailable, please try again later."
                    }
                },
                "summary": "patch AS3 declaration to BIGIP-Next.",
                "tags": [
                    "AS3Feature"
                ]
            },
            "post": {
                "description": "Use POST to deploy a configuration to a target system. You must supply a request document with each POST.",
                "operationId": "PostDeclaration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/serviceDefinition"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "declaration": {
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The result of the deployment",
                                            "items": {
                                                "$ref": "#/components/schemas/resultDefinition"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "declaration": {
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The result of the deployment",
                                            "items": {
                                                "$ref": "#/components/schemas/resultDefinition"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "An invalid configuration was provided"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "Service is unavailable, please try again later."
                    }
                },
                "summary": "post AS3 declaration to MBIP-MA",
                "tags": [
                    "AS3Feature"
                ]
            }
        },
        "/mgmt/shared/appsvcs/declare/{tenantName}": {
            "get": {
                "description": "Use GET to fetch the AS3 declaration of a tenant in an instance",
                "operationId": "GetDeclaration",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "declaration": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "Service is unavailable, please try again later."
                    }
                },
                "summary": "get AS3 declaration of a tenant",
                "tags": [
                    "AS3Feature"
                ]
            },
            "parameters": [
                {
                    "description": "tenant name",
                    "in": "path",
                    "name": "tenantName",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "address of the instance.",
                    "in": "query",
                    "name": "target",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/mgmt/shared/appsvcs/info": {
            "get": {
                "description": "Returns the AS3 version information",
                "operationId": "GetInfo",
                "parameters": [
                    {
                        "description": "The instance IP address.",
                        "in": "query",
                        "name": "target",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "release": "0",
                                    "schemaCurrent": "3.39.0",
                                    "schemaMinimum": "3.0.0",
                                    "version": "1.14.5"
                                },
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AS3error"
                                }
                            }
                        },
                        "description": "Service is unavailable, please try again later."
                    }
                },
                "summary": "Return AS3 version information",
                "tags": [
                    "AS3Feature"
                ]
            }
        },
        "/mgmt/shared/appsvcs/openapi": {
            "get": {
                "description": "Requests the OpenAPI specification of AS3 feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification response"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "AS3Feature"
                ]
            }
        },
        "/mgmt/shared/fast/applications": {
            "get": {
                "description": "Returns a list of all applications.",
                "operationId": "GetAllApplications",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "example": [
                                    {
                                        "_links": {
                                            "self": {
                                                "href": "/applications/tenantName/applicationName"
                                            }
                                        },
                                        "appName": "applicationName",
                                        "deployed": true,
                                        "deploymentName": "testDeployment",
                                        "description": "Description text",
                                        "id": "43d8ff96-4b8c-41d2-8993-6a6701867cee",
                                        "instanceID": "53d8ff96-4b8c-41d2-8993-4a6701867cec",
                                        "lastModified": "2022-02-15T21:47:55.081743-08:00",
                                        "parameters": {},
                                        "setName": "setName",
                                        "target": {
                                            "address": "1.2.3.4",
                                            "hostname": "example.f5test.net"
                                        },
                                        "templateName": "templateName",
                                        "tenantName": "tenantName"
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Applications"
                                }
                            }
                        },
                        "description": "List of all applications."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all applications",
                "tags": [
                    "FastFeature"
                ]
            },
            "post": {
                "description": "Creates an AS3 application using the FAST template.",
                "operationId": "RunCreateApplicationTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Application With RandomTenantName": {
                                    "value": {
                                        "name": "set/httpRandom2",
                                        "parameters": {
                                            "application_name": "AppName1",
                                            "server_addresses": [
                                                "10.2.3.6"
                                            ],
                                            "service_port": 80,
                                            "virtual_address": "1.2.3.4",
                                            "virtual_port": 80
                                        },
                                        "target": {
                                            "address": "10.145.64.195",
                                            "hostname": "1.2.3.4"
                                        }
                                    }
                                },
                                "Application Without RandomTenantName": {
                                    "value": {
                                        "name": "cm-examples/http-lb",
                                        "parameters": {
                                            "application_name": "AppNameHttp",
                                            "server_addresses": [
                                                "10.2.3.6"
                                            ],
                                            "service_port": 80,
                                            "tenant_name": "TenantNameHttp",
                                            "virtual_address": "1.2.3.4",
                                            "virtual_port": 80
                                        },
                                        "target": {
                                            "address": "10.145.64.195",
                                            "hostname": "1.2.3.4"
                                        }
                                    }
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateApplicationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/ApplicationTaskCreated"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "FAST-00017: Target instance address or hostname is required.",
                                    "status": 400
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create an application",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/applications/tasks": {
            "get": {
                "description": "Returns a list of application tasks.",
                "operationId": "GetApplicationTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApplicationTasks"
                                }
                            }
                        },
                        "description": "List of application tasks."
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return application tasks",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/applications/tasks/{taskID}": {
            "get": {
                "description": "Returns a specific application task.",
                "operationId": "GetApplicationTask",
                "parameters": [
                    {
                        "description": "UUID of the application task.",
                        "in": "path",
                        "name": "taskID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.ApplicationTask"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Task ID a738959a-6209-498a-8212-f4284d563158 not found.",
                                    "status": 404
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The specified resource was not found."
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return an application task",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/applications/{id}": {
            "get": {
                "description": "Requests a specific application.",
                "operationId": "GetApplicationByID",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Application"
                                }
                            }
                        },
                        "description": "Identifies a specific application."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return single application",
                "tags": [
                    "FastFeature"
                ]
            },
            "parameters": [
                {
                    "description": "The UUID of the application.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/mgmt/shared/fast/applications/{tenantName}/{appName}": {
            "delete": {
                "description": "Creates a task to delete an individual application.",
                "operationId": "RunDeleteApplicationTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/DeleteApplicationTaskCreated"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "FAST-00017: Target instance address or hostname is required.",
                                    "status": 400
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Creates a task to delete an individual application.",
                "tags": [
                    "FastFeature"
                ]
            },
            "get": {
                "description": "Returns a list of applications and the instances to which they are deployed.",
                "operationId": "GetApplicationsByTenantAndAppName",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_links": {
                                            "self": {
                                                "href": "/applications/tenant_test1/app_test1"
                                            }
                                        },
                                        "appName": "app_test1",
                                        "deployed": true,
                                        "deploymentName": "tenant_test1:app_test1",
                                        "description": null,
                                        "id": "cde6d551-9cf1-4853-a21d-dd28cd754746",
                                        "instanceID": "dadd5394-9fc4-4fca-a9a0-a6d35741df28",
                                        "lastModified": "2022-06-02T20:38:14.198264-07:00",
                                        "parameters": {
                                            "application_name": "app_test1",
                                            "server_addresses": [
                                                "1.1.1.99"
                                            ],
                                            "service_port": 80,
                                            "tenant_name": "example_tenant",
                                            "virtual_address": "1.2.3.4",
                                            "virtual_port": 80
                                        },
                                        "setName": "set_name2",
                                        "target": {
                                            "address": "1.2.3.4"
                                        },
                                        "templateName": "http_name2",
                                        "tenantName": "tenant_test1"
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Applications"
                                }
                            }
                        },
                        "description": "Returns a list of applications."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Unable to find the application with provided tenant name (example_tenant) and application name (example_app).",
                                    "status": 404
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The specified resource was not found."
                    }
                },
                "summary": "Return applications",
                "tags": [
                    "FastFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Name of the tenant associated with this application.",
                    "in": "path",
                    "name": "tenantName",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "The name of the application to retrieve.",
                    "in": "path",
                    "name": "appName",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Update an existing, deployed FAST Application with the supplied parameters. Existing parameter values from the deployed Application will be used as defaults for any missing parameter values.",
                "operationId": "UpdateApplicationTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "parameters": {
                                    "server_addresses": [
                                        "10.0.0.1"
                                    ]
                                },
                                "target": {
                                    "address": "1.2.3.4",
                                    "hostname": "example.host.net"
                                }
                            },
                            "schema": {
                                "additionalProperties": false,
                                "properties": {
                                    "parameters": {
                                        "$ref": "#/components/schemas/ParametersDefinition"
                                    },
                                    "target": {
                                        "$ref": "#/components/schemas/TargetInstanceDefinition"
                                    }
                                },
                                "required": [
                                    "parameters",
                                    "target"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/PatchApplicationTaskCreated"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "FAST-00017: Target instance address or hostname is required.",
                                    "status": 400
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Updates application parameters",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/openapi": {
            "get": {
                "description": "Requests the OpenAPI specification of FAST feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification response."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return OpenAPI specification",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/render": {
            "post": {
                "description": "Performs dry-run of an application on the specified instance. Dry-run sends the declaration through all validation checks but does not attempt to deploy the configuration on the target instance.",
                "operationId": "CreateDryRunTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "default/certTemplate",
                                "parameters": {
                                    "application_name": "testApp1",
                                    "certificatesEnum": "testCert200",
                                    "serverAddresses": [
                                        "10.2.3.6"
                                    ],
                                    "servicePort": 80,
                                    "tenant_name": "testTenant1",
                                    "virtualAddress": "1.2.3.4",
                                    "virtualPort": 80
                                },
                                "target": {
                                    "address": "10.145.75.59"
                                }
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateApplicationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/ApplicationTaskCreated"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Perform dry-run of an application",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/schemas": {
            "post": {
                "description": "Creates a JSON schema from template.",
                "operationId": "CreateSchemaTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "template": "setA/templateA"
                            },
                            "schema": {
                                "$ref": "#/components/schemas/CreateSchemaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TaskCreatedResponse"
                                }
                            }
                        },
                        "description": "Request accepted and schema task created. Poll the link in the response to confirm the task status."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a JSON schema from template",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/schemas/tasks/{taskID}": {
            "get": {
                "description": "Returns a specific JSON schema task.",
                "operationId": "GetSchemaTask",
                "parameters": [
                    {
                        "description": "UUID of the JSON schema task.",
                        "in": "path",
                        "name": "taskID",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.SchemaTask"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return JSON schema task",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/template-tasks": {
            "get": {
                "description": "Returns a list of template tasks.",
                "operationId": "GetTemplateTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateTasks"
                                }
                            }
                        },
                        "description": "List of template tasks."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all template tasks",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/template-tasks/{id}": {
            "get": {
                "description": "Returns a specific template task.",
                "operationId": "GetTemplateTaskByID",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/selectParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateTask"
                                }
                            }
                        },
                        "description": "Identifies a specific template task."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return template task",
                "tags": [
                    "FastFeature"
                ]
            },
            "parameters": [
                {
                    "description": "UUID of template task.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            ]
        },
        "/mgmt/shared/fast/templates": {
            "get": {
                "description": "Returns a list of all the TemplateSetName and TemplateName pairs.",
                "operationId": "GetTemplates",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": [
                                    "example/httpTemplate",
                                    "example/httpsTemplate"
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateNames"
                                }
                            }
                        },
                        "description": "List of all the templates."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all TemplateSetName and TemplateName pairs",
                "tags": [
                    "FastFeature"
                ]
            },
            "post": {
                "description": "Creates a new FAST template.",
                "operationId": "RunCreateTemplateTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Create a FAST template",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/templates/{set_name}/{name}": {
            "delete": {
                "description": "Deletes an unpublished FAST template from BIG-IP Next Central Manager.",
                "operationId": "DeleteTemplate",
                "responses": {
                    "204": {
                        "description": "The FAST template was deleted."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Delete a FAST template",
                "tags": [
                    "FastFeature"
                ]
            },
            "get": {
                "description": "Returns the specified template.",
                "operationId": "GetTemplate",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "body": "<full template here>",
                                    "description": "http template example",
                                    "file_type": "MST",
                                    "id": "53b12b55-1ed4-4321-9196-388949623db8",
                                    "last_updated": "2022-01-31T15:18:46.098462-08:00",
                                    "name": "httpTemplate",
                                    "published": true,
                                    "set_name": "exampleTemplates"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        },
                        "description": "A template"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a template",
                "tags": [
                    "FastFeature"
                ]
            },
            "parameters": [
                {
                    "description": "Name of template set.",
                    "in": "path",
                    "name": "set_name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "Name of the template.",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Partially updates the FAST template object. The PATCH operation enables updates to only the name, set_name, description, and published properties of the template.",
                "operationId": "PatchTemplate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The FAST template was updated successfully."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Update a FAST template's name and status",
                "tags": [
                    "FastFeature"
                ]
            },
            "put": {
                "description": "Replaces the entire FAST template object. Payload must contain all the required properties. The PUT operation enables updates to the name, set_name, file_type, description, published and body properties of the template.",
                "operationId": "RunUpdateTemplateTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/TaskCreated"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Replace FAST template",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/templatesets": {
            "get": {
                "description": "Request a list of the template sets, each containing a list of templates in that set.",
                "operationId": "GetTemplateSetsWithTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateSetsWithTemplates"
                                }
                            }
                        },
                        "description": "List of the template sets."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a list of the template sets.",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/templatesetslist": {
            "get": {
                "description": "Returns all template sets.",
                "operationId": "ListTemplateSets",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.TemplateSets"
                                }
                            }
                        },
                        "description": "List of all template set names."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return all template set names",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/templateslist": {
            "get": {
                "description": "Request a list of all of the templates.",
                "operationId": "ListTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sortParam"
                    },
                    {
                        "$ref": "#/components/parameters/selectParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.Templates"
                                }
                            }
                        },
                        "description": "List of all templates."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "501": {
                        "$ref": "#/components/responses/NotImplemented"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return a list of all the templates.",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/mgmt/shared/fast/v1/version": {
            "get": {
                "description": "Returns the FAST feature schema version.",
                "operationId": "GetFastSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.FastVersionInfo"
                                }
                            }
                        },
                        "description": "Successful response for retrieving FAST feature schema version information."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "summary": "Return FAST feature schema version",
                "tags": [
                    "FastFeature"
                ]
            }
        },
        "/openapi": {
            "get": {
                "description": "Returns OpenAPI specification for Gateway feature.",
                "operationId": "GetOpenAPI",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIResponse"
                                }
                            }
                        },
                        "description": "OpenAPI specification"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Return OpenAPI specification",
                "tags": [
                    "GatewayFeature"
                ]
            }
        },
        "/v1/version": {
            "get": {
                "description": "Returns schema version of the Gateway feature.",
                "operationId": "GetSharedSchemaVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hal.GatewayVersionInfo"
                                }
                            }
                        },
                        "description": "Gateway schema version information"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "default": {
                        "$ref": "#/components/responses/InternalError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Return schema version",
                "tags": [
                    "GatewayFeature"
                ]
            }
        }
    },
    "x-components": {},
    "x-global-options": {
        "go_package": "gateway"
    }
}